{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$short.js",
"lineCount":30,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/short.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$short\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","ShortCurve","conf","Base","call","a","toRed","BN","red","b","tinv","two","redInvm","zeroA","fromRed","cmpn","threeA","sub","p","endo","_getEndomorphism","_endoWnafT1","Array","_endoWnafT2","Point","curve","x","y","isRed","BasePoint","inf","forceRed","JPoint","z","one","zOne","elliptic","inherits","base","assert","utils","prototype","ShortCurve.prototype._getEndomorphism","g","n","modn","beta","betas","_getEndoRoots","cmp","lambda","lambdas","mul","redMul","basis","map","vec","_getEndoBasis","ShortCurve.prototype._getEndoRoots","num","mont","ntinv","redNeg","s","redSqrt","l1","redAdd","l2","redSub","ShortCurve.prototype._getEndoBasis","aprxSqrt","ushrn","Math","floor","bitLength","v","clone","x1","y1","x2","y2","a0","b0","a1","b1","b2","prevR","i","r","u","q","div","neg","a2","len1","sqr","add","len2","negative","_endoSplit","ShortCurve.prototype._endoSplit","k","v1","v2","c1","divRound","c2","p1","p2","q1","q2","k1","k2","pointFromX","ShortCurve.prototype.pointFromX","odd","redSqr","redIAdd","zero","Error","isOdd","point","validate","ShortCurve.prototype.validate","ax","rhs","redISub","_endoWnafMulAdd","ShortCurve.prototype._endoWnafMulAdd","points","coeffs","jacobianResult","npoints","ncoeffs","length","split","_getBeta","ineg","res","_wnafMulAdd","j","ShortCurve.prototype.point","pointFromJSON","ShortCurve.prototype.pointFromJSON","obj","fromJSON","Point.prototype._getBeta","pre","precomputed","endoMul","naf","wnd","doubles","step","toJSON","Point.prototype.toJSON","slice","Point.fromJSON","obj2point","JSON","parse","concat","inspect","Point.prototype.inspect","isInfinity","toString","Point.prototype.isInfinity","Point.prototype.add","eq","dbl","c","nx","ny","Point.prototype.dbl","ys1","dyinv","getX","Point.prototype.getX","getY","Point.prototype.getY","Point.prototype.mul","_hasDoubles","_fixedNafMul","_wnafMul","mulAdd","Point.prototype.mulAdd","jmulAdd","Point.prototype.jmulAdd","Point.prototype.eq","Point.prototype.neg","_precompute","negate","toJ","Point.prototype.toJ","jpoint","ShortCurve.prototype.jpoint","toP","JPoint.prototype.toP","zinv","zinv2","ay","JPoint.prototype.neg","JPoint.prototype.add","pz2","z2","u1","u2","s1","s2","h","h2","h3","nz","mixedAdd","JPoint.prototype.mixedAdd","dblp","JPoint.prototype.dblp","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","JPoint.prototype.dbl","_zeroDbl","_threeDbl","_dbl","JPoint.prototype._zeroDbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","JPoint.prototype._threeDbl","delta","gamma","alpha","beta4","beta8","ggamma8","JPoint.prototype._dbl","jy2","jxd4","jyd8","trpl","JPoint.prototype.trpl","zz","mm","ee","yyu4","JPoint.prototype.mul","kbase","JPoint.prototype.eq","type","z3","pz3","eqXToP","JPoint.prototype.eqXToP","zs","rx","xc","redN","iadd","JPoint.prototype.inspect","JPoint.prototype.isInfinity"]
}
