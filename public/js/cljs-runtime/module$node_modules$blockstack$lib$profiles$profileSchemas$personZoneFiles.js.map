{
"version":3,
"file":"module$node_modules$blockstack$lib$profiles$profileSchemas$personZoneFiles.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,2EAAA,CAA+F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG5JC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,wBAAA,CAUAA,QAAgC,CAACC,QAAD,CAAWC,kBAAX,CAA+BC,QAA/B,CAAyC,CACvE,IAAIC,aAAe,IACnB,IAAI,CAEF,GADAA,YACI,CADW,CAAC,CAAA,CAAGC,SAAAC,cAAJ,EAA6BL,QAA7B,CACX,CAAA,CAACG,YAAAG,eAAA,CAA4B,SAA5B,CAAL,CAEE,KADAH,aACM,CADS,IACT,CAAII,KAAJ,CAAU,gCAAV,CAAN,CAJA,CAMF,MAAOC,CAAP,CAAU,CACVC,OAAAC,MAAA,CAAcF,CAAd,CADU,CAIZ,IAAIG;AAAe,IACnB,IAAIR,YAAJ,EAAuD,CAAvD,CAAoBP,MAAAgB,KAAA,CAAYT,YAAZ,CAAAU,OAApB,CAeA,CAdEF,YAcF,CAdiB,CAAC,CAAA,CAAGG,iBAAAC,gBAAJ,EAAuCZ,YAAvC,CAcjB,EACEa,KAAA,CAAML,YAAN,CAAAM,KAAA,CAAyB,QAAS,CAACC,QAAD,CAAW,CAC3C,MAAOA,SAAAC,KAAA,EADoC,CAA7C,CAAAF,KAAA,CAEQ,QAAS,CAACG,YAAD,CAAe,CAC9B,MAAOC,KAAAC,MAAA,CAAWF,YAAX,CADuB,CAFhC,CAAAH,KAAA,CAIQ,QAAS,CAACM,YAAD,CAAe,CAE1BC,YAAAA,CADeD,YACP,CAAa,CAAb,CAAAC,MACRC,aAAAA,CAAU,CAAC,CAAA,CAAGC,cAAAC,eAAJ,EAAmCH,YAAnC,CAA0CvB,kBAA1C,CAEdC,SAAA,CAASuB,YAAT,CAL8B,CAJhC,CAAAG,MAAA,CAUS,QAAS,CAAClB,KAAD,CAAQ,CACxBD,OAAAoB,KAAA,CAAanB,KAAb,CADwB,CAV1B,CADF,EAeED,OAAAoB,KAAA,CAAa,0BAAb,CACA;AAAA3B,QAAA,CAAS,EAAT,CAhBF,CAfA,KAEO,CACDuB,YAAAA,CAAU,IACd,IAAI,CACFA,YAEA,CAFUJ,IAAAC,MAAA,CAAWtB,QAAX,CAEV,CAAAyB,YAAA,CADaK,OAAAC,OAAAC,iBAAAC,CAAgCR,YAAhCQ,CACHR,QAAA,EAHR,CAIF,MAAOf,KAAP,CAAc,CACdD,OAAAoB,KAAA,CAAanB,KAAb,CADc,CAGhBR,QAAA,CAASuB,YAAT,CATK,CAfgE,CARzE,KAAIrB,UAAYZ,OAAA,CAAQ,yCAAR,CAAhB,CAEIsC,QAAUtC,OAAA,CAAQ,mEAAR,CAFd,CAIIsB,kBAAoBtB,OAAA,CAAQ,8DAAR,CAJxB,CAMIkC,eAAiBlC,OAAA,CAAQ,2DAAR,CAduI;",
"sources":["node_modules/blockstack/lib/profiles/profileSchemas/personZoneFiles.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$profiles$profileSchemas$personZoneFiles\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveZoneFileToPerson = resolveZoneFileToPerson;\n\nvar _zoneFile = require('zone-file');\n\nvar _person = require('./person');\n\nvar _profileZoneFiles = require('../profileZoneFiles');\n\nvar _profileTokens = require('../profileTokens');\n\nfunction resolveZoneFileToPerson(zoneFile, publicKeyOrAddress, callback) {\n  var zoneFileJson = null;\n  try {\n    zoneFileJson = (0, _zoneFile.parseZoneFile)(zoneFile);\n    if (!zoneFileJson.hasOwnProperty('$origin')) {\n      zoneFileJson = null;\n      throw new Error('zone file is missing an origin');\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  var tokenFileUrl = null;\n  if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n    tokenFileUrl = (0, _profileZoneFiles.getTokenFileUrl)(zoneFileJson);\n  } else {\n    var profile = null;\n    try {\n      profile = JSON.parse(zoneFile);\n      var person = _person.Person.fromLegacyFormat(profile);\n      profile = person.profile();\n    } catch (error) {\n      console.warn(error);\n    }\n    callback(profile);\n    return;\n  }\n\n  if (tokenFileUrl) {\n    fetch(tokenFileUrl).then(function (response) {\n      return response.text();\n    }).then(function (responseText) {\n      return JSON.parse(responseText);\n    }).then(function (responseJson) {\n      var tokenRecords = responseJson;\n      var token = tokenRecords[0].token;\n      var profile = (0, _profileTokens.extractProfile)(token, publicKeyOrAddress);\n\n      callback(profile);\n    }).catch(function (error) {\n      console.warn(error);\n    });\n  } else {\n    console.warn('Token file url not found');\n    callback({});\n  }\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","resolveZoneFileToPerson","zoneFile","publicKeyOrAddress","callback","zoneFileJson","_zoneFile","parseZoneFile","hasOwnProperty","Error","e","console","error","tokenFileUrl","keys","length","_profileZoneFiles","getTokenFileUrl","fetch","then","response","text","responseText","JSON","parse","responseJson","token","profile","_profileTokens","extractProfile","catch","warn","_person","Person","fromLegacyFormat","person"]
}
