shadow$provide.module$node_modules$elliptic$lib$elliptic$ec$key=function(global,process,require,module,exports,shadow$shims){function KeyPair(ec,options){this.ec=ec;this.pub=this.priv=null;options.priv&&this._importPrivate(options.priv,options.privEnc);options.pub&&this._importPublic(options.pub,options.pubEnc)}var BN=require("module$node_modules$bn_DOT_js$lib$bn"),assert=require("module$node_modules$elliptic$lib$elliptic").utils.assert;module.exports=KeyPair;KeyPair.fromPublic=function(ec,pub,enc){return pub instanceof
KeyPair?pub:new KeyPair(ec,{pub:pub,pubEnc:enc})};KeyPair.fromPrivate=function(ec,priv,enc){return priv instanceof KeyPair?priv:new KeyPair(ec,{priv:priv,privEnc:enc})};KeyPair.prototype.validate=function(){var pub=this.getPublic();return pub.isInfinity()?{result:!1,reason:"Invalid public key"}:pub.validate()?pub.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N !\x3d O"}:{result:!1,reason:"Public key is not a point"}};KeyPair.prototype.getPublic=function(compact,
enc){"string"===typeof compact&&(enc=compact,compact=null);this.pub||(this.pub=this.ec.g.mul(this.priv));return enc?this.pub.encode(enc,compact):this.pub};KeyPair.prototype.getPrivate=function(enc){return"hex"===enc?this.priv.toString(16,2):this.priv};KeyPair.prototype._importPrivate=function(key,enc){this.priv=new BN(key,enc||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function(key,enc){key.x||key.y?("mont"===this.ec.curve.type?assert(key.x,"Need x coordinate"):
("short"===this.ec.curve.type||"edwards"===this.ec.curve.type)&&assert(key.x&&key.y,"Need both x and y coordinate"),this.pub=this.ec.curve.point(key.x,key.y)):this.pub=this.ec.curve.decodePoint(key,enc)};KeyPair.prototype.derive=function(pub){return pub.mul(this.priv).getX()};KeyPair.prototype.sign=function(msg,enc,options){return this.ec.sign(msg,this,enc,options)};KeyPair.prototype.verify=function(msg,signature){return this.ec.verify(msg,signature,this)};KeyPair.prototype.inspect=function(){return"\x3cKey priv: "+
(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" \x3e"}}
//# sourceMappingURL=module$node_modules$elliptic$lib$elliptic$ec$key.js.map
