{
"version":3,
"file":"module$node_modules$entities$lib$encode.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAWzHC,QAASA,cAAa,CAACC,GAAD,CAAM,CACxB,MAAOC,OAAAC,KAAA,CAAYF,GAAZ,CAAAG,KAAA,EAAAC,OAAA,CAEK,QAAQ,CAACC,OAAD,CAAUC,IAAV,CAAgB,CAC5BD,OAAA,CAAQL,GAAA,CAAIM,IAAJ,CAAR,CAAA,CAAqB,MAArB,CAA2BA,IAA3B,CAAkC,GAClC,OAAOD,QAFqB,CAF7B,CAKA,EALA,CADiB,CAS5BE,QAASA,mBAAkB,CAACF,OAAD,CAAU,CAAA,IAC7BG,OAAS,EADoB,CAE7BC,SAAW,EAEfR,OAAAC,KAAA,CAAYG,OAAZ,CAAAK,QAAA,CAA6B,QAAQ,CAACC,CAAD,CAAI,CACpB,CAAjB,GAAIA,CAAAC,OAAJ,CACIJ,MAAAK,KAAA,CAAY,IAAZ,CAAmBF,CAAnB,CADJ,CAGIF,QAAAI,KAAA,CAAcF,CAAd,CAJiC,CAAzC,CASAF,SAAAK,QAAA,CAAiB,GAAjB,CAAuBN,MAAAO,KAAA,CAAY,EAAZ,CAAvB,CAAyC,GAAzC,CAEA,OAAO,KAAIC,MAAJ,CAAWP,QAAAM,KAAA,CAAc,GAAd,CAAX,CAA+B,GAA/B,CAf0B,CAqBrCE,QAASA,mBAAkB,CAACC,CAAD,CAAI,CAC3B,MACI,QADJ;AAEIA,CAAAC,WAAA,CACgB,CADhB,CAAAC,SAAA,CAEc,EAFd,CAAAC,YAAA,EAFJ,CAMI,GAPuB,CAW/BC,QAASA,eAAc,CAACJ,CAAD,CAAI,CAEvB,IAAIK,KAAOL,CAAAC,WAAA,CAAa,CAAb,CACPK,EAAAA,CAAMN,CAAAC,WAAA,CAAa,CAAb,CAEV,OAAO,QAAP,CAAeC,CADmB,IACnBA,EADEG,IACFH,CADS,KACTA,EAD2BI,CAC3BJ,CADiC,KACjCA,CAD0C,KAC1CA,UAAA,CAAmB,EAAnB,CAAAC,YAAA,EAAf,CAAsD,GAL/B,CAQ3BI,QAASA,WAAU,CAACpB,OAAD,CAAUqB,EAAV,CAAc,CAC7BC,QAASA,KAAI,CAACrB,IAAD,CAAO,CAChB,MAAOD,QAAA,CAAQC,IAAR,CADS,CAIpB,MAAO,SAAQ,CAACsB,IAAD,CAAO,CAClB,MAAOA,KAAAC,QAAA,CACMH,EADN,CACUC,IADV,CAAAE,QAAA,CAEMC,gBAFN,CAEwBR,cAFxB,CAAAO,QAAA,CAGME,WAHN,CAGmBd,kBAHnB,CADW,CALO,CA3D7Be,MAAAA,CAAajC,aAAA,CAAcJ,OAAA,CAAQ,4CAAR,CAAd,CACbsC,QAAAA,CAAc1B,kBAAA,CAAmByB,MAAnB,CAElBnC;OAAAqC,IAAA,CAAcT,UAAA,CAAWO,MAAX,CAAuBC,OAAvB,CAEVE,QAAAA,CAAcpC,aAAA,CAAcJ,OAAA,CAAQ,iDAAR,CAAd,CACdyC,QAAAA,CAAe7B,kBAAA,CAAmB4B,OAAnB,CAEnBtC,QAAAwC,KAAA,CAAeZ,UAAA,CAAWU,OAAX,CAAwBC,OAAxB,CAT0G,KAsCrHL,YAAc,aAtCuG,CAuCrHD,iBAAmB,iCAvCkG,CAyErHQ,YAAc/B,kBAAA,CAAmByB,MAAnB,CASlBnC,QAAA0C,OAAA,CAPAC,QAAkB,CAACZ,IAAD,CAAO,CACrB,MAAOA,KAAAC,QAAA,CACMS,WADN,CACmBrB,kBADnB,CAAAY,QAAA,CAEMC,gBAFN,CAEwBR,cAFxB,CAAAO,QAAA,CAGME,WAHN,CAGmBd,kBAHnB,CADc,CA3EgG;",
"sources":["node_modules/entities/lib/encode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$entities$lib$encode\"] = function(global,process,require,module,exports,shadow$shims) {\nvar inverseXML = getInverseObj(require(\"../maps/xml.json\")),\n    xmlReplacer = getInverseReplacer(inverseXML);\n\nexports.XML = getInverse(inverseXML, xmlReplacer);\n\nvar inverseHTML = getInverseObj(require(\"../maps/entities.json\")),\n    htmlReplacer = getInverseReplacer(inverseHTML);\n\nexports.HTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function(inverse, name) {\n            inverse[obj[name]] = \"&\" + name + \";\";\n            return inverse;\n        }, {});\n}\n\nfunction getInverseReplacer(inverse) {\n    var single = [],\n        multiple = [];\n\n    Object.keys(inverse).forEach(function(k) {\n        if (k.length === 1) {\n            single.push(\"\\\\\" + k);\n        } else {\n            multiple.push(k);\n        }\n    });\n\n    //TODO add ranges\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar re_nonASCII = /[^\\0-\\x7F]/g,\n    re_astralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction singleCharReplacer(c) {\n    return (\n        \"&#x\" +\n        c\n            .charCodeAt(0)\n            .toString(16)\n            .toUpperCase() +\n        \";\"\n    );\n}\n\nfunction astralReplacer(c) {\n    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    var high = c.charCodeAt(0);\n    var low = c.charCodeAt(1);\n    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n    return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re) {\n    function func(name) {\n        return inverse[name];\n    }\n\n    return function(data) {\n        return data\n            .replace(re, func)\n            .replace(re_astralSymbols, astralReplacer)\n            .replace(re_nonASCII, singleCharReplacer);\n    };\n}\n\nvar re_xmlChars = getInverseReplacer(inverseXML);\n\nfunction escapeXML(data) {\n    return data\n        .replace(re_xmlChars, singleCharReplacer)\n        .replace(re_astralSymbols, astralReplacer)\n        .replace(re_nonASCII, singleCharReplacer);\n}\n\nexports.escape = escapeXML;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getInverseObj","obj","Object","keys","sort","reduce","inverse","name","getInverseReplacer","single","multiple","forEach","k","length","push","unshift","join","RegExp","singleCharReplacer","c","charCodeAt","toString","toUpperCase","astralReplacer","high","low","getInverse","re","func","data","replace","re_astralSymbols","re_nonASCII","inverseXML","xmlReplacer","XML","inverseHTML","htmlReplacer","HTML","re_xmlChars","escape","escapeXML"]
}
