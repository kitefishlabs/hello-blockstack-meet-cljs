{
"version":3,
"file":"module$node_modules$entities$lib$decode.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/entities/lib/decode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$entities$lib$decode\"] = function(global,process,require,module,exports,shadow$shims) {\nvar entityMap = require(\"../maps/entities.json\"),\n    legacyMap = require(\"../maps/legacy.json\"),\n    xmlMap = require(\"../maps/xml.json\"),\n    decodeCodePoint = require(\"./decode_codepoint.js\");\n\nvar decodeXMLStrict = getStrictDecoder(xmlMap),\n    decodeHTMLStrict = getStrictDecoder(entityMap);\n\nfunction getStrictDecoder(map) {\n    var keys = Object.keys(map).join(\"|\"),\n        replace = getReplacer(map);\n\n    keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n\n    var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n\n    return function(str) {\n        return String(str).replace(re, replace);\n    };\n}\n\nvar decodeHTML = (function() {\n    var legacy = Object.keys(legacyMap).sort(sorter);\n\n    var keys = Object.keys(entityMap).sort(sorter);\n\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        } else {\n            keys[i] += \";\";\n        }\n    }\n\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\"),\n        replace = getReplacer(entityMap);\n\n    function replacer(str) {\n        if (str.substr(-1) !== \";\") str += \";\";\n        return replace(str);\n    }\n\n    //TODO consider creating a merged map\n    return function(str) {\n        return String(str).replace(re, replacer);\n    };\n})();\n\nfunction sorter(a, b) {\n    return a < b ? 1 : -1;\n}\n\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            if (str.charAt(2) === \"X\" || str.charAt(2) === \"x\") {\n                return decodeCodePoint(parseInt(str.substr(3), 16));\n            }\n            return decodeCodePoint(parseInt(str.substr(2), 10));\n        }\n        return map[str.slice(1, -1)];\n    };\n}\n\nmodule.exports = {\n    XML: decodeXMLStrict,\n    HTML: decodeHTML,\n    HTMLStrict: decodeHTMLStrict\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getStrictDecoder","map","keys","Object","join","replace","getReplacer","re","RegExp","str","String","sorter","a","b","charAt","decodeCodePoint","parseInt","substr","slice","entityMap","legacyMap","xmlMap","decodeXMLStrict","decodeHTMLStrict","decodeHTML","replacer","legacy","sort","i","j","length","XML","HTML","HTMLStrict"]
}
