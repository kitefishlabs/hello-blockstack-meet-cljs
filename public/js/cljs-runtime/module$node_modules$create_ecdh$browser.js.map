{
"version":3,
"file":"module$node_modules$create_ecdh$browser.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/create-ecdh/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_ecdh$browser\"] = function(global,process,require,module,exports,shadow$shims) {\nvar elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","ECDH","curve","curveType","aliases","name","elliptic","ec","keys","formatReturnValue","bn","enc","len","Array","isArray","toArray","buf","Buffer","length","zeros","fill","concat","toString","BN","module.exports","secp256k1","byteLength","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","p224","p256","secp256r1","p192","secp192r1","p384","p521","prototype","generateKeys","ECDH.prototype.generateKeys","format","genKeyPair","getPublicKey","computeSecret","ECDH.prototype.computeSecret","other","inenc","isBuffer","out","keyFromPublic","getPublic","otherPub","mul","getPrivate","getX","ECDH.prototype.getPublicKey","key","getPrivateKey","ECDH.prototype.getPrivateKey","setPublicKey","ECDH.prototype.setPublicKey","pub","_importPublic","setPrivateKey","ECDH.prototype.setPrivateKey","priv","_priv","_importPrivate"]
}
