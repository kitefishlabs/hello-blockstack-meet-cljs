shadow$provide.module$node_modules$jsontokens$lib$errors=function(global,process,require,module,exports,shadow$shims){function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function");}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!==typeof call&&"function"!==typeof call?self:call}function _inherits(subClass,
superClass){if("function"!==typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}});superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});exports.MissingParametersError=function(_Error){function MissingParametersError(message){_classCallCheck(this,
MissingParametersError);var _this=_possibleConstructorReturn(this,(MissingParametersError.__proto__||Object.getPrototypeOf(MissingParametersError)).call(this));_this.name="MissingParametersError";_this.message=message||"";return _this}_inherits(MissingParametersError,_Error);return MissingParametersError}(Error);exports.InvalidTokenError=function(_Error2){function InvalidTokenError(message){_classCallCheck(this,InvalidTokenError);var _this2=_possibleConstructorReturn(this,(InvalidTokenError.__proto__||
Object.getPrototypeOf(InvalidTokenError)).call(this));_this2.name="InvalidTokenError";_this2.message=message||"";return _this2}_inherits(InvalidTokenError,_Error2);return InvalidTokenError}(Error)}
//# sourceMappingURL=module$node_modules$jsontokens$lib$errors.js.map
