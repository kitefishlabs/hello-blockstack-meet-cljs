{
"version":3,
"file":"module$node_modules$bn_DOT_js$lib$bn.js",
"lineCount":101,
"mappings":"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",
"sources":["node_modules/bn_DOT_js/lib/bn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bn_DOT_js$lib$bn\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","parseHex","str","start","end","r","len","Math","min","i","c","charCodeAt","parseBase","mul","smallMulTo","self","num","out","a","b","carry","k","ncarry","rword","maxJ","j","max","strip","FFTM","x","y","MPrime","name","p","n","bitLength","iushln","isub","tmp","_tmp","K256","call","P224","P192","P25519","Red","m","prime","_prime","gtn","Mont","shift","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","sub","wordSize","Buffer","e","BN.isBN","Array","isArray","BN.max","left","right","cmp","BN.min","BN.prototype._init","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","BN.prototype._initNumber","BN.prototype._initArray","ceil","off","w","BN.prototype._parseHex","BN.prototype._parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","BN.prototype.copy","dest","clone","BN.prototype.clone","_expand","BN.prototype._expand","size","BN.prototype.strip","_normSign","BN.prototype._normSign","inspect","BN.prototype.inspect","zeros","groupSizes","groupBases","BN.prototype.toString","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","BN.prototype.toNumber","ret","toJSON","BN.prototype.toJSON","toBuffer","BN.prototype.toBuffer","toArrayLike","BN.prototype.toArray","BN.prototype.toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","_countBits","clz32","BN.prototype._countBits","t","_zeroBits","BN.prototype._zeroBits","BN.prototype.bitLength","hi","zeroBits","BN.prototype.zeroBits","BN.prototype.byteLength","toTwos","BN.prototype.toTwos","width","abs","inotn","iaddn","fromTwos","BN.prototype.fromTwos","testn","notn","ineg","isNeg","BN.prototype.isNeg","neg","BN.prototype.neg","BN.prototype.ineg","iuor","BN.prototype.iuor","ior","BN.prototype.ior","or","BN.prototype.or","uor","BN.prototype.uor","iuand","BN.prototype.iuand","iand","BN.prototype.iand","and","BN.prototype.and","uand","BN.prototype.uand","iuxor","BN.prototype.iuxor","ixor","BN.prototype.ixor","xor","BN.prototype.xor","uxor","BN.prototype.uxor","BN.prototype.inotn","bytesNeeded","bitsLeft","BN.prototype.notn","setn","BN.prototype.setn","bit","wbit","iadd","BN.prototype.iadd","add","BN.prototype.add","BN.prototype.isub","BN.prototype.sub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","lo","imul","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","BN.prototype.mulTo","hncarry","mulp","fftm","makeRBT","FFTM.prototype.makeRBT","N","l","revBin","FFTM.prototype.revBin","rb","permute","FFTM.prototype.permute","rbt","rws","iws","rtws","itws","transform","FFTM.prototype.transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","FFTM.prototype.guessLen13b","odd","conjugate","FFTM.prototype.conjugate","normalize13b","FFTM.prototype.normalize13b","ws","round","convert13b","FFTM.prototype.convert13b","stub","FFTM.prototype.stub","ph","FFTM.prototype.mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","BN.prototype.mul","mulf","BN.prototype.mulf","BN.prototype.imul","BN.prototype.imuln","muln","BN.prototype.muln","BN.prototype.sqr","isqr","BN.prototype.isqr","BN.prototype.pow","BN.prototype.iushln","bits","carryMask","newCarry","ishln","BN.prototype.ishln","BN.prototype.iushrn","hint","extended","mask","h","ishrn","BN.prototype.ishrn","shln","BN.prototype.shln","ushln","BN.prototype.ushln","shrn","BN.prototype.shrn","ushrn","BN.prototype.ushrn","BN.prototype.testn","imaskn","BN.prototype.imaskn","maskn","BN.prototype.maskn","BN.prototype.iaddn","BN.prototype._iaddn","BN.prototype.isubn","addn","BN.prototype.addn","subn","BN.prototype.subn","iabs","BN.prototype.iabs","BN.prototype.abs","_ishlnsubmul","BN.prototype._ishlnsubmul","_wordDiv","BN.prototype._wordDiv","mode","bhi","bhiBits","diff","qj","divmod","BN.prototype.divmod","positive","divn","BN.prototype.div","BN.prototype.mod","BN.prototype.umod","divRound","BN.prototype.divRound","dm","half","BN.prototype.modn","acc","BN.prototype.idivn","BN.prototype.divn","egcd","BN.prototype.egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","BN.prototype._invmp","x1","x2","delta","cmpn","BN.prototype.gcd","invm","BN.prototype.invm","BN.prototype.isEven","BN.prototype.isOdd","BN.prototype.andln","bincn","BN.prototype.bincn","BN.prototype.isZero","BN.prototype.cmpn","BN.prototype.cmp","ucmp","BN.prototype.ucmp","BN.prototype.gtn","gt","BN.prototype.gt","gten","BN.prototype.gten","gte","BN.prototype.gte","ltn","BN.prototype.ltn","lt","BN.prototype.lt","lten","BN.prototype.lten","lte","BN.prototype.lte","eqn","BN.prototype.eqn","eq","BN.prototype.eq","BN.red","toRed","BN.prototype.toRed","ctx","convertTo","_forceRed","fromRed","BN.prototype.fromRed","convertFrom","BN.prototype._forceRed","forceRed","BN.prototype.forceRed","redAdd","BN.prototype.redAdd","redIAdd","BN.prototype.redIAdd","redSub","BN.prototype.redSub","redISub","BN.prototype.redISub","redShl","BN.prototype.redShl","shl","redMul","BN.prototype.redMul","_verify2","redIMul","BN.prototype.redIMul","redSqr","BN.prototype.redSqr","_verify1","redISqr","BN.prototype.redISqr","redSqrt","BN.prototype.redSqrt","sqrt","redInvm","BN.prototype.redInvm","redNeg","BN.prototype.redNeg","redPow","BN.prototype.redPow","primes","k256","p224","p192","p25519","MPrime.prototype._tmp","ireduce","MPrime.prototype.ireduce","split","imulK","rlen","MPrime.prototype.split","input","MPrime.prototype.imulK","K256.prototype.split","output","outLen","prev","next","K256.prototype.imulK","P25519.prototype.imulK","BN._prime","Red.prototype._verify1","Red.prototype._verify2","Red.prototype.imod","Red.prototype.neg","Red.prototype.add","Red.prototype.iadd","Red.prototype.sub","Red.prototype.isub","Red.prototype.shl","Red.prototype.imul","Red.prototype.mul","Red.prototype.isqr","Red.prototype.sqr","Red.prototype.sqrt","mod3","one","nOne","lpow","z","Red.prototype.invm","inv","Red.prototype.pow","wnd","current","currentLen","windowSize","Red.prototype.convertTo","Red.prototype.convertFrom","mont","BN.mont","Mont.prototype.convertTo","Mont.prototype.convertFrom","Mont.prototype.imul","u","Mont.prototype.mul","Mont.prototype.invm"]
}
