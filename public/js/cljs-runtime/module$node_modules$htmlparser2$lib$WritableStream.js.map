{
"version":3,
"file":"module$node_modules$htmlparser2$lib$WritableStream.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAQpIC,QAASA,OAAM,CAACC,GAAD,CAAMC,OAAN,CAAc,CAC5B,IAAIC,OAAS,IAAAC,QAATD,CAAwB,IAAIE,MAAJ,CAAWJ,GAAX,CAAgBC,OAAhB,CAA5B,CACII,QAAU,IAAAC,SAAVD,CAA0B,IAAIE,aAElCC,eAAAC,KAAA,CAAoB,IAApB,CAA0B,CAACC,cAAe,CAAA,CAAhB,CAA1B,CAEA,KAAAC,KAAA,CAAU,QAAV,CAAoB,QAAQ,EAAE,CAC7BT,MAAAU,IAAA,CAAWP,OAAAO,IAAA,EAAX,CAD6B,CAA9B,CAN4B,CAP7BhB,MAAAC,QAAA,CAAiBE,MAEjB,KAAIK,OAAST,OAAA,CAAQ,4CAAR,CAAb,CACIa,eAAiBb,OAAA,CAAQ,cAAR,CAAAkB,SADrB,CAEIN,cAAgBZ,OAAA,CAAQ,uDAAR,CAAAY,cAFpB;AAGIO,OAASnB,OAAA,CAAQ,kCAAR,CAAAmB,OAabnB,QAAA,CAAQ,+CAAR,CAAA,CAAoBI,MAApB,CAA4BS,cAA5B,CAEAA,eAAAO,UAAAC,OAAA,CAAkCC,QAAQ,CAACC,KAAD,CAAQC,QAAR,CAAkBC,EAAlB,CAAqB,CAC3DF,KAAH,WAAoBJ,OAApB,GAA4BI,KAA5B,CAAoC,IAAAZ,SAAAe,MAAA,CAAoBH,KAApB,CAApC,CACA,KAAAf,QAAAkB,MAAA,CAAmBH,KAAnB,CACAE,GAAA,EAH8D,CArBqE;",
"sources":["node_modules/htmlparser2/lib/WritableStream.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$htmlparser2$lib$WritableStream\"] = function(global,process,require,module,exports,shadow$shims) {\nmodule.exports = Stream;\n\nvar Parser = require(\"./Parser.js\");\nvar WritableStream = require(\"readable-stream\").Writable;\nvar StringDecoder = require(\"string_decoder\").StringDecoder;\nvar Buffer = require(\"buffer\").Buffer;\n\nfunction Stream(cbs, options){\n\tvar parser = this._parser = new Parser(cbs, options);\n\tvar decoder = this._decoder = new StringDecoder();\n\n\tWritableStream.call(this, {decodeStrings: false});\n\n\tthis.once(\"finish\", function(){\n\t\tparser.end(decoder.end());\n\t});\n}\n\nrequire(\"inherits\")(Stream, WritableStream);\n\nWritableStream.prototype._write = function(chunk, encoding, cb){\n\tif(chunk instanceof Buffer) chunk = this._decoder.write(chunk);\n\tthis._parser.write(chunk);\n\tcb();\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Stream","cbs","options","parser","_parser","Parser","decoder","_decoder","StringDecoder","WritableStream","call","decodeStrings","once","end","Writable","Buffer","prototype","_write","WritableStream.prototype._write","chunk","encoding","cb","write"]
}
