shadow$provide.module$node_modules$css_what$index=function(global,process,require,module,exports,shadow$shims){function funescape(_,escaped,escapedWhitespace){_="0x"+escaped-65536;return _!==_||escapedWhitespace?escaped:0>_?String.fromCharCode(_+65536):String.fromCharCode(_>>10|55296,_&1023|56320)}function isWhitespace(c){return" "===c||"\n"===c||"\t"===c||"\f"===c||"\r"===c}function parseSelector(subselects,selector,options){function getName(){var sub=selector.match(re_name)[0];selector=selector.substr(sub.length);
return sub.replace(re_escape,funescape)}function stripWhitespace(start){for(;isWhitespace(selector.charAt(start));)start++;selector=selector.substr(start)}function isEscaped(pos){for(var slashCount=0;"\\"===selector.charAt(--pos);)slashCount++;return 1===(slashCount&1)}var tokens=[],sawWS=!1;for(stripWhitespace(0);""!==selector;){var firstChar=selector.charAt(0);if(isWhitespace(firstChar))sawWS=!0,stripWhitespace(1);else if(firstChar in simpleSelectors)tokens.push({type:simpleSelectors[firstChar]}),
sawWS=!1,stripWhitespace(1);else if(","===firstChar){if(0===tokens.length)throw new SyntaxError("empty sub-selector");subselects.push(tokens);tokens=[];sawWS=!1;stripWhitespace(1)}else if(sawWS&&(0<tokens.length&&tokens.push({type:"descendant"}),sawWS=!1),"*"===firstChar)selector=selector.substr(1),tokens.push({type:"universal"});else if(firstChar in attribSelectors)selector=selector.substr(1),tokens.push({type:"attribute",name:attribSelectors[firstChar][0],action:attribSelectors[firstChar][1],value:getName(),
ignoreCase:!1});else if("["===firstChar){selector=selector.substr(1);var data=selector.match(re_attr);if(!data)throw new SyntaxError("Malformed attribute selector: "+selector);selector=selector.substr(data[0].length);firstChar=data[1].replace(re_escape,funescape);options&&("lowerCaseAttributeNames"in options?!options.lowerCaseAttributeNames:options.xmlMode)||(firstChar=firstChar.toLowerCase());tokens.push({type:"attribute",name:firstChar,action:actionTypes[data[2]],value:(data[4]||data[5]||"").replace(re_escape,
funescape),ignoreCase:!!data[6]})}else if(":"===firstChar)if(":"===selector.charAt(1))selector=selector.substr(2),tokens.push({type:"pseudo-element",name:getName().toLowerCase()});else{selector=selector.substr(1);firstChar=getName().toLowerCase();data=null;if("("===selector.charAt(0))if(firstChar in unpackPseudos){var quot=selector.charAt(1);var quoted=quot in quotes;selector=selector.substr(quoted+1);data=[];selector=parseSelector(data,selector,options);if(quoted){if(selector.charAt(0)!==quot)throw new SyntaxError("unmatched quotes in :"+
firstChar);selector=selector.substr(1)}if(")"!==selector.charAt(0))throw new SyntaxError("missing closing parenthesis in :"+firstChar+" "+selector);selector=selector.substr(1)}else{for(data=quot=1;0<data&&quot<selector.length;quot++)"("!==selector.charAt(quot)||isEscaped(quot)?")"!==selector.charAt(quot)||isEscaped(quot)||data--:data++;if(data)throw new SyntaxError("parenthesis not matched");data=selector.substr(1,quot-2);selector=selector.substr(quot);firstChar in stripQuotesFromPseudos&&(quot=data.charAt(0),
quot===data.slice(-1)&&quot in quotes&&(data=data.slice(1,-1)),data=data.replace(re_escape,funescape))}tokens.push({type:"pseudo",name:firstChar,data:data})}else if(re_name.test(selector))firstChar=getName(),options&&("lowerCaseTags"in options?!options.lowerCaseTags:options.xmlMode)||(firstChar=firstChar.toLowerCase()),tokens.push({type:"tag",name:firstChar});else return tokens.length&&"descendant"===tokens[tokens.length-1].type&&tokens.pop(),addToken(subselects,tokens),selector}addToken(subselects,
tokens);return selector}function addToken(subselects,tokens){if(0<subselects.length&&0===tokens.length)throw new SyntaxError("empty sub-selector");subselects.push(tokens)}module.exports=function(selector,options){var subselects=[];selector=parseSelector(subselects,selector+"",options);if(""!==selector)throw new SyntaxError("Unmatched selector: "+selector);return subselects};var re_name=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,re_escape=/\\([\da-f]{1,6}\s?|(\s)|.)/ig,re_attr=/^\s*((?:\\.|[\w\u00c0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF\-])*)|)|)\s*(i)?\]/,
actionTypes={__proto__:null,undefined:"exists","":"equals","~":"element","^":"start",$:"end","*":"any","!":"not","|":"hyphen"},simpleSelectors={__proto__:null,"\x3e":"child","\x3c":"parent","~":"sibling","+":"adjacent"},attribSelectors={__proto__:null,"#":["id","equals"],".":["class","element"]},unpackPseudos={__proto__:null,has:!0,not:!0,matches:!0},stripQuotesFromPseudos={__proto__:null,contains:!0,icontains:!0},quotes={__proto__:null,'"':!0,"'":!0}}
//# sourceMappingURL=module$node_modules$css_what$index.js.map
