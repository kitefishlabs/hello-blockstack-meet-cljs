{
"version":3,
"file":"module$node_modules$nth_check$parse.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrHF,MAAAC,QAAA,CAUAE,QAAc,CAACC,OAAD,CAAS,CACtBA,OAAA,CAAUA,OAAAC,KAAA,EAAAC,YAAA,EAEV,IAAe,MAAf,GAAGF,OAAH,CACC,MAAO,CAAC,CAAD,CAAI,CAAJ,CACD,IAAe,KAAf,GAAGA,OAAH,CACN,MAAO,CAAC,CAAD,CAAI,CAAJ,CAEP,KAAIG,OAASH,OAAAI,MAAA,CAAcC,aAAd,CAEb,IAAG,CAACF,MAAJ,CACC,KAAM,KAAIG,WAAJ,CAAgB,iCAAhB,CAAoDN,OAApD,CAA8D,IAA9D,CAAN,CAKEG,MAAA,CAAO,CAAP,CAAH,EACCI,OACA,CADIC,QAAA,CAASL,MAAA,CAAO,CAAP,CAAT,CAAoB,EAApB,CACJ,CAAGM,KAAA,CAAMF,OAAN,CAAH,GACiCA,OADjC,CAC4B,GAA3B,GAAGJ,MAAA,CAAO,CAAP,CAAAO,OAAA,CAAiB,CAAjB,CAAH,CAAqC,EAArC,CACS,CAFV,CAFD,EAMOH,OANP,CAMW,CAEX,OAAO,CACNA,OADM,CAENJ,MAAA,CAAO,CAAP,CAAA;AAAYK,QAAA,EAAUL,MAAA,CAAO,CAAP,CAAV,EAAuB,EAAvB,EAA6BA,MAAA,CAAO,CAAP,CAA7B,CAAwC,EAAxC,CAAZ,CAA0D,CAFpD,CAxBc,CALvB,KAAIE,cAAgB,yCANiG;",
"sources":["node_modules/nth-check/parse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$nth_check$parse\"] = function(global,process,require,module,exports,shadow$shims) {\nmodule.exports = parse;\n\n//following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n\n//[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\nvar re_nthElement = /^([+\\-]?\\d*n)?\\s*(?:([+\\-]?)\\s*(\\d+))?$/;\n\n/*\n\tparses a nth-check formula, returns an array of two numbers\n*/\nfunction parse(formula){\n\tformula = formula.trim().toLowerCase();\n\n\tif(formula === \"even\"){\n\t\treturn [2, 0];\n\t} else if(formula === \"odd\"){\n\t\treturn [2, 1];\n\t} else {\n\t\tvar parsed = formula.match(re_nthElement);\n\n\t\tif(!parsed){\n\t\t\tthrow new SyntaxError(\"n-th rule couldn't be parsed ('\" + formula + \"')\");\n\t\t}\n\n\t\tvar a;\n\n\t\tif(parsed[1]){\n\t\t\ta = parseInt(parsed[1], 10);\n\t\t\tif(isNaN(a)){\n\t\t\t\tif(parsed[1].charAt(0) === \"-\") a = -1;\n\t\t\t\telse a = 1;\n\t\t\t}\n\t\t} else a = 0;\n\n\t\treturn [\n\t\t\ta,\n\t\t\tparsed[3] ? parseInt((parsed[2] || \"\") + parsed[3], 10) : 0\n\t\t];\n\t}\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","parse","formula","trim","toLowerCase","parsed","match","re_nthElement","SyntaxError","a","parseInt","isNaN","charAt"]
}
