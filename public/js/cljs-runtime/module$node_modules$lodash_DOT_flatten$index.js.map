{
"version":3,
"file":"module$node_modules$lodash_DOT_flatten$index.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/lodash_DOT_flatten/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash_DOT_flatten$index\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array, 1) : [];\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = flatten;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseFlatten","array","depth","predicate","isStrict","result","index","length","isFlattenable","value","values","offset","MAX_SAFE_INTEGER","type","tag","objectToString","call","funcTag","genTag","hasOwnProperty","propertyIsEnumerable","argsTag","spreadableSymbol","freeSelf","self","Object","root","Function","objectProto","prototype","toString","Symbol","isConcatSpreadable","undefined","isArray","Array","flatten"]
}
