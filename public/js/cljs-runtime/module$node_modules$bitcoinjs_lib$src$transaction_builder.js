shadow$provide.module$node_modules$bitcoinjs_lib$src$transaction_builder=function(global,process,require,module,exports,shadow$shims){function expandInput(scriptSig,witnessStack,type,scriptPubKey){if(0===scriptSig.length&&0===witnessStack.length)return{};if(!type){type=classify.input(scriptSig,!0);var wsType=classify.witness(witnessStack,!0);type===SCRIPT_TYPES.NONSTANDARD&&(type=void 0);wsType===SCRIPT_TYPES.NONSTANDARD&&(wsType=void 0);type=type||wsType}switch(type){case SCRIPT_TYPES.P2WPKH:return scriptSig=
payments.p2wpkh({witness:witnessStack}),{prevOutScript:scriptSig.output,prevOutType:SCRIPT_TYPES.P2WPKH,pubkeys:[scriptSig.pubkey],signatures:[scriptSig.signature]};case SCRIPT_TYPES.P2PKH:return scriptSig=payments.p2pkh({input:scriptSig}),{prevOutScript:scriptSig.output,prevOutType:SCRIPT_TYPES.P2PKH,pubkeys:[scriptSig.pubkey],signatures:[scriptSig.signature]};case SCRIPT_TYPES.P2PK:return scriptSig=payments.p2pk({input:scriptSig}).signature,{prevOutType:SCRIPT_TYPES.P2PK,pubkeys:[void 0],signatures:[scriptSig]};
case SCRIPT_TYPES.MULTISIG:return scriptSig=payments.p2ms({input:scriptSig,output:scriptPubKey},{allowIncomplete:!0}),{prevOutType:SCRIPT_TYPES.MULTISIG,pubkeys:scriptSig.pubkeys,signatures:scriptSig.signatures}}return type===SCRIPT_TYPES.P2SH?(witnessStack=payments.p2sh({input:scriptSig,witness:witnessStack}),scriptSig=witnessStack.output,witnessStack=witnessStack.redeem,scriptPubKey=classify.output(witnessStack.output),scriptPubKey=expandInput(witnessStack.input,witnessStack.witness,scriptPubKey,
witnessStack.output),scriptPubKey.prevOutType?{prevOutScript:scriptSig,prevOutType:SCRIPT_TYPES.P2SH,redeemScript:witnessStack.output,redeemScriptType:scriptPubKey.prevOutType,witnessScript:scriptPubKey.witnessScript,witnessScriptType:scriptPubKey.witnessScriptType,pubkeys:scriptPubKey.pubkeys,signatures:scriptPubKey.signatures}:{}):type===SCRIPT_TYPES.P2WSH?(witnessStack=payments.p2wsh({input:scriptSig,witness:witnessStack}),scriptSig=witnessStack.output,witnessStack=witnessStack.redeem,scriptPubKey=
classify.output(witnessStack.output),scriptPubKey=scriptPubKey===SCRIPT_TYPES.P2WPKH?expandInput(witnessStack.input,witnessStack.witness,scriptPubKey):expandInput(bscript.compile(witnessStack.witness),[],scriptPubKey,witnessStack.output),scriptPubKey.prevOutType?{prevOutScript:scriptSig,prevOutType:SCRIPT_TYPES.P2WSH,witnessScript:witnessStack.output,witnessScriptType:scriptPubKey.prevOutType,pubkeys:scriptPubKey.pubkeys,signatures:scriptPubKey.signatures}:{}):{prevOutType:SCRIPT_TYPES.NONSTANDARD,
prevOutScript:scriptSig}}function fixMultisigOrder(input,transaction,vin){if(input.redeemScriptType===SCRIPT_TYPES.MULTISIG&&input.redeemScript&&input.pubkeys.length!==input.signatures.length){var unmatched=input.signatures.concat();input.signatures=input.pubkeys.map(function(pubKey){var keyPair=ECPair.fromPublicKey(pubKey),match;unmatched.some(function(signature,i){if(!signature)return!1;var parsed=bscript.signature.decode(signature),hash=transaction.hashForSignature(vin,input.redeemScript,parsed.hashType);
if(!keyPair.verify(hash,parsed.signature))return!1;unmatched[i]=void 0;match=signature;return!0});return match})}}function expandOutput(script,ourPubKey){typeforce(types.Buffer,script);var type=classify.output(script);switch(type){case SCRIPT_TYPES.P2PKH:if(!ourPubKey)break;script=payments.p2pkh({output:script}).hash;var pkh2=bcrypto.hash160(ourPubKey);if(!script.equals(pkh2))break;return{type:type,pubkeys:[ourPubKey],signatures:[void 0]};case SCRIPT_TYPES.P2WPKH:if(!ourPubKey)break;script=payments.p2wpkh({output:script}).hash;
pkh2=bcrypto.hash160(ourPubKey);if(!script.equals(pkh2))break;return{type:type,pubkeys:[ourPubKey],signatures:[void 0]};case SCRIPT_TYPES.P2PK:return ourPubKey=payments.p2pk({output:script}),{type:type,pubkeys:[ourPubKey.pubkey],signatures:[void 0]};case SCRIPT_TYPES.MULTISIG:return ourPubKey=payments.p2ms({output:script}),{type:type,pubkeys:ourPubKey.pubkeys,signatures:ourPubKey.pubkeys.map(function(){})}}return{type:type}}function prepareInput(input,ourPubKey,redeemScript,witnessValue,witnessScript){if(redeemScript&&
witnessScript){witnessValue=payments.p2wsh({redeem:{output:witnessScript}});var p2wshAlt=payments.p2wsh({output:redeemScript}),p2sh=payments.p2sh({redeem:{output:redeemScript}}),p2shAlt=payments.p2sh({redeem:witnessValue});if(!witnessValue.hash.equals(p2wshAlt.hash))throw Error("Witness script inconsistent with prevOutScript");if(!p2sh.hash.equals(p2shAlt.hash))throw Error("Redeem script inconsistent with prevOutScript");ourPubKey=expandOutput(witnessValue.redeem.output,ourPubKey);if(!ourPubKey.pubkeys)throw Error(ourPubKey.type+
" not supported as witnessScript ("+bscript.toASM(witnessScript)+")");input.signatures&&input.signatures.some(function(x){return x})&&(ourPubKey.signatures=input.signatures);if(ourPubKey.type===SCRIPT_TYPES.P2WPKH)throw Error("P2SH(P2WSH(P2WPKH)) is a consensus failure");return{redeemScript:redeemScript,redeemScriptType:SCRIPT_TYPES.P2WSH,witnessScript:witnessScript,witnessScriptType:ourPubKey.type,prevOutType:SCRIPT_TYPES.P2SH,prevOutScript:p2sh.output,hasWitness:!0,signScript:witnessScript,signType:ourPubKey.type,
pubkeys:ourPubKey.pubkeys,signatures:ourPubKey.signatures}}if(redeemScript){witnessScript=payments.p2sh({redeem:{output:redeemScript}});if(input.prevOutScript){try{p2sh=payments.p2sh({output:input.prevOutScript})}catch(e){throw Error("PrevOutScript must be P2SH");}if(!witnessScript.hash.equals(p2sh.hash))throw Error("Redeem script inconsistent with prevOutScript");}ourPubKey=expandOutput(witnessScript.redeem.output,ourPubKey);if(!ourPubKey.pubkeys)throw Error(ourPubKey.type+" not supported as redeemScript ("+
bscript.toASM(redeemScript)+")");input.signatures&&input.signatures.some(function(x){return x})&&(ourPubKey.signatures=input.signatures);input=redeemScript;ourPubKey.type===SCRIPT_TYPES.P2WPKH&&(input=payments.p2pkh({pubkey:ourPubKey.pubkeys[0]}).output);return{redeemScript:redeemScript,redeemScriptType:ourPubKey.type,prevOutType:SCRIPT_TYPES.P2SH,prevOutScript:witnessScript.output,hasWitness:ourPubKey.type===SCRIPT_TYPES.P2WPKH,signScript:input,signType:ourPubKey.type,pubkeys:ourPubKey.pubkeys,signatures:ourPubKey.signatures}}if(witnessScript){redeemScript=
payments.p2wsh({redeem:{output:witnessScript}});if(input.prevOutScript&&(p2sh=payments.p2wsh({output:input.prevOutScript}),!redeemScript.hash.equals(p2sh.hash)))throw Error("Witness script inconsistent with prevOutScript");ourPubKey=expandOutput(redeemScript.redeem.output,ourPubKey);if(!ourPubKey.pubkeys)throw Error(ourPubKey.type+" not supported as witnessScript ("+bscript.toASM(witnessScript)+")");input.signatures&&input.signatures.some(function(x){return x})&&(ourPubKey.signatures=input.signatures);
if(ourPubKey.type===SCRIPT_TYPES.P2WPKH)throw Error("P2WSH(P2WPKH) is a consensus failure");return{witnessScript:witnessScript,witnessScriptType:ourPubKey.type,prevOutType:SCRIPT_TYPES.P2WSH,prevOutScript:redeemScript.output,hasWitness:!0,signScript:witnessScript,signType:ourPubKey.type,pubkeys:ourPubKey.pubkeys,signatures:ourPubKey.signatures}}if(input.prevOutType&&input.prevOutScript){if(input.prevOutType===SCRIPT_TYPES.P2SH)throw Error("PrevOutScript is "+input.prevOutType+", requires redeemScript");
if(input.prevOutType===SCRIPT_TYPES.P2WSH)throw Error("PrevOutScript is "+input.prevOutType+", requires witnessScript");if(!input.prevOutScript)throw Error("PrevOutScript is missing");ourPubKey=expandOutput(input.prevOutScript,ourPubKey);if(!ourPubKey.pubkeys)throw Error(ourPubKey.type+" not supported ("+bscript.toASM(input.prevOutScript)+")");input.signatures&&input.signatures.some(function(x){return x})&&(ourPubKey.signatures=input.signatures);redeemScript=input.prevOutScript;ourPubKey.type===SCRIPT_TYPES.P2WPKH&&
(redeemScript=payments.p2pkh({pubkey:ourPubKey.pubkeys[0]}).output);return{prevOutType:ourPubKey.type,prevOutScript:input.prevOutScript,hasWitness:ourPubKey.type===SCRIPT_TYPES.P2WPKH,signScript:redeemScript,signType:ourPubKey.type,pubkeys:ourPubKey.pubkeys,signatures:ourPubKey.signatures}}input=payments.p2pkh({pubkey:ourPubKey}).output;return{prevOutType:SCRIPT_TYPES.P2PKH,prevOutScript:input,hasWitness:!1,signScript:input,signType:SCRIPT_TYPES.P2PKH,pubkeys:[ourPubKey],signatures:[void 0]}}function build(type,
input,allowIncomplete){var pubkeys=input.pubkeys||[],signatures=input.signatures||[];switch(type){case SCRIPT_TYPES.P2PKH:if(0===pubkeys.length)break;if(0===signatures.length)break;return payments.p2pkh({pubkey:pubkeys[0],signature:signatures[0]});case SCRIPT_TYPES.P2WPKH:if(0===pubkeys.length)break;if(0===signatures.length)break;return payments.p2wpkh({pubkey:pubkeys[0],signature:signatures[0]});case SCRIPT_TYPES.P2PK:if(0===pubkeys.length)break;if(0===signatures.length)break;return payments.p2pk({signature:signatures[0]});
case SCRIPT_TYPES.MULTISIG:return signatures=allowIncomplete?signatures.map(function(x){return x||ops.OP_0}):signatures.filter(function(x){return x}),payments.p2ms({signatures:signatures},{allowIncomplete:allowIncomplete});case SCRIPT_TYPES.P2SH:type=build(input.redeemScriptType,input,allowIncomplete);if(!type)break;return payments.p2sh({redeem:{output:type.output||input.redeemScript,input:type.input,witness:type.witness}});case SCRIPT_TYPES.P2WSH:if(type=build(input.witnessScriptType,input,allowIncomplete))return payments.p2wsh({redeem:{output:input.witnessScript,
input:type.input,witness:type.witness}})}}function TransactionBuilder(network,maximumFeeRate){this.__prevTxSet={};this.network=network||networks.bitcoin;this.maximumFeeRate=maximumFeeRate||2500;this.__inputs=[];this.__tx=new Transaction;this.__tx.version=2}function canSign(input){return void 0!==input.signScript&&void 0!==input.signType&&void 0!==input.pubkeys&&void 0!==input.signatures&&input.signatures.length===input.pubkeys.length&&0<input.pubkeys.length&&(!1===input.hasWitness||void 0!==input.value)}
var Buffer=require("module$node_modules$safe_buffer$index").Buffer,baddress=require("module$node_modules$bitcoinjs_lib$src$address"),bcrypto=require("module$node_modules$bitcoinjs_lib$src$crypto"),bscript=require("module$node_modules$bitcoinjs_lib$src$script"),networks=require("module$node_modules$bitcoinjs_lib$src$networks"),ops=require("module$node_modules$bitcoin_ops$index_json"),payments=require("module$node_modules$bitcoinjs_lib$src$payments$index"),typeforce=require("module$node_modules$typeforce$index"),
types=require("module$node_modules$bitcoinjs_lib$src$types"),classify=require("module$node_modules$bitcoinjs_lib$src$classify"),SCRIPT_TYPES=classify.types,ECPair=require("module$node_modules$bitcoinjs_lib$src$ecpair"),Transaction=require("module$node_modules$bitcoinjs_lib$src$transaction");TransactionBuilder.prototype.setLockTime=function(locktime){typeforce(types.UInt32,locktime);if(this.__inputs.some(function(input){return input.signatures?input.signatures.some(function(s){return s}):!1}))throw Error("No, this would invalidate signatures");
this.__tx.locktime=locktime};TransactionBuilder.prototype.setVersion=function(version){typeforce(types.UInt32,version);this.__tx.version=version};TransactionBuilder.fromTransaction=function(transaction,network){var txb=new TransactionBuilder(network);txb.setVersion(transaction.version);txb.setLockTime(transaction.locktime);transaction.outs.forEach(function(txOut){txb.addOutput(txOut.script,txOut.value)});transaction.ins.forEach(function(txIn){txb.__addInputUnsafe(txIn.hash,txIn.index,{sequence:txIn.sequence,
script:txIn.script,witness:txIn.witness})});txb.__inputs.forEach(function(input,i){fixMultisigOrder(input,transaction,i)});return txb};TransactionBuilder.prototype.addInput=function(txHash,vout,sequence,prevOutScript){if(!this.__canModifyInputs())throw Error("No, this would invalidate signatures");if("string"===typeof txHash)txHash=Buffer.from(txHash,"hex").reverse();else if(txHash instanceof Transaction){var value=txHash.outs[vout];prevOutScript=value.script;value=value.value;txHash=txHash.getHash()}return this.__addInputUnsafe(txHash,
vout,{sequence:sequence,prevOutScript:prevOutScript,value:value})};TransactionBuilder.prototype.__addInputUnsafe=function(txHash,vout,options){if(Transaction.isCoinbaseHash(txHash))throw Error("coinbase inputs not supported");var prevTxOut=txHash.toString("hex")+":"+vout;if(void 0!==this.__prevTxSet[prevTxOut])throw Error("Duplicate TxOut: "+prevTxOut);var input={};void 0!==options.script&&(input=expandInput(options.script,options.witness||[]));void 0!==options.value&&(input.value=options.value);
if(!input.prevOutScript&&options.prevOutScript){if(!input.pubkeys&&!input.signatures){var prevOutType=expandOutput(options.prevOutScript);prevOutType.pubkeys&&(input.pubkeys=prevOutType.pubkeys,input.signatures=prevOutType.signatures);prevOutType=prevOutType.type}input.prevOutScript=options.prevOutScript;input.prevOutType=prevOutType||classify.output(options.prevOutScript)}txHash=this.__tx.addInput(txHash,vout,options.sequence,options.scriptSig);this.__inputs[txHash]=input;this.__prevTxSet[prevTxOut]=
!0;return txHash};TransactionBuilder.prototype.addOutput=function(scriptPubKey,value){if(!this.__canModifyOutputs())throw Error("No, this would invalidate signatures");"string"===typeof scriptPubKey&&(scriptPubKey=baddress.toOutputScript(scriptPubKey,this.network));return this.__tx.addOutput(scriptPubKey,value)};TransactionBuilder.prototype.build=function(){return this.__build(!1)};TransactionBuilder.prototype.buildIncomplete=function(){return this.__build(!0)};TransactionBuilder.prototype.__build=
function(allowIncomplete){if(!allowIncomplete){if(!this.__tx.ins.length)throw Error("Transaction has no inputs");if(!this.__tx.outs.length)throw Error("Transaction has no outputs");}var tx=this.__tx.clone();this.__inputs.forEach(function(input,i){if(!input.prevOutType&&!allowIncomplete)throw Error("Transaction is not complete");var result=build(input.prevOutType,input,allowIncomplete);if(result)tx.setInputScript(i,result.input),tx.setWitness(i,result.witness);else{if(!allowIncomplete&&input.prevOutType===
SCRIPT_TYPES.NONSTANDARD)throw Error("Unknown input type");if(!allowIncomplete)throw Error("Not enough information");}});if(!allowIncomplete&&this.__overMaximumFees(tx.virtualSize()))throw Error("Transaction has absurd fees");return tx};TransactionBuilder.prototype.sign=function(vin,keyPair,redeemScript,hashType,witnessValue,witnessScript){if(keyPair.network&&keyPair.network!==this.network)throw new TypeError("Inconsistent network");if(!this.__inputs[vin])throw Error("No input at index: "+vin);hashType=
hashType||Transaction.SIGHASH_ALL;var input=this.__inputs[vin];if(void 0!==input.redeemScript&&redeemScript&&!input.redeemScript.equals(redeemScript))throw Error("Inconsistent redeemScript");var ourPubKey=keyPair.publicKey||keyPair.getPublicKey();if(!canSign(input)){if(void 0!==witnessValue){if(void 0!==input.value&&input.value!==witnessValue)throw Error("Input didn't match witnessValue");typeforce(types.Satoshi,witnessValue);input.value=witnessValue}canSign(input)||(redeemScript=prepareInput(input,
ourPubKey,redeemScript,witnessValue,witnessScript),Object.assign(input,redeemScript));if(!canSign(input))throw Error(input.prevOutType+" not supported");}var signatureHash=input.hasWitness?this.__tx.hashForWitnessV0(vin,input.signScript,input.value,hashType):this.__tx.hashForSignature(vin,input.signScript,hashType);if(!input.pubkeys.some(function(pubKey,i){if(!ourPubKey.equals(pubKey))return!1;if(input.signatures[i])throw Error("Signature already exists");if(33!==ourPubKey.length&&input.hasWitness)throw Error("BIP143 rejects uncompressed public keys in P2WPKH or P2WSH");
pubKey=keyPair.sign(signatureHash);input.signatures[i]=bscript.signature.encode(pubKey,hashType);return!0}))throw Error("Key pair cannot sign for this input");};TransactionBuilder.prototype.__canModifyInputs=function(){return this.__inputs.every(function(input){return void 0===input.signatures?!0:input.signatures.every(function(signature){return signature?signature.readUInt8(signature.length-1)&Transaction.SIGHASH_ANYONECANPAY:!0})})};TransactionBuilder.prototype.__canModifyOutputs=function(){var nInputs=
this.__tx.ins.length,nOutputs=this.__tx.outs.length;return this.__inputs.every(function(input){return void 0===input.signatures?!0:input.signatures.every(function(signature){if(!signature)return!0;signature=signature.readUInt8(signature.length-1)&31;if(signature===Transaction.SIGHASH_NONE)return!0;if(signature===Transaction.SIGHASH_SINGLE)return nInputs<=nOutputs})})};TransactionBuilder.prototype.__overMaximumFees=function(bytes){var incoming=this.__inputs.reduce(function(a,x){return a+(x.value>>>
0)},0),outgoing=this.__tx.outs.reduce(function(a,x){return a+x.value},0);return(incoming-outgoing)/bytes>this.maximumFeeRate};module.exports=TransactionBuilder}
//# sourceMappingURL=module$node_modules$bitcoinjs_lib$src$transaction_builder.js.map
