shadow$provide.module$node_modules$cheerio$lib$parse=function(global,process,require,module,exports,shadow$shims){var htmlparser=require("module$node_modules$htmlparser2$lib$index");exports=module.exports=function(content,options){content=exports.evaluate(content,options);options=exports.evaluate("\x3croot\x3e\x3c/root\x3e",options)[0];options.type="root";exports.update(content,options);return options};exports.evaluate=function(content,options){return"string"===typeof content||shadow$shims.Buffer.isBuffer(content)?
htmlparser.parseDOM(content,options):content};exports.update=function(arr,parent){Array.isArray(arr)||(arr=[arr]);parent?parent.children=arr:parent=null;for(var i=0;i<arr.length;i++){var node=arr[i],oldParent=node.parent||node.root;(oldParent=oldParent&&oldParent.children)&&oldParent!==arr&&(oldParent.splice(oldParent.indexOf(node),1),node.prev&&(node.prev.next=node.next),node.next&&(node.next.prev=node.prev));parent?(node.prev=arr[i-1]||null,node.next=arr[i+1]||null):node.prev=node.next=null;parent&&
"root"===parent.type?(node.root=parent,node.parent=null):(node.root=null,node.parent=parent)}return parent}}
//# sourceMappingURL=module$node_modules$cheerio$lib$parse.js.map
