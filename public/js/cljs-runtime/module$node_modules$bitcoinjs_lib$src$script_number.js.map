{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$script_number.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrI,IAAMC,OAASJ,OAAA,CAAQ,uCAAR,CAAAI,OA+DfH,OAAAC,QAAA,CAAiB,CACfG,OA9DFA,QAAgB,CAACC,MAAD,CAASC,SAAT,CAAoBC,OAApB,CAA6B,CAE3CA,OAAA,CAAsBC,IAAAA,EAAZ,GAAAD,OAAA,CAAwB,CAAA,CAAxB,CAA+BA,OAEzC,KAAME,OAASJ,MAAAI,OACf,IAAe,CAAf,GAAIA,MAAJ,CAAkB,MAAO,EACzB,IAAIA,MAAJ,EALYH,SAKZ,EALyB,CAKzB,EAAwB,KAAM,KAAII,SAAJ,CAAc,wBAAd,CAAN,CACxB,GAAIH,OAAJ,EACsC,CADtC,IACOF,MAAA,CAAOI,MAAP,CAAgB,CAAhB,CADP,CAC4B,GAD5B,IAEkB,CAFlB,EAEQA,MAFR,EAEuD,CAFvD,IAEwBJ,MAAA,CAAOI,MAAP,CAAgB,CAAhB,CAFxB,CAE6C,GAF7C,GAE0D,KAAUE,MAAJ,CAAU,qCAAV,CAAN;AAK1D,GAAe,CAAf,GAAIF,MAAJ,CAIE,MAHMG,OAGN,CAHUP,MAAAQ,aAAA,CAAoB,CAApB,CAGV,CAFMC,MAEN,CAFUT,MAAAU,UAAA,CAAiB,CAAjB,CAEV,CAAID,MAAJ,CAAQ,GAAR,CAAqB,EAAiB,UAAjB,EAAIA,MAAJ,CAAQ,IAAR,EAAgCF,MAAhC,CAArB,CACY,UADZ,CACQE,MADR,CAC2BF,MAK7B,KAASI,OAAT,CADIC,SACJ,CADa,CACb,CAAgBD,OAAhB,CAAoBP,MAApB,CAA4B,EAAEO,OAA9B,CACEC,SAAA,EAAUZ,MAAA,CAAOW,OAAP,CAAV,EAAwB,CAAxB,CAA4BA,OAG9B,OAAIX,OAAA,CAAOI,MAAP,CAAgB,CAAhB,CAAJ,CAAyB,GAAzB,CAAsC,EAAEQ,SAAF,CAAW,EAAE,GAAF,EAAW,CAAX,EAAgBR,MAAhB,CAAyB,CAAzB,EAAX,CAAtC,CACOQ,SA7BoC,CA6D5B,CAEfC,OAtBFA,QAAgB,CAACC,MAAD,CAAS,CACvB,IAAIC,MAAQC,IAAAC,IAAA,CAASH,MAAT,CAAZ,CACMI,KAVK,UAAJ,CAUoBH,KAVpB,CAAiB,CAAjB,CACC,OAAJ,CASuBA,KATvB,CAAe,CAAf,CACM,KAAJ,CAQqBA,KARrB,CAAa,CAAb,CACM,GAAJ,CAOmBA,KAPnB,CAAW,CAAX,CACM,CAAJ,CAMiBA,KANjB,CAAW,CAAX,CACE,CAIZ,CAEMf,OAASF,MAAAqB,YAAA,CAAmBD,IAAnB,CACTE,OAAAA,CAAoB,CAApBA,CAAWN,MAEjB,KAAK,IAAIH,EAAI,CAAb,CAAgBA,CAAhB,CAAoBO,IAApB,CAA0B,EAAEP,CAA5B,CACEX,MAAAqB,WAAA,CAAkBN,KAAlB;AAA0B,GAA1B,CAAgCJ,CAAhC,CACA,CAAAI,KAAA,GAAU,CAGRf,OAAA,CAAOkB,IAAP,CAAc,CAAd,CAAJ,CAAuB,GAAvB,CACElB,MAAAqB,WAAA,CAAkBD,MAAA,CAAW,GAAX,CAAkB,CAApC,CAA0CF,IAA1C,CAAiD,CAAjD,CADF,CAEWE,MAFX,GAGEpB,MAAA,CAAOkB,IAAP,CAAc,CAAd,CAHF,EAGsB,GAHtB,CAMA,OAAOlB,OAjBgB,CAoBR,CAhEoH;",
"sources":["node_modules/bitcoinjs-lib/src/script_number.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$script_number\"] = function(global,process,require,module,exports,shadow$shims) {\nconst Buffer = require('safe-buffer').Buffer\n\nfunction decode (buffer, maxLength, minimal) {\n  maxLength = maxLength || 4\n  minimal = minimal === undefined ? true : minimal\n\n  const length = buffer.length\n  if (length === 0) return 0\n  if (length > maxLength) throw new TypeError('Script number overflow')\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0) throw new Error('Non-minimally encoded script number')\n    }\n  }\n\n  // 40-bit\n  if (length === 5) {\n    const a = buffer.readUInt32LE(0)\n    const b = buffer.readUInt8(4)\n\n    if (b & 0x80) return -(((b & ~0x80) * 0x100000000) + a)\n    return (b * 0x100000000) + a\n  }\n\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0\n  for (var i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i)\n  }\n\n  if (buffer[length - 1] & 0x80) return -(result & ~(0x80 << (8 * (length - 1))))\n  return result\n}\n\nfunction scriptNumSize (i) {\n  return i > 0x7fffffff ? 5\n    : i > 0x7fffff ? 4\n      : i > 0x7fff ? 3\n        : i > 0x7f ? 2\n          : i > 0x00 ? 1\n            : 0\n}\n\nfunction encode (number) {\n  let value = Math.abs(number)\n  const size = scriptNumSize(value)\n  const buffer = Buffer.allocUnsafe(size)\n  const negative = number < 0\n\n  for (var i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i)\n    value >>= 8\n  }\n\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1)\n  } else if (negative) {\n    buffer[size - 1] |= 0x80\n  }\n\n  return buffer\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Buffer","decode","buffer","maxLength","minimal","undefined","length","TypeError","Error","a","readUInt32LE","b","readUInt8","i","result","encode","number","value","Math","abs","size","allocUnsafe","negative","writeUInt8"]
}
