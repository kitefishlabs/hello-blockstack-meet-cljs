{
"version":3,
"file":"module$node_modules$assert$assert.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/assert/assert.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$assert$assert\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","compare","a","b","x","length","y","i","len","Math","min","isBuffer","Buffer","_isBuffer","isView","arrbuf","ArrayBuffer","DataView","buffer","getName","func","util","isFunction","functionsHaveNames","name","match","toString","str","regex","truncate","s","n","slice","inspect","something","rawname","fail","actual","expected","message","operator","stackStartFunction","assert","AssertionError","ok","value","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Object","prototype","call","Float32Array","Float64Array","actualIndex","indexOf","push","objEquiv","Uint8Array","isArguments","object","actualVisitedObjects","undefined","isPrimitive","getPrototypeOf","aIsArgs","bIsArgs","pSlice","ka","objectKeys","kb","sort","key","notDeepStrictEqual","expectedException","test","e","Error","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","userProvidedMessage","isUnwantedException","isError","isUnexpectedException","hasOwn","hasOwnProperty","Array","foo","assert.AssertionError","options","generatedMessage","self","captureStackTrace","err","stack","out","fn_name","idx","next_line","substring","inherits","equal","assert.equal","notEqual","assert.notEqual","deepEqual","assert.deepEqual","deepStrictEqual","assert.deepStrictEqual","notDeepEqual","assert.notDeepEqual","strictEqual","assert.strictEqual","notStrictEqual","assert.notStrictEqual","throws","assert.throws","doesNotThrow","assert.doesNotThrow","ifError","assert.ifError","keys","obj"]
}
