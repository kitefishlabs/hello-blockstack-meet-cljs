shadow$provide.module$node_modules$typeforce$index=function(global,process,require,module,exports,shadow$shims){function compile(type){if(NATIVE.String(type))return"?"===type[0]?TYPES.maybe(type.slice(1)):NATIVE[type]||TYPES.quacksLike(type);if(type&&NATIVE.Object(type)){if(NATIVE.Array(type)){if(1!==type.length)throw new TypeError("Expected compile() parameter of type Array of length 1");return TYPES.arrayOf(type[0])}return TYPES.object(type)}return NATIVE.Function(type)?type:TYPES.value(type)}function typeforce(type,
value,strict,surrogate){if(NATIVE.Function(type)){if(type(value,strict))return!0;throw new TfTypeError(surrogate||type,value);}return typeforce(compile(type),value,strict)}global=require("module$node_modules$typeforce$errors");var NATIVE=require("module$node_modules$typeforce$native"),tfJSON=global.tfJSON,TfTypeError=global.TfTypeError,TfPropertyTypeError=global.TfPropertyTypeError,tfSubError=global.tfSubError,getValueTypeName=global.getValueTypeName,TYPES={arrayOf:function(type,options){function _arrayOf(array,
strict){return!NATIVE.Array(array)||NATIVE.Nil(array)||void 0!==options.minLength&&array.length<options.minLength||void 0!==options.maxLength&&array.length>options.maxLength||void 0!==options.length&&array.length!==options.length?!1:array.every(function(value,i){try{return typeforce(type,value,strict)}catch(e){throw tfSubError(e,i);}})}type=compile(type);options=options||{};_arrayOf.toJSON=function(){var str="["+tfJSON(type)+"]";if(void 0!==options.length)str+="{"+options.length+"}";else if(void 0!==
options.minLength||void 0!==options.maxLength)str+="{"+(void 0===options.minLength?0:options.minLength)+","+(void 0===options.maxLength?Infinity:options.maxLength)+"}";return str};return _arrayOf},maybe:function maybe(type){function _maybe(value,strict){return NATIVE.Nil(value)||type(value,strict,maybe)}type=compile(type);_maybe.toJSON=function(){return"?"+tfJSON(type)};return _maybe},map:function(propertyType,propertyKeyType){function _map(value,strict){if(!NATIVE.Object(value)||NATIVE.Nil(value))return!1;
for(var propertyName in value){try{propertyKeyType&&typeforce(propertyKeyType,propertyName,strict)}catch(e){throw tfSubError(e,propertyName,"key");}try{typeforce(propertyType,value[propertyName],strict)}catch(e$9){throw tfSubError(e$9,propertyName);}}return!0}propertyType=compile(propertyType);propertyKeyType&&(propertyKeyType=compile(propertyKeyType));_map.toJSON=propertyKeyType?function(){return"{"+tfJSON(propertyKeyType)+": "+tfJSON(propertyType)+"}"}:function(){return"{"+tfJSON(propertyType)+
"}"};return _map},object:function(uncompiled){function _object(value,strict){if(!NATIVE.Object(value)||NATIVE.Nil(value))return!1;var propertyName;try{for(propertyName in type)typeforce(type[propertyName],value[propertyName],strict)}catch(e){throw tfSubError(e,propertyName);}if(strict)for(propertyName in value)if(!type[propertyName])throw new TfPropertyTypeError(void 0,propertyName);return!0}var type={},typePropertyName;for(typePropertyName in uncompiled)type[typePropertyName]=compile(uncompiled[typePropertyName]);
_object.toJSON=function(){return tfJSON(type)};return _object},anyOf:function(){function _anyOf(value,strict){return types.some(function(type){try{return typeforce(type,value,strict)}catch(e){return!1}})}var types=[].slice.call(arguments).map(compile);_anyOf.toJSON=function(){return types.map(tfJSON).join("|")};return _anyOf},allOf:function(){function _allOf(value,strict){return types.every(function(type){try{return typeforce(type,value,strict)}catch(e){return!1}})}var types=[].slice.call(arguments).map(compile);
_allOf.toJSON=function(){return types.map(tfJSON).join(" \x26 ")};return _allOf},quacksLike:function(type){function _quacksLike(value){return type===getValueTypeName(value)}_quacksLike.toJSON=function(){return type};return _quacksLike},tuple:function(){function _tuple(values,strict){return NATIVE.Nil(values)||NATIVE.Nil(values.length)||strict&&values.length!==types.length?!1:types.every(function(type,i){try{return typeforce(type,values[i],strict)}catch(e){throw tfSubError(e,i);}})}var types=[].slice.call(arguments).map(compile);
_tuple.toJSON=function(){return"("+types.map(tfJSON).join(", ")+")"};return _tuple},value:function(expected){function _value(actual){return actual===expected}_value.toJSON=function(){return expected};return _value}};TYPES.oneOf=TYPES.anyOf;for(var typeName in NATIVE)typeforce[typeName]=NATIVE[typeName];for(typeName in TYPES)typeforce[typeName]=TYPES[typeName];require=require("module$node_modules$typeforce$extra");for(typeName in require)typeforce[typeName]=require[typeName];typeforce.compile=compile;
typeforce.TfTypeError=TfTypeError;typeforce.TfPropertyTypeError=TfPropertyTypeError;module.exports=typeforce}
//# sourceMappingURL=module$node_modules$typeforce$index.js.map
