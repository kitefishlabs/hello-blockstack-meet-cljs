shadow$provide.module$node_modules$blockstack$lib$storage$index=function(global,process,require,module,exports,shadow$shims){function getUserAppFileUrl(path,username,appOrigin){var zoneFileLookupURL=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return(0,_profiles.lookupProfile)(username,zoneFileLookupURL).then(function(profile){return profile.hasOwnProperty("apps")?profile.apps.hasOwnProperty(appOrigin)?profile.apps[appOrigin]:null:null}).then(function(bucketUrl){return bucketUrl?""+
bucketUrl.replace(/\/?(\?|#|$)/,"/$1")+path:null})}function encryptContent(content,options){options=Object.assign({},{publicKey:null},options);if(!options.publicKey){var privateKey=(0,_auth.loadUserData)().appPrivateKey;options.publicKey=(0,_keys.getPublicKeyFromPrivate)(privateKey)}content=(0,_encryption.encryptECIES)(options.publicKey,content);return JSON.stringify(content)}function decryptContent(content,options){options=Object.assign({},{privateKey:null},options).privateKey;options||(options=
(0,_auth.loadUserData)().appPrivateKey);try{var cipherObject=JSON.parse(content);return(0,_encryption.decryptECIES)(options,cipherObject)}catch(err){if(err instanceof SyntaxError)throw Error("Failed to parse encrypted content JSON. The content may not be encrypted. If using getFile, try passing { decrypt: false }.");throw err;}}function getGaiaAddress(app,username,zoneFileLookupURL){return Promise.resolve().then(function(){return username?getUserAppFileUrl("/",username,app,zoneFileLookupURL):(0,_hub.getOrSetLocalGaiaHubConnection)().then(function(gaiaHubConfig){return(0,
_hub.getFullReadUrl)("/",gaiaHubConfig)})}).then(function(fileUrl){fileUrl=fileUrl.match(/([13][a-km-zA-HJ-NP-Z0-9]{26,35})/);if(!fileUrl)throw Error("Failed to parse gaia address");return fileUrl[fileUrl.length-1]})}function getFileContents(path,app,username,zoneFileLookupURL,forceText){return Promise.resolve().then(function(){return username?getUserAppFileUrl(path,username,app,zoneFileLookupURL):(0,_hub.getOrSetLocalGaiaHubConnection)().then(function(gaiaHubConfig){return(0,_hub.getFullReadUrl)(path,
gaiaHubConfig)})}).then(function(readUrl){return new Promise(function(resolve,reject){readUrl?resolve(readUrl):reject(null)})}).then(function(readUrl){return fetch(readUrl)}).then(function(response){if(200!==response.status){if(404===response.status)return _logger.Logger.debug("getFile "+path+" returned 404, returning null"),null;throw Error("getFile "+path+" failed with HTTP status "+response.status);}var contentType=response.headers.get("Content-Type");return forceText||null===contentType||contentType.startsWith("text")||
"application/json"===contentType?response.text():response.arrayBuffer()})}function getFileSignedUnencrypted(path,opt){return Promise.all([getFileContents(path,opt.app,opt.username,opt.zoneFileLookupURL,!1),getFileContents(""+path+SIGNATURE_FILE_SUFFIX,opt.app,opt.username,opt.zoneFileLookupURL,!0),getGaiaAddress(opt.app,opt.username,opt.zoneFileLookupURL)]).then(function(_ref){var _ref2=_slicedToArray(_ref,3);_ref=_ref2[0];var signatureContents=_ref2[1];_ref2=_ref2[2];if(!_ref)return _ref;if(!_ref2)throw new _errors.SignatureVerificationError("Failed to get gaia address for verification of: "+
path);if(!signatureContents||"string"!==typeof signatureContents)throw new _errors.SignatureVerificationError("Failed to obtain signature for file: "+(path+" -- looked in "+path+SIGNATURE_FILE_SUFFIX));var signature=void 0,publicKey=void 0;try{var sigObject=JSON.parse(signatureContents);signature=sigObject.signature;publicKey=sigObject.publicKey}catch(err){if(err instanceof SyntaxError)throw Error("Failed to parse signature content JSON "+("(path: "+path+SIGNATURE_FILE_SUFFIX+")")+" The content may be corrupted.");
throw err;}sigObject=(0,_keys.publicKeyToAddress)(publicKey);if(_ref2!==sigObject)throw new _errors.SignatureVerificationError("Signer pubkey address ("+sigObject+") doesn't"+(" match gaia address ("+_ref2+")"));if((0,_encryption.verifyECDSA)(shadow$shims.Buffer.from(_ref),publicKey,signature))return _ref;throw new _errors.SignatureVerificationError("Contents do not match ECDSA signature: "+("path: "+path+", signature: "+path+SIGNATURE_FILE_SUFFIX));})}function handleSignedEncryptedContents(path,
storedContents,app,username,zoneFileLookupURL){var appPrivateKey=(0,_auth.loadUserData)().appPrivateKey;appPrivateKey=(0,_keys.getPublicKeyFromPrivate)(appPrivateKey);var addressPromise=void 0;username?addressPromise=getGaiaAddress(app,username,zoneFileLookupURL):(app=(0,_keys.publicKeyToAddress)(appPrivateKey),addressPromise=Promise.resolve(app));return addressPromise.then(function(address){if(!address)throw new _errors.SignatureVerificationError("Failed to get gaia address for verification of: "+
path);var sigObject=void 0;try{sigObject=JSON.parse(storedContents)}catch(err){if(err instanceof SyntaxError)throw Error("Failed to parse encrypted, signed content JSON. The content may not be encrypted. If using getFile, try passing { verify: false, decrypt: false }.");throw err;}var signature=sigObject.signature,signerPublicKey=sigObject.publicKey;sigObject=sigObject.cipherText;var signerAddress=(0,_keys.publicKeyToAddress)(signerPublicKey);if(signerPublicKey&&sigObject&&signature){if(signerAddress!==
address)throw new _errors.SignatureVerificationError("Signer pubkey address ("+signerAddress+") doesn't"+(" match gaia address ("+address+")"));if((0,_encryption.verifyECDSA)(sigObject,signerPublicKey,signature))return decryptContent(sigObject);throw new _errors.SignatureVerificationError("Contents do not match ECDSA signature in file: "+path);}throw new _errors.SignatureVerificationError("Failed to get signature verification data from file: "+path);})}function listFilesLoop(hubConfig,page,callCount,
fileCount,callback){if(65536<callCount)throw Error("Too many entries to list");var httpStatus=void 0;page=JSON.stringify({page:page});return fetch(hubConfig.server+"/list-files/"+hubConfig.address,{method:"POST",headers:{"Content-Type":"application/json","Content-Length":""+page.length,Authorization:"bearer "+hubConfig.token},body:page}).then(function(response){httpStatus=response.status;if(400<=httpStatus)throw Error("listFiles failed with HTTP status "+httpStatus);return response.text()}).then(function(responseText){return JSON.parse(responseText)}).then(function(responseJSON){var entries=
responseJSON.entries;responseJSON=responseJSON.page;if(null===entries||void 0===entries)throw Error("Bad listFiles response: no entries");for(var i=0;i<entries.length;i++)if(!callback(entries[i]))return Promise.resolve(fileCount+i);return responseJSON&&0<entries.length?listFilesLoop(hubConfig,responseJSON,callCount+1,fileCount+entries.length,callback):Promise.resolve(fileCount+entries.length)})}Object.defineProperty(exports,"__esModule",{value:!0});exports.BLOCKSTACK_GAIA_HUB_LABEL=exports.uploadToGaiaHub=
exports.connectToGaiaHub=void 0;var _slicedToArray=function(){return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e;}}return _arr}throw new TypeError("Invalid attempt to destructure non-iterable instance");}}();exports.getUserAppFileUrl=
getUserAppFileUrl;exports.encryptContent=encryptContent;exports.decryptContent=decryptContent;exports.getFile=function(path,options){var opt=Object.assign({},{decrypt:!0,verify:!1,username:null,app:window.location.origin,zoneFileLookupURL:null},options);return opt.verify&&!opt.decrypt?getFileSignedUnencrypted(path,opt):getFileContents(path,opt.app,opt.username,opt.zoneFileLookupURL,!!opt.decrypt).then(function(storedContents){if(null===storedContents)return storedContents;if(opt.decrypt&&!opt.verify){if("string"!==
typeof storedContents)throw Error("Expected to get back a string for the cipherText");return decryptContent(storedContents)}if(opt.decrypt&&opt.verify){if("string"!==typeof storedContents)throw Error("Expected to get back a string for the cipherText");return handleSignedEncryptedContents(path,storedContents,opt.app,opt.username,opt.zoneFileLookupURL)}if(opt.verify||opt.decrypt)throw Error("Should be unreachable.");return storedContents})};exports.putFile=function(path,content,options){var opt=Object.assign({},
{encrypt:!0,sign:!1,contentType:""},options),contentType=opt.contentType;contentType||(contentType="string"===typeof content?"text/plain; charset\x3dutf-8":"application/octet-stream");var publicKey=options="";opt.sign&&(options="string"===typeof opt.sign?opt.sign:(0,_auth.loadUserData)().appPrivateKey);opt.encrypt&&("string"===typeof opt.encrypt?publicKey=opt.encrypt:(options||(options=(0,_auth.loadUserData)().appPrivateKey),publicKey=(0,_keys.getPublicKeyFromPrivate)(options)));if(!opt.encrypt&&
opt.sign){options=(0,_encryption.signECDSA)(options,content);var signatureContent=JSON.stringify(options);return(0,_hub.getOrSetLocalGaiaHubConnection)().then(function(gaiaHubConfig){return new Promise(function(resolve,reject){return Promise.all([(0,_hub.uploadToGaiaHub)(path,content,gaiaHubConfig,contentType),(0,_hub.uploadToGaiaHub)(""+path+SIGNATURE_FILE_SUFFIX,signatureContent,gaiaHubConfig,"application/json")]).then(resolve).catch(function(){(0,_hub.setLocalGaiaHubConnection)().then(function(freshHubConfig){return Promise.all([(0,
_hub.uploadToGaiaHub)(path,content,freshHubConfig,contentType),(0,_hub.uploadToGaiaHub)(""+path+SIGNATURE_FILE_SUFFIX,signatureContent,freshHubConfig,"application/json")]).then(resolve).catch(reject)})})})}).then(function(fileUrls){return fileUrls[0]})}opt.encrypt&&!opt.sign?(content=encryptContent(content,{publicKey:publicKey}),contentType="application/json"):opt.encrypt&&opt.sign&&(opt=encryptContent(content,{publicKey:publicKey}),options=(0,_encryption.signECDSA)(options,opt),content=JSON.stringify({signature:options.signature,
publicKey:options.publicKey,cipherText:opt}),contentType="application/json");return(0,_hub.getOrSetLocalGaiaHubConnection)().then(function(gaiaHubConfig){return new Promise(function(resolve,reject){(0,_hub.uploadToGaiaHub)(path,content,gaiaHubConfig,contentType).then(resolve).catch(function(){(0,_hub.setLocalGaiaHubConnection)().then(function(freshHubConfig){return(0,_hub.uploadToGaiaHub)(path,content,freshHubConfig,contentType).then(resolve).catch(reject)})})})})};exports.getAppBucketUrl=function(gaiaHubUrl,
appPrivateKey){return(0,_hub.getBucketUrl)(gaiaHubUrl,appPrivateKey)};exports.deleteFile=function(path){Promise.reject(Error("Delete of "+path+" not supported by gaia hubs"))};exports.listFiles=function(callback){return(0,_hub.getOrSetLocalGaiaHubConnection)().then(function(gaiaHubConfig){return listFilesLoop(gaiaHubConfig,null,0,0,callback)})};var _hub=require("module$node_modules$blockstack$lib$storage$hub"),_encryption=require("module$node_modules$blockstack$lib$encryption"),_auth=require("module$node_modules$blockstack$lib$auth$index"),
_keys=require("module$node_modules$blockstack$lib$keys"),_profiles=require("module$node_modules$blockstack$lib$profiles$index"),_errors=require("module$node_modules$blockstack$lib$errors"),_logger=require("module$node_modules$blockstack$lib$logger"),SIGNATURE_FILE_SUFFIX=".sig";exports.connectToGaiaHub=_hub.connectToGaiaHub;exports.uploadToGaiaHub=_hub.uploadToGaiaHub;exports.BLOCKSTACK_GAIA_HUB_LABEL=_hub.BLOCKSTACK_GAIA_HUB_LABEL}
//# sourceMappingURL=module$node_modules$blockstack$lib$storage$index.js.map
