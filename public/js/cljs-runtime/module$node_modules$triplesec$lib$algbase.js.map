{
"version":3,
"file":"module$node_modules$triplesec$lib$algbase.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/triplesec/lib/algbase.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$triplesec$lib$algbase\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var BlockCipher, BufferedBlockAlgorithm, Hasher, StreamCipher, WordArray, util,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  WordArray = require('./wordarray').WordArray;\n\n  util = require('./util');\n\n  BufferedBlockAlgorithm = (function() {\n    BufferedBlockAlgorithm.prototype._minBufferSize = 0;\n\n    function BufferedBlockAlgorithm() {\n      this.reset();\n    }\n\n    BufferedBlockAlgorithm.prototype.reset = function() {\n      this._data = new WordArray();\n      return this._nDataBytes = 0;\n    };\n\n    BufferedBlockAlgorithm.prototype._append = function(data) {\n      this._data.concat(data);\n      return this._nDataBytes += data.sigBytes;\n    };\n\n    BufferedBlockAlgorithm.prototype._process = function(doFlush) {\n      var blockSizeBytes, data, dataSigBytes, dataWords, nBlocksReady, nBytesReady, nWordsReady, offset, processedWords, _i, _ref;\n      data = this._data;\n      dataWords = data.words;\n      dataSigBytes = data.sigBytes;\n      blockSizeBytes = this.blockSize * 4;\n      nBlocksReady = dataSigBytes / blockSizeBytes;\n      if (doFlush) {\n        nBlocksReady = Math.ceil(nBlocksReady);\n      } else {\n        nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n      }\n      nWordsReady = nBlocksReady * this.blockSize;\n      nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n      if (nWordsReady) {\n        for (offset = _i = 0, _ref = this.blockSize; _ref > 0 ? _i < nWordsReady : _i > nWordsReady; offset = _i += _ref) {\n          this._doProcessBlock(dataWords, offset);\n        }\n        processedWords = dataWords.splice(0, nWordsReady);\n        data.sigBytes -= nBytesReady;\n      }\n      return new WordArray(processedWords, nBytesReady);\n    };\n\n    BufferedBlockAlgorithm.prototype.copy_to = function(out) {\n      out._data = this._data.clone();\n      return out._nDataBytes = this._nDataBytes;\n    };\n\n    BufferedBlockAlgorithm.prototype.clone = function() {\n      var obj;\n      obj = new BufferedBlockAlgorithm();\n      this.copy_to(obj);\n      return obj;\n    };\n\n    return BufferedBlockAlgorithm;\n\n  })();\n\n  Hasher = (function(_super) {\n    __extends(Hasher, _super);\n\n    function Hasher() {\n      Hasher.__super__.constructor.call(this);\n    }\n\n    Hasher.prototype.reset = function() {\n      Hasher.__super__.reset.call(this);\n      this._doReset();\n      return this;\n    };\n\n    Hasher.prototype.update = function(messageUpdate) {\n      this._append(messageUpdate);\n      this._process();\n      return this;\n    };\n\n    Hasher.prototype.finalize = function(messageUpdate) {\n      if (messageUpdate) {\n        this._append(messageUpdate);\n      }\n      return this._doFinalize();\n    };\n\n    Hasher.prototype.bufhash = function(input) {\n      var out, wa_in, wa_out;\n      wa_in = WordArray.from_buffer(input);\n      wa_out = this.finalize(wa_in);\n      out = wa_out.to_buffer();\n      wa_in.scrub();\n      wa_out.scrub();\n      return out;\n    };\n\n    return Hasher;\n\n  })(BufferedBlockAlgorithm);\n\n  exports.BlockCipher = BlockCipher = (function() {\n    function BlockCipher(key) {}\n\n    BlockCipher.prototype.encryptBlock = function(M, offset) {};\n\n    return BlockCipher;\n\n  })();\n\n  StreamCipher = (function() {\n    function StreamCipher() {}\n\n    StreamCipher.prototype.encryptBlock = function(word_array, dst_offset) {\n      var n_words, pad;\n      if (dst_offset == null) {\n        dst_offset = 0;\n      }\n      pad = this.get_pad();\n      n_words = Math.min(word_array.words.length - dst_offset, this.bsiw);\n      word_array.xor(pad, {\n        dst_offset: dst_offset,\n        n_words: n_words\n      });\n      pad.scrub();\n      return this.bsiw;\n    };\n\n    StreamCipher.prototype.encrypt = function(word_array) {\n      var i, _i, _ref, _ref1;\n      for (i = _i = 0, _ref = word_array.words.length, _ref1 = this.bsiw; _ref1 > 0 ? _i < _ref : _i > _ref; i = _i += _ref1) {\n        this.encryptBlock(word_array, i);\n      }\n      return word_array;\n    };\n\n    StreamCipher.prototype.bulk_encrypt = function(_arg, cb) {\n      var async_args, input, progress_hook, slice_args, what;\n      input = _arg.input, progress_hook = _arg.progress_hook, what = _arg.what;\n      slice_args = {\n        update: (function(_this) {\n          return function(lo, hi) {\n            var i, _i, _ref, _results;\n            _results = [];\n            for (i = _i = lo, _ref = _this.bsiw; _ref > 0 ? _i < hi : _i > hi; i = _i += _ref) {\n              _results.push(_this.encryptBlock(input, i));\n            }\n            return _results;\n          };\n        })(this),\n        finalize: function() {\n          return input;\n        },\n        default_n: this.bsiw * 1024\n      };\n      async_args = {\n        progress_hook: progress_hook,\n        cb: cb,\n        what: what\n      };\n      return util.bulk(input.sigBytes, slice_args, async_args);\n    };\n\n    return StreamCipher;\n\n  })();\n\n  exports.BlockCipher = BlockCipher;\n\n  exports.Hasher = Hasher;\n\n  exports.BufferedBlockAlgorithm = BufferedBlockAlgorithm;\n\n  exports.StreamCipher = StreamCipher;\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","BlockCipher","__hasProp","hasOwnProperty","__extends","child","parent","ctor","constructor","key","call","prototype","__super__","WordArray","util","BufferedBlockAlgorithm","reset","_minBufferSize","BufferedBlockAlgorithm.prototype.reset","_data","_nDataBytes","_append","BufferedBlockAlgorithm.prototype._append","data","concat","sigBytes","_process","BufferedBlockAlgorithm.prototype._process","doFlush","_ref","dataWords","words","dataSigBytes","nBlocksReady","blockSize","Math","ceil","max","nWordsReady","nBytesReady","min","offset","_i","_doProcessBlock","processedWords","splice","copy_to","BufferedBlockAlgorithm.prototype.copy_to","out","clone","BufferedBlockAlgorithm.prototype.clone","obj","Hasher","_super","Hasher.prototype.reset","_doReset","update","Hasher.prototype.update","messageUpdate","finalize","Hasher.prototype.finalize","_doFinalize","bufhash","Hasher.prototype.bufhash","input","wa_in","from_buffer","wa_out","to_buffer","scrub","encryptBlock","BlockCipher.prototype.encryptBlock","M","StreamCipher","StreamCipher.prototype.encryptBlock","word_array","dst_offset","pad","get_pad","xor","n_words","length","bsiw","encrypt","StreamCipher.prototype.encrypt","_ref1","i","bulk_encrypt","StreamCipher.prototype.bulk_encrypt","_arg","cb","progress_hook","what","slice_args","_this","lo","hi","_results","push","default_n","bulk","async_args"]
}
