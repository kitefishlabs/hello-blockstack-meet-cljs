{
"version":3,
"file":"module$node_modules$triplesec$lib$aes.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/triplesec/lib/aes.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$triplesec$lib$aes\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var AES, BlockCipher, G, Global, scrub_vec,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  BlockCipher = require('./algbase').BlockCipher;\n\n  scrub_vec = require('./util').scrub_vec;\n\n  Global = (function() {\n    function Global() {\n      var i;\n      this.SBOX = [];\n      this.INV_SBOX = [];\n      this.SUB_MIX = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n      this.INV_SUB_MIX = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push([]);\n        }\n        return _results;\n      })();\n      this.init();\n      this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n    }\n\n    Global.prototype.init = function() {\n      var d, i, sx, t, x, x2, x4, x8, xi, _i;\n      d = (function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 256; i = ++_i) {\n          if (i < 128) {\n            _results.push(i << 1);\n          } else {\n            _results.push((i << 1) ^ 0x11b);\n          }\n        }\n        return _results;\n      })();\n      x = 0;\n      xi = 0;\n      for (i = _i = 0; _i < 256; i = ++_i) {\n        sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n        sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n        this.SBOX[x] = sx;\n        this.INV_SBOX[sx] = x;\n        x2 = d[x];\n        x4 = d[x2];\n        x8 = d[x4];\n        t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n        this.SUB_MIX[0][x] = (t << 24) | (t >>> 8);\n        this.SUB_MIX[1][x] = (t << 16) | (t >>> 16);\n        this.SUB_MIX[2][x] = (t << 8) | (t >>> 24);\n        this.SUB_MIX[3][x] = t;\n        t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n        this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8);\n        this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16);\n        this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24);\n        this.INV_SUB_MIX[3][sx] = t;\n        if (x === 0) {\n          x = xi = 1;\n        } else {\n          x = x2 ^ d[d[d[x8 ^ x2]]];\n          xi ^= d[d[xi]];\n        }\n      }\n      return true;\n    };\n\n    return Global;\n\n  })();\n\n  G = new Global();\n\n  AES = (function(_super) {\n    __extends(AES, _super);\n\n    AES.blockSize = 4 * 4;\n\n    AES.prototype.blockSize = AES.blockSize;\n\n    AES.keySize = 256 / 8;\n\n    AES.prototype.keySize = AES.keySize;\n\n    AES.ivSize = AES.blockSize;\n\n    AES.prototype.ivSize = AES.ivSize;\n\n    function AES(key) {\n      this._key = key.clone();\n      this._doReset();\n    }\n\n    AES.prototype._doReset = function() {\n      var invKsRow, keySize, keyWords, ksRow, ksRows, t, _i, _j;\n      keyWords = this._key.words;\n      keySize = this._key.sigBytes / 4;\n      this._nRounds = keySize + 6;\n      ksRows = (this._nRounds + 1) * 4;\n      this._keySchedule = [];\n      for (ksRow = _i = 0; 0 <= ksRows ? _i < ksRows : _i > ksRows; ksRow = 0 <= ksRows ? ++_i : --_i) {\n        this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t);\n      }\n      this._invKeySchedule = [];\n      for (invKsRow = _j = 0; 0 <= ksRows ? _j < ksRows : _j > ksRows; invKsRow = 0 <= ksRows ? ++_j : --_j) {\n        ksRow = ksRows - invKsRow;\n        t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)];\n        this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]];\n      }\n      return true;\n    };\n\n    AES.prototype.encryptBlock = function(M, offset) {\n      if (offset == null) {\n        offset = 0;\n      }\n      return this._doCryptBlock(M, offset, this._keySchedule, G.SUB_MIX, G.SBOX);\n    };\n\n    AES.prototype.decryptBlock = function(M, offset) {\n      var _ref, _ref1;\n      if (offset == null) {\n        offset = 0;\n      }\n      _ref = [M[offset + 3], M[offset + 1]], M[offset + 1] = _ref[0], M[offset + 3] = _ref[1];\n      this._doCryptBlock(M, offset, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX);\n      return _ref1 = [M[offset + 3], M[offset + 1]], M[offset + 1] = _ref1[0], M[offset + 3] = _ref1[1], _ref1;\n    };\n\n    AES.prototype.scrub = function() {\n      scrub_vec(this._keySchedule);\n      scrub_vec(this._invKeySchedule);\n      return this._key.scrub();\n    };\n\n    AES.prototype._doCryptBlock = function(M, offset, keySchedule, SUB_MIX, SBOX) {\n      var ksRow, round, s0, s1, s2, s3, t0, t1, t2, t3, _i, _ref;\n      s0 = M[offset] ^ keySchedule[0];\n      s1 = M[offset + 1] ^ keySchedule[1];\n      s2 = M[offset + 2] ^ keySchedule[2];\n      s3 = M[offset + 3] ^ keySchedule[3];\n      ksRow = 4;\n      for (round = _i = 1, _ref = this._nRounds; 1 <= _ref ? _i < _ref : _i > _ref; round = 1 <= _ref ? ++_i : --_i) {\n        t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++];\n        t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++];\n        t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++];\n        t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++];\n        s0 = t0;\n        s1 = t1;\n        s2 = t2;\n        s3 = t3;\n      }\n      t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n      t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n      t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n      t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n      M[offset] = t0;\n      M[offset + 1] = t1;\n      M[offset + 2] = t2;\n      return M[offset + 3] = t3;\n    };\n\n    return AES;\n\n  })(BlockCipher);\n\n  exports.AES = AES;\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__hasProp","hasOwnProperty","__extends","child","parent","ctor","constructor","key","call","prototype","__super__","BlockCipher","scrub_vec","G","Global","SBOX","INV_SBOX","SUB_MIX","_i","_results","push","INV_SUB_MIX","init","RCON","Global.prototype.init","i","t","x","xi","sx","x2","x4","x8","AES","_super","_key","clone","_doReset","blockSize","keySize","ivSize","AES.prototype._doReset","ksRow","keyWords","words","sigBytes","_nRounds","ksRows","_keySchedule","_invKeySchedule","invKsRow","_j","encryptBlock","AES.prototype.encryptBlock","M","offset","_doCryptBlock","decryptBlock","AES.prototype.decryptBlock","_ref1","_ref","scrub","AES.prototype.scrub","AES.prototype._doCryptBlock","keySchedule","s0","s1","s2","s3","t0","t1","t2","t3"]
}
