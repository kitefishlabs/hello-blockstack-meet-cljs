{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2sh.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2sh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2sh\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\n\nconst bcrypto = require('../crypto')\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\nconst bs58check = require('bs58check')\n\nfunction stacksEqual (a, b) {\n  if (a.length !== b.length) return false\n\n  return a.every(function (x, i) {\n    return x.equals(b[i])\n  })\n}\n\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh (a, opts) {\n  if (\n    !a.address &&\n    !a.hash &&\n    !a.output &&\n    !a.redeem &&\n    !a.input\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    network: typef.maybe(typef.Object),\n\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    output: typef.maybe(typef.BufferN(23)),\n\n    redeem: typef.maybe({\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      input: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer))\n    }),\n    input: typef.maybe(typef.Buffer),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a)\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  const _address = lazy.value(function () {\n    const payload = bs58check.decode(a.address)\n    const version = payload.readUInt8(0)\n    const hash = payload.slice(1)\n    return { version, hash }\n  })\n  const _chunks = lazy.value(function () { return bscript.decompile(a.input) })\n  const _redeem = lazy.value(function () {\n    const chunks = _chunks()\n    return {\n      network,\n      output: chunks[chunks.length - 1],\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || []\n    }\n  })\n\n  // output dependents\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return\n\n    const payload = Buffer.allocUnsafe(21)\n    payload.writeUInt8(network.scriptHash, 0)\n    o.hash.copy(payload, 1)\n    return bs58check.encode(payload)\n  })\n  lazy.prop(o, 'hash', function () {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22)\n    if (a.address) return _address().hash\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output)\n  })\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return\n    return bscript.compile([\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUAL\n    ])\n  })\n\n  // input dependents\n  lazy.prop(o, 'redeem', function () {\n    if (!a.input) return\n    return _redeem()\n  })\n  lazy.prop(o, 'input', function () {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return\n    return bscript.compile([].concat(\n      bscript.decompile(a.redeem.input),\n      a.redeem.output\n    ))\n  })\n  lazy.prop(o, 'witness', function () {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness\n    if (o.input) return []\n  })\n\n  if (opts.validate) {\n    let hash\n    if (a.address) {\n      if (_address().version !== network.scriptHash) throw new TypeError('Invalid version or Network mismatch')\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address')\n      hash = _address().hash\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch')\n      else hash = a.hash\n    }\n\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL) throw new TypeError('Output is invalid')\n\n      const hash2 = a.output.slice(2, 22)\n      if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch')\n      else hash = hash2\n    }\n\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = function (redeem) {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output)\n        if (!decompile || decompile.length < 1) throw new TypeError('Redeem.output too short')\n\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output)\n        if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch')\n        else hash = hash2\n      }\n\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0\n        const hasWitness = redeem.witness && redeem.witness.length > 0\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input')\n        if (hasInput && hasWitness) throw new TypeError('Input and witness provided')\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input)\n          if (!bscript.isPushOnly(richunks)) throw new TypeError('Non push-only scriptSig')\n        }\n      }\n    }\n\n    if (a.input) {\n      const chunks = _chunks()\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short')\n      if (!Buffer.isBuffer(_redeem().output)) throw new TypeError('Input is invalid')\n\n      checkRedeem(_redeem())\n    }\n\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network) throw new TypeError('Network mismatch')\n      if (a.input) {\n        const redeem = _redeem()\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output)) throw new TypeError('Redeem.output mismatch')\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input)) throw new TypeError('Redeem.input mismatch')\n      }\n\n      checkRedeem(a.redeem)\n    }\n\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !stacksEqual(a.redeem.witness, a.witness)) throw new TypeError('Witness and redeem.witness mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2sh\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","stacksEqual","a","b","length","every","x","i","equals","lazy","typef","OPS","bcrypto","bscript","BITCOIN_NETWORK","bitcoin","bs58check","p2sh","opts","address","hash","output","redeem","input","TypeError","Object","assign","validate","network","maybe","String","BufferN","Buffer","witness","arrayOf","o","_address","value","payload","decode","version","readUInt8","slice","_chunks","decompile","_redeem","chunks","compile","prop","allocUnsafe","writeUInt8","scriptHash","copy","encode","hash160","OP_HASH160","OP_EQUAL","concat","hash2","checkRedeem","hasInput","hasWitness","richunks","isPushOnly","isBuffer"]
}
