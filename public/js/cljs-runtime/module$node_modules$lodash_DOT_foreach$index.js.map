{
"version":3,
"file":"module$node_modules$lodash_DOT_foreach$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/lodash_DOT_foreach/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash_DOT_foreach$index\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _([1, 2]).forEach(function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, typeof iteratee == 'function' ? iteratee : identity);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = forEach;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","arrayEach","array","iteratee","index","length","isArrayLike","value","MAX_SAFE_INTEGER","type","tag","objectToString","call","funcTag","genTag","keys","object","hasOwnProperty","propertyIsEnumerable","argsTag","result","Array","n","skipIndexes","key","reIsUint","test","push","Ctor","constructor","prototype","objectProto","Object","nativeKeys","identity","toString","overArg","func","transform","arg","baseEach","createBaseEach","eachFunc","fromRight","collection","iterable","baseForOwn","baseFor","createBaseFor","keysFunc","props","isArray","forEach"]
}
