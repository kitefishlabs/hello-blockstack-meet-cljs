shadow$provide.module$node_modules$randomfill$browser=function(global,process,require,module,exports,shadow$shims){function oldBrowser(){throw Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");}function assertOffset(offset,length){if("number"!==typeof offset||offset!==offset)throw new TypeError("offset must be a number");if(offset>kMaxUint32||0>offset)throw new TypeError("offset must be a uint32");if(offset>kBufferMaxLength||offset>
length)throw new RangeError("offset out of range");}function assertSize(size,offset,length){if("number"!==typeof size||size!==size)throw new TypeError("size must be a number");if(size>kMaxUint32||0>size)throw new TypeError("size must be a uint32");if(size+offset>length||size>kBufferMaxLength)throw new RangeError("buffer too small");}function randomFill(buf,offset,size,cb){if(!(Buffer.isBuffer(buf)||buf instanceof global.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
if("function"===typeof offset)cb=offset,offset=0,size=buf.length;else if("function"===typeof size)cb=size,size=buf.length-offset;else if("function"!==typeof cb)throw new TypeError('"cb" argument must be a function');assertOffset(offset,buf.length);assertSize(size,offset,buf.length);return actualFill(buf,offset,size,cb)}function actualFill(buf,offset,size,cb){if(process.browser){size=new Uint8Array(buf.buffer,offset,size);crypto.getRandomValues(size);if(cb){process.nextTick(function(){cb(null,buf)});
return}return buf}if(cb)randombytes(size,function(err,bytes){if(err)return cb(err);bytes.copy(buf,offset);cb(null,buf)});else return randombytes(size).copy(buf,offset),buf}function randomFillSync(buf,offset,size){"undefined"===typeof offset&&(offset=0);if(!(Buffer.isBuffer(buf)||buf instanceof global.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');assertOffset(offset,buf.length);void 0===size&&(size=buf.length-offset);assertSize(size,offset,buf.length);return actualFill(buf,
offset,size)}module=require("module$node_modules$safe_buffer$index");var randombytes=require("module$node_modules$randombytes$browser"),Buffer=module.Buffer,kBufferMaxLength=module.kMaxLength,crypto=global.crypto||global.msCrypto,kMaxUint32=Math.pow(2,32)-1;crypto&&crypto.getRandomValues||!process.browser?(exports.randomFill=randomFill,exports.randomFillSync=randomFillSync):(exports.randomFill=oldBrowser,exports.randomFillSync=oldBrowser)}
//# sourceMappingURL=module$node_modules$randomfill$browser.js.map
