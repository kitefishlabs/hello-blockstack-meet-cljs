shadow$provide.module$node_modules$des_DOT_js$lib$des$ede=function(global,process,require,module,exports,shadow$shims){function EDEState(type,key){assert.equal(key.length,24,"Invalid key length");var k1=key.slice(0,8),k2=key.slice(8,16);key=key.slice(16,24);this.ciphers="encrypt"===type?[DES.create({type:"encrypt",key:k1}),DES.create({type:"decrypt",key:k2}),DES.create({type:"encrypt",key:key})]:[DES.create({type:"decrypt",key:key}),DES.create({type:"encrypt",key:k2}),DES.create({type:"decrypt",key:k1})]}
function EDE(options){Cipher.call(this,options);this._edeState=new EDEState(this.type,this.options.key)}var assert=require("module$node_modules$minimalistic_assert$index");global=require("module$node_modules$inherits$inherits_browser");require=require("module$node_modules$des_DOT_js$lib$des");var Cipher=require.Cipher,DES=require.DES;global(EDE,Cipher);module.exports=EDE;EDE.create=function(options){return new EDE(options)};EDE.prototype._update=function(inp,inOff,out,outOff){var state=this._edeState;
state.ciphers[0]._update(inp,inOff,out,outOff);state.ciphers[1]._update(out,outOff,out,outOff);state.ciphers[2]._update(out,outOff,out,outOff)};EDE.prototype._pad=DES.prototype._pad;EDE.prototype._unpad=DES.prototype._unpad}
//# sourceMappingURL=module$node_modules$des_DOT_js$lib$des$ede.js.map
