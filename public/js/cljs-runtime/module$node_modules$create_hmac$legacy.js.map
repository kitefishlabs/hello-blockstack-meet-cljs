{
"version":3,
"file":"module$node_modules$create_hmac$legacy.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAUxHC,QAASA,KAAK,CAACC,GAAD,CAAMC,GAAN,CAAW,CACvBC,IAAAC,KAAA,CAAU,IAAV,CAAgB,QAAhB,CACmB,SAAnB,GAAI,MAAOF,IAAX,GACEA,GADF,CACQG,MAAAC,KAAA,CAAYJ,GAAZ,CADR,CAIA,KAAAK,KAAA,CAAYN,GACZ,KAAAO,KAAA,CAAYN,GATEO,GAWd,CAAIP,GAAAQ,OAAJ,CACER,GADF,CACQD,GAAA,CAAIC,GAAJ,CADR,CAXcO,EAWd,CAEWP,GAAAQ,OAFX,GAGER,GAHF,CAGQG,MAAAM,OAAA,CAAc,CAACT,GAAD,CAAMU,KAAN,CAAd,CAdMH,EAcN,CAHR,CAMII,IAAAA,CAAO,IAAAC,MAAPD,CAAoBR,MAAAU,YAAA,CAjBVN,EAiBU,CAGxB,KAFA,IAAIO,KAAO,IAAAC,MAAPD,CAAoBX,MAAAU,YAAA,CAlBVN,EAkBU,CAAxB,CAESS,EAAI,CAAb,CApBcT,EAoBd,CAAgBS,CAAhB,CAA+BA,CAAA,EAA/B,CACEL,GAAA,CAAKK,CAAL,CACA,CADUhB,GAAA,CAAIgB,CAAJ,CACV,CADmB,EACnB,CAAAF,IAAA,CAAKE,CAAL,CAAA,CAAUhB,GAAA,CAAIgB,CAAJ,CAAV,CAAmB,EAGrB,KAAAC,MAAA,CAAa,CAACN,GAAD,CAvBU,CARrBO,MAAAA,CAAWxB,OAAA,CAAQ,+CAAR,CACf;IAAIS,OAAST,OAAA,CAAQ,uCAAR,CAAAS,OAAb,CAEIF,KAAOP,OAAA,CAAQ,uCAAR,CAFX,CAIIgB,MAAQP,MAAAgB,MAAA,CAAa,GAAb,CA6BZD,OAAA,CAASpB,IAAT,CAAeG,IAAf,CAEAH,KAAAsB,UAAAC,QAAA,CAAyBC,QAAS,CAACC,IAAD,CAAO,CACvC,IAAAN,MAAAO,KAAA,CAAgBD,IAAhB,CADuC,CAIzCzB,KAAAsB,UAAAK,OAAA,CAAwBC,QAAS,EAAG,CAClC,IAAIC,EAAI,IAAAtB,KAAA,CAAUF,MAAAM,OAAA,CAAc,IAAAQ,MAAd,CAAV,CACR,OAAO,KAAAZ,KAAA,CAAUF,MAAAM,OAAA,CAAc,CAAC,IAAAM,MAAD,CAAaY,CAAb,CAAd,CAAV,CAF2B,CAIpChC,OAAAC,QAAA,CAAiBE,IA9CuG;",
"sources":["node_modules/create-hmac/legacy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_hmac$legacy\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Hmac","alg","key","Base","call","Buffer","from","_alg","_key","blocksize","length","concat","ZEROS","ipad","_ipad","allocUnsafe","opad","_opad","i","_hash","inherits","alloc","prototype","_update","Hmac.prototype._update","data","push","_final","Hmac.prototype._final","h"]
}
