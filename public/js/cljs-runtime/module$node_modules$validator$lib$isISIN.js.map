{
"version":3,
"file":"module$node_modules$validator$lib$isISIN.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG1HC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,QAAA,CAUAC,QAAe,CAACC,GAAD,CAAM,CACnB,CAAC,CAAA,CAAGC,cAAAH,QAAJ,EAA4BE,GAA5B,CACA,IAAI,CAACE,IAAAC,KAAA,CAAUH,GAAV,CAAL,CACE,MAAO,CAAA,CAGT,KAAII,YAAcJ,GAAAK,QAAA,CAAY,QAAZ,CAAsB,QAAS,CAACC,SAAD,CAAY,CAC3D,MAAOC,SAAA,CAASD,SAAT,CAAoB,EAApB,CADoD,CAA3C,CAAlB,CAIIE,IAAM,CAJV,CAKIC,MAAQ,IAAK,EACbC,MAAAA,CAAS,IAAK,EAElB,KADA,IAAIC,aAAe,CAAA,CAAnB,CACSC,EAAIR,WAAAS,OAAJD,CAAyB,CAAlC,CAA0C,CAA1C,EAAqCA,CAArC,CAA6CA,CAAA,EAA7C,CACEH,KAYA,CAZQL,WAAAU,UAAA,CAAsBF,CAAtB,CAAyBA,CAAzB,CAA6B,CAA7B,CAYR,CAXAF,KAWA,CAXSH,QAAA,CAASE,KAAT,CAAgB,EAAhB,CAWT,CAVIE,YAAJ;CACED,KAEE,EAFQ,CAER,CAAAF,GAAA,CADY,EAAd,EAAIE,KAAJ,CACEF,GADF,EACSE,KADT,CACkB,CADlB,EAGEF,GAHF,CAGSE,KALX,EAQEF,GARF,EAQSE,KAET,CAAAC,YAAA,CAAe,CAACA,YAGlB,OAAOJ,SAAA,CAASP,GAAAe,OAAA,CAAWf,GAAAa,OAAX,CAAwB,CAAxB,CAAT,CAAqC,EAArC,CAAP,IAAqD,GAArD,CAA6DL,GAA7D,EAAoE,EA9BjD,CANrB,KAAIP,eAE0C,CAJ1Ce,MAI0C,CAJ1BzB,OAAA,CAAQ,qDAAR,CAI0B,GAFFyB,MAESC,WAAP,CAFFD,MAEE,CAA8B,CAAElB,QAFlCkB,MAEgC,CAF5E,CAIId,KAAO,4BAkCXV,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CAhDyG;",
"sources":["node_modules/validator/lib/isISIN.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$validator$lib$isISIN\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\nfunction isISIN(str) {\n  (0, _assertString2.default)(str);\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var checksumStr = str.replace(/[A-Z]/g, function (character) {\n    return parseInt(character, 36);\n  });\n\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = true;\n  for (var i = checksumStr.length - 2; i >= 0; i--) {\n    digit = checksumStr.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n\n  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n}\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","default","isISIN","str","_assertString2","isin","test","checksumStr","replace","character","parseInt","sum","digit","tmpNum","shouldDouble","i","length","substring","substr","_assertString","__esModule"]
}
