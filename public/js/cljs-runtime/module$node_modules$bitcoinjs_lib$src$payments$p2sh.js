shadow$provide.module$node_modules$bitcoinjs_lib$src$payments$p2sh=function(global,process,require,module,exports,shadow$shims){function stacksEqual(a,b){return a.length!==b.length?!1:a.every(function(x,i){return x.equals(b[i])})}var lazy=require("module$node_modules$bitcoinjs_lib$src$payments$lazy"),typef=require("module$node_modules$typeforce$index"),OPS=require("module$node_modules$bitcoin_ops$index_json"),bcrypto=require("module$node_modules$bitcoinjs_lib$src$crypto"),bscript=require("module$node_modules$bitcoinjs_lib$src$script"),
BITCOIN_NETWORK=require("module$node_modules$bitcoinjs_lib$src$networks").bitcoin,bs58check=require("module$node_modules$bs58check$index");module.exports=function(a,opts){if(!(a.address||a.hash||a.output||a.redeem||a.input))throw new TypeError("Not enough data");opts=Object.assign({validate:!0},opts||{});typef({network:typef.maybe(typef.Object),address:typef.maybe(typef.String),hash:typef.maybe(typef.BufferN(20)),output:typef.maybe(typef.BufferN(23)),redeem:typef.maybe({network:typef.maybe(typef.Object),
output:typef.maybe(typef.Buffer),input:typef.maybe(typef.Buffer),witness:typef.maybe(typef.arrayOf(typef.Buffer))}),input:typef.maybe(typef.Buffer),witness:typef.maybe(typef.arrayOf(typef.Buffer))},a);var network=a.network||BITCOIN_NETWORK,o={network:network},_address=lazy.value(function(){var payload=bs58check.decode(a.address),version=payload.readUInt8(0);payload=payload.slice(1);return{version:version,hash:payload}}),_chunks=lazy.value(function(){return bscript.decompile(a.input)}),_redeem=lazy.value(function(){var chunks=
_chunks();return{network:network,output:chunks[chunks.length-1],input:bscript.compile(chunks.slice(0,-1)),witness:a.witness||[]}});lazy.prop(o,"address",function(){if(o.hash){var payload=shadow$shims.Buffer.allocUnsafe(21);payload.writeUInt8(network.scriptHash,0);o.hash.copy(payload,1);return bs58check.encode(payload)}});lazy.prop(o,"hash",function(){if(a.output)return a.output.slice(2,22);if(a.address)return _address().hash;if(o.redeem&&o.redeem.output)return bcrypto.hash160(o.redeem.output)});lazy.prop(o,
"output",function(){if(o.hash)return bscript.compile([OPS.OP_HASH160,o.hash,OPS.OP_EQUAL])});lazy.prop(o,"redeem",function(){if(a.input)return _redeem()});lazy.prop(o,"input",function(){if(a.redeem&&a.redeem.input&&a.redeem.output)return bscript.compile([].concat(bscript.decompile(a.redeem.input),a.redeem.output))});lazy.prop(o,"witness",function(){if(o.redeem&&o.redeem.witness)return o.redeem.witness;if(o.input)return[]});if(opts.validate){if(a.address){if(_address().version!==network.scriptHash)throw new TypeError("Invalid version or Network mismatch");
if(20!==_address().hash.length)throw new TypeError("Invalid address");var hash=_address().hash}if(a.hash){if(hash&&!hash.equals(a.hash))throw new TypeError("Hash mismatch");hash=a.hash}if(a.output){if(23!==a.output.length||a.output[0]!==OPS.OP_HASH160||20!==a.output[1]||a.output[22]!==OPS.OP_EQUAL)throw new TypeError("Output is invalid");opts=a.output.slice(2,22);if(hash&&!hash.equals(opts))throw new TypeError("Hash mismatch");hash=opts}opts=function(redeem){if(redeem.output){var decompile=bscript.decompile(redeem.output);
if(!decompile||1>decompile.length)throw new TypeError("Redeem.output too short");decompile=bcrypto.hash160(redeem.output);if(hash&&!hash.equals(decompile))throw new TypeError("Hash mismatch");hash=decompile}if(redeem.input){decompile=0<redeem.input.length;var hasWitness=redeem.witness&&0<redeem.witness.length;if(!decompile&&!hasWitness)throw new TypeError("Empty input");if(decompile&&hasWitness)throw new TypeError("Input and witness provided");if(decompile&&(redeem=bscript.decompile(redeem.input),
!bscript.isPushOnly(redeem)))throw new TypeError("Non push-only scriptSig");}};if(a.input){var chunks$jscomp$0=_chunks();if(!chunks$jscomp$0||1>chunks$jscomp$0.length)throw new TypeError("Input too short");if(!shadow$shims.Buffer.isBuffer(_redeem().output))throw new TypeError("Input is invalid");opts(_redeem())}if(a.redeem){if(a.redeem.network&&a.redeem.network!==network)throw new TypeError("Network mismatch");if(a.input){chunks$jscomp$0=_redeem();if(a.redeem.output&&!a.redeem.output.equals(chunks$jscomp$0.output))throw new TypeError("Redeem.output mismatch");
if(a.redeem.input&&!a.redeem.input.equals(chunks$jscomp$0.input))throw new TypeError("Redeem.input mismatch");}opts(a.redeem)}if(a.witness&&a.redeem&&a.redeem.witness&&!stacksEqual(a.redeem.witness,a.witness))throw new TypeError("Witness and redeem.witness mismatch");}return Object.assign(o,a)}}
//# sourceMappingURL=module$node_modules$bitcoinjs_lib$src$payments$p2sh.js.map
