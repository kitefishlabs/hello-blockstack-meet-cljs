shadow$provide.module$node_modules$blockstack$lib$profiles$services$service=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,"__esModule",{value:!0});exports.Service=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,
descriptor)}}return function(Constructor,protoProps,staticProps){protoProps&&defineProperties(Constructor.prototype,protoProps);staticProps&&defineProperties(Constructor,staticProps);return Constructor}}();require("module$node_modules$cross_fetch$dist$browser_polyfill");var _serviceUtils=require("module$node_modules$blockstack$lib$profiles$services$serviceUtils");exports.Service=function(){function Service(){if(!(this instanceof Service))throw new TypeError("Cannot call a class as a function");}_createClass(Service,
null,[{key:"validateProof",value:function(proof,ownerAddress){var _this=this,name=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,proofUrl=void 0;return Promise.resolve().then(function(){proofUrl=_this.getProofUrl(proof);return fetch(proofUrl)}).then(function(res){if(200!==res.status)throw Error("Proof url "+proofUrl+" returned unexpected http status "+res.status+".\n              Unable to validate proof.");return res.text()}).then(function(text){if(_this.shouldValidateIdentityInBody()&&
proof.identifier!==_this.getProofIdentity(text))return proof;text=_this.getProofStatement(text);proof.valid=(0,_serviceUtils.containsValidProofStatement)(text,name)||(0,_serviceUtils.containsValidAddressProofStatement)(text,ownerAddress);return proof}).catch(function(error){console.error(error);proof.valid=!1;return proof})}},{key:"getBaseUrls",value:function(){return[]}},{key:"getProofIdentity",value:function(searchText){return searchText}},{key:"getProofStatement",value:function(searchText){return searchText}},
{key:"shouldValidateIdentityInBody",value:function(){return!1}},{key:"prefixScheme",value:function(proofUrl){return proofUrl.startsWith("https://")||proofUrl.startsWith("http://")?proofUrl.startsWith("http://")?proofUrl.replace("http://","https://"):proofUrl:"https://"+proofUrl}},{key:"getProofUrl",value:function(proof){var baseUrls=this.getBaseUrls(),proofUrl=proof.proof_url.toLowerCase();proofUrl=this.prefixScheme(proofUrl);for(var i=0;i<baseUrls.length;i++){var requiredPrefix=(""+baseUrls[i]+proof.identifier).toLowerCase();
if(proofUrl.startsWith(requiredPrefix))return proofUrl}throw Error("Proof url "+proof.proof_url+" is not valid for service "+proof.service);}}]);return Service}()}
//# sourceMappingURL=module$node_modules$blockstack$lib$profiles$services$service.js.map
