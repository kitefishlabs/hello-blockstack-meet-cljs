{
"version":3,
"file":"module$node_modules$cheerio$lib$api$forms.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAIvHC,IAAM,MAJiH,CAKvHC,MAAQ,QAL+G,CAMvHC,EAAI,CACFC,IAAKP,OAAA,CAAQ,0CAAR,CADH,CAIRE,QAAAM,UAAA,CAAoBC,QAAQ,EAAG,CAE7B,IAAIC,IAAM,IAAAC,eAAA,EAQV,OALaL,EAAAC,IAAAK,CAAMF,GAANE,CAAW,QAAQ,CAACC,IAAD,CAAO,CACrC,MAAOC,mBAAA,CAAmBD,IAAAE,KAAnB,CAAP,CAAuC,MAAvC,CAA6CD,kBAAA,CAAmBD,IAAAG,MAAnB,CADR,CAA1BJ,CAKNK,KAAA,CAAY,MAAZ,CAAAC,QAAA,CAAyBd,GAAzB,CAA8B,GAA9B,CAVsB,CAa/BF,QAAAS,eAAA,CAAyBQ,QAAQ,EAAG,CAElC,IAAIC,QAAU,IAAAC,YACd,OAAO,KAAAd,IAAA,CAAS,QAAQ,EAAG,CAEvB,IAAIe;AAAQF,OAAA,CADDG,IACC,CACZ,OAAkB,MAAlB,GAFWA,IAEPR,KAAJ,CACSO,KAAAE,KAAA,CA3BWC,8BA2BX,CAAAC,QAAA,EADT,CAGSJ,KAAAK,OAAA,CA7BWF,8BA6BX,CAAAC,QAAA,EANc,CAApB,CAAAC,OAAA,CAUD,uHAVC,CAAApB,IAAA,CAgBC,QAAQ,CAACqB,CAAD,CAAIL,IAAJ,CAAU,CAClBD,CAAAA,CAAQF,OAAA,CAAQG,IAAR,CACZ,KAAIR,KAAOO,CAAAO,KAAA,CAAW,MAAX,CACPC,EAAAA,CAAMR,CAAAQ,IAAA,EAGV,OAAW,KAAX,EAAIA,CAAJ,CACS,IADT,CAIMC,KAAAC,QAAA,CAAcF,CAAd,CAAJ,CACSxB,CAAAC,IAAA,CAAMuB,CAAN,CAAW,QAAQ,CAACA,GAAD,CAAM,CAG9B,MAAO,CAACf,KAAMA,IAAP,CAAaC,MAAOc,GAAAZ,QAAA,CAAab,KAAb,CAAoB,MAApB,CAApB,CAHuB,CAAzB,CADT,CAQS,CAACU,KAAMA,IAAP,CAAaC,MAAOc,CAAAZ,QAAA,CAAab,KAAb,CAAoB,MAApB,CAApB,CAlBW,CAhBnB,CAAA4B,IAAA,EAH2B,CAvBuF;",
"sources":["node_modules/cheerio/lib/api/forms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cheerio$lib$api$forms\"] = function(global,process,require,module,exports,shadow$shims) {\n// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\nvar submittableSelector = 'input,select,textarea,keygen',\n    r20 = /%20/g,\n    rCRLF = /\\r?\\n/g,\n    _ = {\n      map: require('lodash.map')\n    };\n\nexports.serialize = function() {\n  // Convert form elements into name/value objects\n  var arr = this.serializeArray();\n\n  // Serialize each element into a key/value string\n  var retArr = _.map(arr, function(data) {\n    return encodeURIComponent(data.name) + '=' + encodeURIComponent(data.value);\n  });\n\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n};\n\nexports.serializeArray = function() {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function() {\n      var elem = this;\n      var $elem = Cheerio(elem);\n      if (elem.name === 'form') {\n        return $elem.find(submittableSelector).toArray();\n      } else {\n        return $elem.filter(submittableSelector).toArray();\n      }\n    }).filter(\n        // Verify elements have a name (`attr.name`) and are not disabled (`:disabled`)\n        '[name!=\"\"]:not(:disabled)'\n        // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        + ':not(:submit, :button, :image, :reset, :file)'\n        // and are either checked/don't have a checkable state\n        + ':matches([checked], :not(:checkbox, :radio))'\n    // Convert each of the elements to its value(s)\n    ).map(function(i, elem) {\n      var $elem = Cheerio(elem);\n      var name = $elem.attr('name');\n      var val = $elem.val();\n\n      // If there is no value set (e.g. `undefined`, `null`), then return nothing\n      if (val == null) {\n        return null;\n      } else {\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(val)) {\n          return _.map(val, function(val) {\n            // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n            //   These can occur inside of `<textarea>'s`\n            return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n          });\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        } else {\n          return {name: name, value: val.replace( rCRLF, '\\r\\n' )};\n        }\n      }\n    // Convert our result to an array\n    }).get();\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","r20","rCRLF","_","map","serialize","exports.serialize","arr","serializeArray","retArr","data","encodeURIComponent","name","value","join","replace","exports.serializeArray","Cheerio","constructor","$elem","elem","find","submittableSelector","toArray","filter","i","attr","val","Array","isArray","get"]
}
