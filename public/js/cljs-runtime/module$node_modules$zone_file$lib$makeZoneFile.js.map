{
"version":3,
"file":"module$node_modules$zone_file$lib$makeZoneFile.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/zone-file/lib/makeZoneFile.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$zone_file$lib$makeZoneFile\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.makeZoneFile = makeZoneFile;\n\nvar _zoneFileTemplate = require('./zoneFileTemplate');\n\nfunction makeZoneFile(jsonZoneFile) {\n    var template = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _zoneFileTemplate.getZoneFileTemplate)();\n\n    template = processOrigin(jsonZoneFile['$origin'], template);\n    template = processTTL(jsonZoneFile['$ttl'], template);\n    template = processSOA(jsonZoneFile['soa'], template);\n    template = processNS(jsonZoneFile['ns'], template);\n    template = processA(jsonZoneFile['a'], template);\n    template = processAAAA(jsonZoneFile['aaaa'], template);\n    template = processCNAME(jsonZoneFile['cname'], template);\n    template = processMX(jsonZoneFile['mx'], template);\n    template = processPTR(jsonZoneFile['ptr'], template);\n    template = processTXT(jsonZoneFile['txt'], template);\n    template = processSRV(jsonZoneFile['srv'], template);\n    template = processSPF(jsonZoneFile['spf'], template);\n    template = processURI(jsonZoneFile['uri'], template);\n    template = processValues(jsonZoneFile, template);\n    return template.replace(/\\n{2,}/gim, '\\n\\n');\n};\n\nvar processOrigin = function processOrigin(data, template) {\n    var ret = '';\n    if (typeof data !== 'undefined') {\n        ret += '$ORIGIN ' + data;\n    }\n    return template.replace('{$origin}', ret);\n};\n\nvar processTTL = function processTTL(data, template) {\n    var ret = '';\n    if (typeof data !== 'undefined') {\n        ret += '$TTL ' + data;\n    }\n    return template.replace('{$ttl}', ret);\n};\n\nvar processSOA = function processSOA(data, template) {\n    var ret = template;\n    if (typeof data !== 'undefined') {\n        data.name = data.name || '@';\n        data.ttl = data.ttl || '';\n        for (var key in data) {\n            var value = data[key];\n            ret = ret.replace('{' + key + '}', value + '\\t');\n        }\n    }\n    return ret;\n};\n\nvar processNS = function processNS(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tNS\\t' + data[i].host + '\\n';\n    }\n    return template.replace('{ns}', ret);\n};\n\nvar processA = function processA(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tA\\t' + data[i].ip + '\\n';\n    }\n    return template.replace('{a}', ret);\n};\n\nvar processAAAA = function processAAAA(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tAAAA\\t' + data[i].ip + '\\n';\n    }\n    return template.replace('{aaaa}', ret);\n};\n\nvar processCNAME = function processCNAME(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tCNAME\\t' + data[i].alias + '\\n';\n    }\n    return template.replace('{cname}', ret);\n};\n\nvar processMX = function processMX(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tMX\\t' + data[i].preference + '\\t' + data[i].host + '\\n';\n    }\n    return template.replace('{mx}', ret);\n};\n\nvar processPTR = function processPTR(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tPTR\\t' + data[i].host + '\\n';\n    }\n    return template.replace('{ptr}', ret);\n};\n\nvar processTXT = function processTXT(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tTXT\\t';\n        var txtData = data[i].txt;\n        if (txtData instanceof String || typeof txtData === 'string') {\n            ret += '\"' + txtData + '\"';\n        } else if (txtData instanceof Array) {\n            ret += txtData.map(function (datum) {\n                return '\"' + datum + '\"';\n            }).join(' ');\n        }\n        ret += '\\n';\n    }\n    return template.replace('{txt}', ret);\n};\n\nvar processSRV = function processSRV(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tSRV\\t' + data[i].priority + '\\t';\n        ret += data[i].weight + '\\t';\n        ret += data[i].port + '\\t';\n        ret += data[i].target + '\\n';\n    }\n    return template.replace('{srv}', ret);\n};\n\nvar processSPF = function processSPF(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tSPF\\t' + data[i].data + '\\n';\n    }\n    return template.replace('{spf}', ret);\n};\n\nvar processURI = function processURI(data, template) {\n    var ret = '';\n    for (var i in data) {\n        ret += (data[i].name || '@') + '\\t';\n        if (data[i].ttl) ret += data[i].ttl + '\\t';\n        ret += 'IN\\tURI\\t' + data[i].priority + '\\t';\n        ret += data[i].weight + '\\t';\n        ret += '\"' + data[i].target + '\"\\n';\n    }\n    return template.replace('{uri}', ret);\n};\n\nvar processValues = function processValues(jsonZoneFile, template) {\n    template = template.replace('{zone}', jsonZoneFile['$origin'] || jsonZoneFile['soa']['name'] || '');\n    template = template.replace('{datetime}', new Date().toISOString());\n    return template.replace('{time}', Math.round(Date.now() / 1000));\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","makeZoneFile","jsonZoneFile","template","arguments","length","undefined","_zoneFileTemplate","getZoneFileTemplate","ret","data","replace","name","ttl","key","i","host","ip","alias","preference","processTXT","priority","weight","port","target","toISOString","Date","Math","round","now","txtData","txt","String","Array","map","datum","join"]
}
