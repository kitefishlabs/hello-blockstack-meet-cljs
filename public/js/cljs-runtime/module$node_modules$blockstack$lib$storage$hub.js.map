{
"version":3,
"file":"module$node_modules$blockstack$lib$storage$hub.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/blockstack/lib/storage/hub.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$storage$hub\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BLOCKSTACK_GAIA_HUB_LABEL = undefined;\nexports.uploadToGaiaHub = uploadToGaiaHub;\nexports.getFullReadUrl = getFullReadUrl;\nexports.connectToGaiaHub = connectToGaiaHub;\nexports.setLocalGaiaHubConnection = setLocalGaiaHubConnection;\nexports.getOrSetLocalGaiaHubConnection = getOrSetLocalGaiaHubConnection;\nexports.getBucketUrl = getBucketUrl;\n\nvar _bitcoinjsLib = require('bitcoinjs-lib');\n\nvar _bitcoinjsLib2 = _interopRequireDefault(_bitcoinjsLib);\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _jsontokens = require('jsontokens');\n\nvar _authApp = require('../auth/authApp');\n\nvar _utils = require('../utils');\n\nvar _index = require('../index');\n\nvar _authConstants = require('../auth/authConstants');\n\nvar _logger = require('../logger');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BLOCKSTACK_GAIA_HUB_LABEL = exports.BLOCKSTACK_GAIA_HUB_LABEL = 'blockstack-gaia-hub-config';\n\nfunction uploadToGaiaHub(filename, contents, hubConfig) {\n  var contentType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'application/octet-stream';\n\n  _logger.Logger.debug('uploadToGaiaHub: uploading ' + filename + ' to ' + hubConfig.server);\n  return fetch(hubConfig.server + '/store/' + hubConfig.address + '/' + filename, {\n    method: 'POST',\n    headers: {\n      'Content-Type': contentType,\n      Authorization: 'bearer ' + hubConfig.token\n    },\n    body: contents\n  }).then(function (response) {\n    if (response.ok) {\n      return response.text();\n    } else {\n      throw new Error('Error when uploading to Gaia hub');\n    }\n  }).then(function (responseText) {\n    return JSON.parse(responseText);\n  }).then(function (responseJSON) {\n    return responseJSON.publicURL;\n  });\n}\n\nfunction getFullReadUrl(filename, hubConfig) {\n  return '' + hubConfig.url_prefix + hubConfig.address + '/' + filename;\n}\n\nfunction makeLegacyAuthToken(challengeText, signerKeyHex) {\n  // only sign specific legacy auth challenges.\n  var parsedChallenge = void 0;\n  try {\n    parsedChallenge = JSON.parse(challengeText);\n  } catch (err) {\n    throw new Error('Failed in parsing legacy challenge text from the gaia hub.');\n  }\n  if (parsedChallenge[0] === 'gaiahub' && parsedChallenge[3] === 'blockstack_storage_please_sign') {\n    var signer = (0, _index.hexStringToECPair)(signerKeyHex + (signerKeyHex.length === 64 ? '01' : ''));\n    var digest = _bitcoinjsLib2.default.crypto.sha256(challengeText);\n    var signature = signer.sign(digest).toDER().toString('hex');\n    var publickey = (0, _index.getPublicKeyFromPrivate)(signerKeyHex);\n    var _token = Buffer.from(JSON.stringify({ publickey: publickey, signature: signature })).toString('base64');\n    return _token;\n  } else {\n    throw new Error('Failed to connect to legacy gaia hub. If you operate this hub, please update.');\n  }\n}\n\nfunction makeV1GaiaAuthToken(hubInfo, signerKeyHex, hubUrl, associationToken) {\n  var challengeText = hubInfo.challenge_text;\n  var handlesV1Auth = hubInfo.latest_auth_version && parseInt(hubInfo.latest_auth_version.slice(1), 10) >= 1;\n  var iss = (0, _index.getPublicKeyFromPrivate)(signerKeyHex);\n\n  if (!handlesV1Auth) {\n    return makeLegacyAuthToken(challengeText, signerKeyHex);\n  }\n\n  var salt = _crypto2.default.randomBytes(16).toString('hex');\n  var payload = {\n    gaiaChallenge: challengeText,\n    hubUrl: hubUrl,\n    iss: iss,\n    salt: salt,\n    associationToken: associationToken\n  };\n  var token = new _jsontokens.TokenSigner('ES256K', signerKeyHex).sign(payload);\n  return 'v1:' + token;\n}\n\nfunction connectToGaiaHub(gaiaHubUrl, challengeSignerHex, associationToken) {\n  if (!associationToken) {\n    // maybe given in local storage?\n    try {\n      var userData = (0, _authApp.loadUserData)();\n      if (userData && userData.gaiaAssociationToken) {\n        associationToken = userData.gaiaAssociationToken;\n      }\n    } catch (e) {\n      associationToken = undefined;\n    }\n  }\n\n  _logger.Logger.debug('connectToGaiaHub: ' + gaiaHubUrl + '/hub_info');\n\n  return fetch(gaiaHubUrl + '/hub_info').then(function (response) {\n    return response.json();\n  }).then(function (hubInfo) {\n    var readURL = hubInfo.read_url_prefix;\n    var token = makeV1GaiaAuthToken(hubInfo, challengeSignerHex, gaiaHubUrl, associationToken);\n    var address = (0, _utils.ecPairToAddress)((0, _index.hexStringToECPair)(challengeSignerHex + (challengeSignerHex.length === 64 ? '01' : '')));\n    return {\n      url_prefix: readURL,\n      address: address,\n      token: token,\n      server: gaiaHubUrl\n    };\n  });\n}\n\n/**\n * These two functions are app-specific connections to gaia hub,\n *   they read the user data object for information on setting up\n *   a hub connection, and store the hub config to localstorage\n * @private\n * @returns {Promise} that resolves to the new gaia hub connection\n */\nfunction setLocalGaiaHubConnection() {\n  var userData = (0, _authApp.loadUserData)();\n\n  if (!userData.hubUrl) {\n    userData.hubUrl = _authConstants.BLOCKSTACK_DEFAULT_GAIA_HUB_URL;\n\n    window.localStorage.setItem(_authConstants.BLOCKSTACK_STORAGE_LABEL, JSON.stringify(userData));\n\n    userData = (0, _authApp.loadUserData)();\n  }\n\n  return connectToGaiaHub(userData.hubUrl, userData.appPrivateKey, userData.associationToken).then(function (gaiaConfig) {\n    localStorage.setItem(BLOCKSTACK_GAIA_HUB_LABEL, JSON.stringify(gaiaConfig));\n    return gaiaConfig;\n  });\n}\n\nfunction getOrSetLocalGaiaHubConnection() {\n  var hubConfig = localStorage.getItem(BLOCKSTACK_GAIA_HUB_LABEL);\n  if (hubConfig) {\n    var hubJSON = JSON.parse(hubConfig);\n    if (hubJSON !== null) {\n      return Promise.resolve(hubJSON);\n    }\n  }\n  return setLocalGaiaHubConnection();\n}\n\nfunction getBucketUrl(gaiaHubUrl, appPrivateKey) {\n  var challengeSigner = void 0;\n  try {\n    challengeSigner = _bitcoinjsLib2.default.ECPair.fromPrivateKey(new Buffer(appPrivateKey, 'hex'));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n\n  return fetch(gaiaHubUrl + '/hub_info').then(function (response) {\n    return response.text();\n  }).then(function (responseText) {\n    return JSON.parse(responseText);\n  }).then(function (responseJSON) {\n    var readURL = responseJSON.read_url_prefix;\n    var address = (0, _utils.ecPairToAddress)(challengeSigner);\n    var bucketUrl = '' + readURL + address + '/';\n    return bucketUrl;\n  });\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","connectToGaiaHub","gaiaHubUrl","challengeSignerHex","associationToken","userData","_authApp","loadUserData","gaiaAssociationToken","e","undefined","_logger","Logger","debug","fetch","then","response","json","hubInfo","readURL","read_url_prefix","challengeText","challenge_text","handlesV1Auth","latest_auth_version","parseInt","slice","iss","_index","getPublicKeyFromPrivate","salt","_crypto2","default","randomBytes","toString","payload","gaiaChallenge","hubUrl","sign","_jsontokens","TokenSigner","token","parsedChallenge","JSON","parse","err","Error","signer","hexStringToECPair","length","digest","_bitcoinjsLib2","crypto","sha256","signature","toDER","publickey","Buffer","from","stringify","_token","address","_utils","ecPairToAddress","url_prefix","server","setLocalGaiaHubConnection","_authConstants","BLOCKSTACK_DEFAULT_GAIA_HUB_URL","window","localStorage","setItem","BLOCKSTACK_STORAGE_LABEL","appPrivateKey","gaiaConfig","BLOCKSTACK_GAIA_HUB_LABEL","Object","defineProperty","value","uploadToGaiaHub","filename","contents","hubConfig","contentType","arguments","method","headers","Authorization","body","ok","text","responseText","responseJSON","publicURL","getFullReadUrl","getOrSetLocalGaiaHubConnection","getItem","hubJSON","Promise","resolve","getBucketUrl","challengeSigner","ECPair","fromPrivateKey","reject","_bitcoinjsLib","__esModule","_crypto"]
}
