{
"version":3,
"file":"module$node_modules$more_entropy$lib$generator.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/more-entropy/lib/generator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$more_entropy$lib$generator\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by IcedCoffeeScript 1.7.1-f\n(function() {\n  var Generator, iced, __iced_k, __iced_k_noop;\n\n  iced = require('iced-runtime');\n  __iced_k = __iced_k_noop = function() {};\n\n  Generator = Generator = (function() {\n    function Generator(opts) {\n      opts = opts || {};\n      this.lazy_loop_delay = opts.lazy_loop_delay || 30;\n      this.loop_delay = opts.loop_delay || 5;\n      this.work_min = opts.work_min || 1;\n      this.auto_stop_bits = opts.auto_stop_bits || 4096;\n      this.max_bits_per_delta = opts.max_bits_per_delta || 4;\n      this.auto_stop = opts.auto_stop ? opts.auto_stop : true;\n      this.entropies = [];\n      this.running = true;\n      this.is_generating = false;\n      this.timer_race_loop();\n    }\n\n    Generator.prototype.generate = function(bits_wanted, cb) {\n      var e, harvested_bits, res, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      this.is_generating = true;\n      if (!this.running) {\n        this.resume();\n      }\n      harvested_bits = 0;\n      res = [];\n      (function(_this) {\n        return (function(__iced_k) {\n          var _results, _while;\n          _results = [];\n          _while = function(__iced_k) {\n            var _break, _continue, _next;\n            _break = function() {\n              return __iced_k(_results);\n            };\n            _continue = function() {\n              return iced.trampoline(function() {\n                return _while(__iced_k);\n              });\n            };\n            _next = function(__iced_next_arg) {\n              _results.push(__iced_next_arg);\n              return _continue();\n            };\n            if (!(harvested_bits < bits_wanted)) {\n              return _break();\n            } else {\n              (function(__iced_k) {\n                if (_this.entropies.length) {\n                  e = _this.entropies.splice(0, 1)[0];\n                  harvested_bits += e[1];\n                  return __iced_k(res.push(e[0]));\n                } else {\n                  (function(__iced_k) {\n                    __iced_deferrals = new iced.Deferrals(__iced_k, {\n                      parent: ___iced_passed_deferral,\n                      filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n                      funcname: \"Generator.generate\"\n                    });\n                    _this.delay(__iced_deferrals.defer({\n                      lineno: 28\n                    }));\n                    __iced_deferrals._fulfill();\n                  })(__iced_k);\n                }\n              })(_next);\n            }\n          };\n          _while(__iced_k);\n        });\n      })(this)((function(_this) {\n        return function() {\n          if (_this.auto_stop) {\n            _this.stop();\n          }\n          _this.is_generating = false;\n          return cb(res);\n        };\n      })(this));\n    };\n\n    Generator.prototype.stop = function() {\n      return this.running = false;\n    };\n\n    Generator.prototype.resume = function() {\n      this.running = true;\n      return this.timer_race_loop();\n    };\n\n    Generator.prototype.reset = function() {\n      this.entropies = [];\n      return this.total_bits = 0;\n    };\n\n    Generator.prototype.count_unused_bits = function() {\n      var bits, e, _i, _len, _ref;\n      bits = 0;\n      _ref = this.entropies;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        e = _ref[_i];\n        bits += e[1];\n      }\n      return bits;\n    };\n\n    Generator.prototype.delay = function(cb) {\n      var delay, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      delay = this.is_generating ? this.loop_delay : this.lazy_loop_delay;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n            funcname: \"Generator.delay\"\n          });\n          setTimeout(__iced_deferrals.defer({\n            lineno: 50\n          }), delay);\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          return cb();\n        };\n      })(this));\n    };\n\n    Generator.prototype.timer_race_loop = function() {\n      var ___iced_passed_deferral, __iced_k, _results, _while;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      this._last_count = null;\n      _results = [];\n      _while = (function(_this) {\n        var count, delta, entropy, v, __iced_deferrals;\n        return function(__iced_k) {\n          var _break, _continue, _next;\n          _break = function() {\n            return __iced_k(_results);\n          };\n          _continue = function() {\n            return iced.trampoline(function() {\n              return _while(__iced_k);\n            });\n          };\n          _next = function(__iced_next_arg) {\n            _results.push(__iced_next_arg);\n            return _continue();\n          };\n          if (!_this.running) {\n            return _break();\n          } else {\n            if (_this.count_unused_bits() < _this.auto_stop_bits) {\n              count = _this.millisecond_count();\n              if ((_this._last_count != null) && (delta = count - _this._last_count)) {\n                entropy = Math.floor(_this.log_2(Math.abs(delta)));\n                entropy = Math.min(_this.max_bits_per_delta, entropy);\n                v = [delta, entropy];\n                _this.entropies.push(v);\n              }\n              _this._last_count = count;\n            }\n            (function(__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n                funcname: \"Generator.timer_race_loop\"\n              });\n              _this.delay(__iced_deferrals.defer({\n                lineno: 64\n              }));\n              __iced_deferrals._fulfill();\n            })(_next);\n          }\n        };\n      })(this);\n      _while(__iced_k);\n    };\n\n    Generator.prototype.log_2 = function(x) {\n      return Math.log(x) / Math.LN2;\n    };\n\n    Generator.prototype.millisecond_count = function() {\n      var d, i, x;\n      d = Date.now();\n      i = x = 0;\n      while (Date.now() < d + this.work_min + 1) {\n        i++;\n        x = Math.sin(Math.sqrt(Math.log(i + x)));\n      }\n      return i;\n    };\n\n    return Generator;\n\n  })();\n\n  if (typeof window !== \"undefined\" && window !== null) {\n    window.Generator = Generator;\n  }\n\n  if (typeof exports !== \"undefined\" && exports !== null) {\n    exports.Generator = Generator;\n  }\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","iced","__iced_k_noop","Generator","opts","lazy_loop_delay","loop_delay","work_min","auto_stop_bits","max_bits_per_delta","auto_stop","entropies","running","is_generating","timer_race_loop","prototype","generate","Generator.prototype.generate","bits_wanted","cb","e","__iced_deferrals","___iced_passed_deferral","findDeferral","arguments","resume","harvested_bits","res","_this","__iced_k","_results","_while","_break","_continue","trampoline","_next","__iced_next_arg","push","length","splice","Deferrals","parent","filename","funcname","delay","defer","lineno","_fulfill","stop","Generator.prototype.stop","Generator.prototype.resume","reset","Generator.prototype.reset","total_bits","count_unused_bits","Generator.prototype.count_unused_bits","_len","bits","_ref","_i","Generator.prototype.delay","setTimeout","Generator.prototype.timer_race_loop","_last_count","count","delta","entropy","v","millisecond_count","Math","floor","log_2","abs","min","Generator.prototype.log_2","x","log","LN2","Generator.prototype.millisecond_count","i","d","Date","now","window","call"]
}
