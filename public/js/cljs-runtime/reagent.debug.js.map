{"version":3,"sources":["reagent/debug.cljs"],"sourcesContent":["(ns reagent.debug\n  (:require-macros [reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n"],"mappings":";;AAGA,AAAaA,AAAY,AAAAC;AAEzB,AAAA,AAAcC;AAEd,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACC;;AAEnB,AAAA,AAAAJ,AAAAC,AAAAI;AAAA;AAAA,AAAA,AAASC,AACP,AAAA,AAAM;AAAN,AACE,AAAM,AAAQC,AACR;;AAAO;AAAP,AACE,AAAA,AAAA,AAACC,AAAML,AAASM,AAAkBC,AAAK,AAACC,AAAMC,AAAIC;;;AAD7C;;;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;;;AAEb,AAAM,AAASN,AACT;;AAAO;AAAP,AACE,AAAA,AAAA,AAACC,AAAML,AAASM,AAAmBC,AAAK,AAACC,AAAMC,AAAIC;;;AAD9C;;;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;;;AAEbN;;;AAEJ,AAAA,AAAMO,AAAgB;AAAtB,AACE,AAAA,AAAMf;;AACN,AAAA,AAACgB,AAAOZ;;AACR,AAACa,AAAAA,AAAAA;;AACD,AAAA,AAAAC,AAAM,AAAOd;AAAb,AACE,AAAA,AAACY,AAAOZ;;AACR,AAAA,AAAMJ;;AACNmB","names":["reagent.debug/has-console","js/console","reagent.debug/tracking","js/reagent","js/reagent.debug","js/reagent.debug.warnings","reagent.debug/warnings","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/reagent.debug.track-console","reagent.debug/track-console","o","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/conj","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","args","reagent.debug/track-warnings","cljs.core/reset!","f","cljs.core/deref","warns"]}