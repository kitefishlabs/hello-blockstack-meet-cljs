{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$ec$key.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/ec/key.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$ec$key\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","KeyPair","ec","options","pub","priv","_importPrivate","privEnc","_importPublic","pubEnc","BN","assert","elliptic","utils","fromPublic","KeyPair.fromPublic","enc","fromPrivate","KeyPair.fromPrivate","prototype","validate","KeyPair.prototype.validate","getPublic","isInfinity","result","reason","mul","curve","n","KeyPair.prototype.getPublic","compact","g","encode","getPrivate","KeyPair.prototype.getPrivate","toString","KeyPair.prototype._importPrivate","key","umod","KeyPair.prototype._importPublic","x","y","type","point","decodePoint","derive","KeyPair.prototype.derive","getX","sign","KeyPair.prototype.sign","msg","verify","KeyPair.prototype.verify","signature","inspect","KeyPair.prototype.inspect"]
}
