{
"version":3,
"file":"module$node_modules$triplesec$lib$sha256.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/triplesec/lib/sha256.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$triplesec$lib$sha256\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var Global, Hasher, SHA256, WordArray, glbl, transform,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  WordArray = require('./wordarray').WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  Global = (function() {\n    function Global() {\n      this.H = [];\n      this.K = [];\n      this.W = [];\n      this.init();\n    }\n\n    Global.prototype.isPrime = function(n) {\n      var f, sqn, _i;\n      if (n === 2 || n === 3 || n === 5 || n === 7) {\n        return true;\n      }\n      if (n === 1 || n === 4 || n === 6 || n === 8 || n === 9) {\n        return false;\n      }\n      sqn = Math.ceil(Math.sqrt(n));\n      for (f = _i = 2; 2 <= sqn ? _i <= sqn : _i >= sqn; f = 2 <= sqn ? ++_i : --_i) {\n        if ((n % f) === 0) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    Global.prototype.getFractionalBits = function(n) {\n      return ((n - (n | 0)) * 0x100000000) | 0;\n    };\n\n    Global.prototype.init = function() {\n      var n, nPrime, _results;\n      n = 2;\n      nPrime = 0;\n      _results = [];\n      while (nPrime < 64) {\n        if (this.isPrime(n)) {\n          if (nPrime < 8) {\n            this.H[nPrime] = this.getFractionalBits(Math.pow(n, 1 / 2));\n          }\n          this.K[nPrime] = this.getFractionalBits(Math.pow(n, 1 / 3));\n          nPrime++;\n        }\n        _results.push(n++);\n      }\n      return _results;\n    };\n\n    return Global;\n\n  })();\n\n  glbl = new Global();\n\n  SHA256 = (function(_super) {\n    __extends(SHA256, _super);\n\n    function SHA256() {\n      return SHA256.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA256.blockSize = 512 / 32;\n\n    SHA256.prototype.blockSize = SHA256.blockSize;\n\n    SHA256.output_size = 256 / 8;\n\n    SHA256.prototype.output_size = SHA256.output_size;\n\n    SHA256.prototype._doReset = function() {\n      return this._hash = new WordArray(glbl.H.slice(0));\n    };\n\n    SHA256.prototype.get_output_size = function() {\n      return this.output_size;\n    };\n\n    SHA256.prototype._doProcessBlock = function(M, offset) {\n      var H, K, W, a, b, c, ch, d, e, f, g, gamma0, gamma0x, gamma1, gamma1x, h, i, maj, sigma0, sigma1, t1, t2, _i;\n      H = this._hash.words;\n      W = glbl.W;\n      K = glbl.K;\n      a = H[0];\n      b = H[1];\n      c = H[2];\n      d = H[3];\n      e = H[4];\n      f = H[5];\n      g = H[6];\n      h = H[7];\n      for (i = _i = 0; _i < 64; i = ++_i) {\n        if (i < 16) {\n          W[i] = M[offset + i] | 0;\n        } else {\n          gamma0x = W[i - 15];\n          gamma0 = ((gamma0x << 25) | (gamma0x >>> 7)) ^ ((gamma0x << 14) | (gamma0x >>> 18)) ^ (gamma0x >>> 3);\n          gamma1x = W[i - 2];\n          gamma1 = ((gamma1x << 15) | (gamma1x >>> 17)) ^ ((gamma1x << 13) | (gamma1x >>> 19)) ^ (gamma1x >>> 10);\n          W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n        }\n        ch = (e & f) ^ (~e & g);\n        maj = (a & b) ^ (a & c) ^ (b & c);\n        sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n        sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25));\n        t1 = h + sigma1 + ch + K[i] + W[i];\n        t2 = sigma0 + maj;\n        h = g;\n        g = f;\n        f = e;\n        e = (d + t1) | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = (t1 + t2) | 0;\n      }\n      H[0] = (H[0] + a) | 0;\n      H[1] = (H[1] + b) | 0;\n      H[2] = (H[2] + c) | 0;\n      H[3] = (H[3] + d) | 0;\n      H[4] = (H[4] + e) | 0;\n      H[5] = (H[5] + f) | 0;\n      H[6] = (H[6] + g) | 0;\n      return H[7] = (H[7] + h) | 0;\n    };\n\n    SHA256.prototype._doFinalize = function() {\n      var data, dataWords, nBitsLeft, nBitsTotal;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n      data.sigBytes = dataWords.length * 4;\n      this._process();\n      return this._hash;\n    };\n\n    SHA256.prototype.scrub = function() {\n      return this._hash.scrub();\n    };\n\n    SHA256.prototype.copy_to = function(obj) {\n      SHA256.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    SHA256.prototype.clone = function() {\n      var out;\n      out = new SHA256();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA256;\n\n  })(Hasher);\n\n  transform = function(x) {\n    var out;\n    out = (new SHA256).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.SHA256 = SHA256;\n\n  exports.transform = transform;\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__hasProp","hasOwnProperty","__extends","child","parent","ctor","constructor","key","call","prototype","__super__","WordArray","Hasher","glbl","Global","H","K","W","init","isPrime","Global.prototype.isPrime","n","f","_i","sqn","Math","ceil","sqrt","getFractionalBits","Global.prototype.getFractionalBits","Global.prototype.init","_results","nPrime","pow","push","SHA256","_super","apply","arguments","blockSize","output_size","_doReset","SHA256.prototype._doReset","_hash","slice","get_output_size","SHA256.prototype.get_output_size","_doProcessBlock","SHA256.prototype._doProcessBlock","M","offset","i","words","a","b","c","d","e","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","_doFinalize","SHA256.prototype._doFinalize","data","_data","dataWords","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","floor","length","_process","scrub","SHA256.prototype.scrub","copy_to","SHA256.prototype.copy_to","obj","clone","SHA256.prototype.clone","out","transform","x","finalize"]
}
