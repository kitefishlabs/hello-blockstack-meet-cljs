{
"version":3,
"file":"module$node_modules$blockstack$lib$profiles$profileZoneFiles.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/blockstack/lib/profiles/profileZoneFiles.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$profiles$profileZoneFiles\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeProfileZoneFile = makeProfileZoneFile;\nexports.getTokenFileUrl = getTokenFileUrl;\nexports.resolveZoneFileToProfile = resolveZoneFileToProfile;\n\nvar _zoneFile = require('zone-file');\n\nvar _profileTokens = require('./profileTokens');\n\nvar _index = require('./index');\n\nvar _logger = require('../logger');\n\nfunction makeProfileZoneFile(origin, tokenFileUrl) {\n  if (tokenFileUrl.indexOf('://') < 0) {\n    throw new Error('Invalid token file url');\n  }\n\n  var urlScheme = tokenFileUrl.split('://')[0];\n  var urlParts = tokenFileUrl.split('://')[1].split('/');\n  var domain = urlParts[0];\n  var pathname = '/' + urlParts.slice(1).join('/');\n\n  var zoneFile = {\n    $origin: origin,\n    $ttl: 3600,\n    uri: [{\n      name: '_http._tcp',\n      priority: 10,\n      weight: 1,\n      target: urlScheme + '://' + domain + pathname\n    }]\n  };\n\n  var zoneFileTemplate = '{$origin}\\n{$ttl}\\n{uri}\\n';\n\n  return (0, _zoneFile.makeZoneFile)(zoneFile, zoneFileTemplate);\n}\n\nfunction getTokenFileUrl(zoneFileJson) {\n  if (!zoneFileJson.hasOwnProperty('uri')) {\n    return null;\n  }\n  if (!Array.isArray(zoneFileJson.uri)) {\n    return null;\n  }\n  if (zoneFileJson.uri.length < 1) {\n    return null;\n  }\n  var firstUriRecord = zoneFileJson.uri[0];\n\n  if (!firstUriRecord.hasOwnProperty('target')) {\n    return null;\n  }\n  var tokenFileUrl = firstUriRecord.target;\n\n  if (tokenFileUrl.startsWith('https')) {\n    // pass\n  } else if (tokenFileUrl.startsWith('http')) {\n    // pass\n  } else {\n    tokenFileUrl = 'https://' + tokenFileUrl;\n  }\n\n  return tokenFileUrl;\n}\n\nfunction resolveZoneFileToProfile(zoneFile, publicKeyOrAddress) {\n  return new Promise(function (resolve, reject) {\n    var zoneFileJson = null;\n    try {\n      zoneFileJson = (0, _zoneFile.parseZoneFile)(zoneFile);\n      if (!zoneFileJson.hasOwnProperty('$origin')) {\n        zoneFileJson = null;\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    var tokenFileUrl = null;\n    if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n      tokenFileUrl = getTokenFileUrl(zoneFileJson);\n    } else {\n      var profile = null;\n      try {\n        profile = JSON.parse(zoneFile);\n        profile = _index.Person.fromLegacyFormat(profile).profile();\n      } catch (error) {\n        reject(error);\n      }\n      resolve(profile);\n      return;\n    }\n\n    if (tokenFileUrl) {\n      fetch(tokenFileUrl).then(function (response) {\n        return response.text();\n      }).then(function (responseText) {\n        return JSON.parse(responseText);\n      }).then(function (responseJson) {\n        var tokenRecords = responseJson;\n        var profile = (0, _profileTokens.extractProfile)(tokenRecords[0].token, publicKeyOrAddress);\n        resolve(profile);\n      }).catch(function (error) {\n        _logger.Logger.error('resolveZoneFileToProfile: error fetching token file ' + tokenFileUrl, error);\n        reject(error);\n      });\n    } else {\n      _logger.Logger.debug('Token file url not found. Resolving to blank profile.');\n      resolve({});\n    }\n  });\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getTokenFileUrl","zoneFileJson","hasOwnProperty","Array","isArray","uri","length","firstUriRecord","tokenFileUrl","target","startsWith","Object","defineProperty","value","makeProfileZoneFile","origin","indexOf","Error","urlScheme","split","urlParts","domain","pathname","slice","join","zoneFile","$origin","$ttl","name","priority","weight","_zoneFile","makeZoneFile","zoneFileTemplate","resolveZoneFileToProfile","publicKeyOrAddress","Promise","resolve","reject","parseZoneFile","e","keys","fetch","then","response","text","responseText","JSON","parse","responseJson","profile","_profileTokens","extractProfile","token","catch","error","_logger","Logger","debug","_index","Person","fromLegacyFormat"]
}
