shadow$provide.module$node_modules$browserify_des$index=function(global,process,require,module,exports,shadow$shims){function DES(opts){CipherBase.call(this);var modeName=opts.mode.toLowerCase(),mode=modes[modeName];var type=opts.decrypt?"decrypt":"encrypt";var key=opts.key;Buffer.isBuffer(key)||(key=Buffer.from(key));if("des-ede"===modeName||"des-ede-cbc"===modeName)key=Buffer.concat([key,key.slice(0,8)]);opts=opts.iv;Buffer.isBuffer(opts)||(opts=Buffer.from(opts));this._des=mode.create({key:key,
iv:opts,type:type})}var CipherBase=require("module$node_modules$cipher_base$index");global=require("module$node_modules$des_DOT_js$lib$des");process=require("module$node_modules$inherits$inherits_browser");var Buffer=require("module$node_modules$safe_buffer$index").Buffer,modes={"des-ede3-cbc":global.CBC.instantiate(global.EDE),"des-ede3":global.EDE,"des-ede-cbc":global.CBC.instantiate(global.EDE),"des-ede":global.EDE,"des-cbc":global.CBC.instantiate(global.DES),"des-ecb":global.DES};modes.des=modes["des-cbc"];
modes.des3=modes["des-ede3-cbc"];module.exports=DES;process(DES,CipherBase);DES.prototype._update=function(data){return Buffer.from(this._des.update(data))};DES.prototype._final=function(){return Buffer.from(this._des.final())}}
//# sourceMappingURL=module$node_modules$browserify_des$index.js.map
