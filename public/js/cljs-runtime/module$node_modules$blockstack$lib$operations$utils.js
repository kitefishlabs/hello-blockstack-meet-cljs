shadow$provide.module$node_modules$blockstack$lib$operations$utils=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function transactionBytes(inputs,outputs){return TX_EMPTY_SIZE+inputs.reduce(function(a,x){x=x&&x.script&&0<x.script.length?TX_INPUT_BASE+x.script.length:TX_INPUT_BASE+TX_INPUT_PUBKEYHASH;return a+x},0)+outputs.reduce(function(a,x){x=x&&x.script&&0<x.script.length?TX_OUTPUT_BASE+x.script.length:
TX_OUTPUT_BASE+TX_OUTPUT_PUBKEYHASH;return a+x},0)}function estimateTXBytes(txIn,additionalInputs,additionalOutputs){var innerTx=txIn;txIn instanceof _bitcoinjsLib2.default.TransactionBuilder&&(innerTx=txIn.__tx);txIn=Array(additionalInputs);txIn.fill(null);additionalOutputs=Array(additionalOutputs);additionalOutputs.fill(null);txIn=[].concat(innerTx.ins,txIn);innerTx=[].concat(innerTx.outs,additionalOutputs);return transactionBytes(txIn,innerTx)}function addUTXOsToFund(txBuilderIn,utxos,amountToFund,
feeRate){var fundNewFees=4<arguments.length&&void 0!==arguments[4]?arguments[4]:!0;if(0===utxos.length)throw new _errors.NotEnoughFundsError(amountToFund);var newFees=feeRate*(estimateTXBytes(txBuilderIn,1,0)-estimateTXBytes(txBuilderIn,0,0)),utxoThreshhold=amountToFund;fundNewFees&&(utxoThreshhold+=newFees);var goodUtxos=utxos.filter(function(utxo){return utxo.value>=utxoThreshhold});if(0<goodUtxos.length){goodUtxos.sort(function(a,b){return a.value-b.value});goodUtxos=goodUtxos[0];var change=goodUtxos.value-
amountToFund;fundNewFees&&(change-=newFees);txBuilderIn.addInput(goodUtxos.tx_hash,goodUtxos.tx_output_n);return change}utxos.sort(function(a,b){return b.value-a.value});goodUtxos=utxos[0];if(newFees>=goodUtxos.value)throw new _errors.NotEnoughFundsError(amountToFund);txBuilderIn.addInput(goodUtxos.tx_hash,goodUtxos.tx_output_n);goodUtxos=amountToFund-goodUtxos.value;fundNewFees&&(goodUtxos+=newFees);return addUTXOsToFund(txBuilderIn,utxos.slice(1),goodUtxos,feeRate,fundNewFees)}Object.defineProperty(exports,
"__esModule",{value:!0});exports.DUST_MINIMUM=void 0;exports.hash160=function(buff){buff=_bitcoinjsLib2.default.crypto.sha256(buff);return(new _ripemd2.default).update(buff).digest()};exports.hash128=function(buff){return shadow$shims.Buffer.from(_bitcoinjsLib2.default.crypto.sha256(buff).slice(0,16))};exports.estimateTXBytes=estimateTXBytes;exports.sumOutputValues=function(txIn){var innerTx=txIn;txIn instanceof _bitcoinjsLib2.default.TransactionBuilder&&(innerTx=txIn.__tx);return innerTx.outs.reduce(function(agg,
x){return agg+x.value},0)};exports.decodeB40=function(input){var base=_bigi2.default.valueOf(40);return input.split("").reverse().map(function(character,exponent){return _bigi2.default.valueOf("0123456789abcdefghijklmnopqrstuvwxyz-_.+".indexOf(character)).multiply(base.pow(_bigi2.default.valueOf(exponent)))}).reduce(function(agg,cur){return agg.add(cur)},_bigi2.default.ZERO).toHex()};exports.addUTXOsToFund=addUTXOsToFund;exports.signInputs=function(txB,defaultSigner,otherSigners){var signerArray=
txB.__tx.ins.map(function(){return defaultSigner});otherSigners&&otherSigners.forEach(function(signerPair){signerArray[signerPair.index]=signerPair.signer});var signingPromise=Promise.resolve();otherSigners=function(i){signingPromise=signingPromise.then(function(){return signerArray[i].signTransaction(txB,i)})};for(var i$jscomp$0=0;i$jscomp$0<txB.__tx.ins.length;i$jscomp$0++)otherSigners(i$jscomp$0);return signingPromise.then(function(){return txB})};global=require("module$node_modules$bitcoinjs_lib$src$index");
var _bitcoinjsLib2=_interopRequireDefault(global);global=require("module$node_modules$ripemd160$index");var _ripemd2=_interopRequireDefault(global);global=require("module$node_modules$bigi$lib$index");var _bigi2=_interopRequireDefault(global),_errors=require("module$node_modules$blockstack$lib$errors");require("module$node_modules$blockstack$lib$operations$signers");exports.DUST_MINIMUM=5500;var TX_EMPTY_SIZE=10,TX_INPUT_BASE=41,TX_INPUT_PUBKEYHASH=107,TX_OUTPUT_BASE=9,TX_OUTPUT_PUBKEYHASH=25}
//# sourceMappingURL=module$node_modules$blockstack$lib$operations$utils.js.map
