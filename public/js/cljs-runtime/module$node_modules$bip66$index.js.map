{
"version":3,
"file":"module$node_modules$bip66$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/bip66/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip66$index\"] = function(global,process,require,module,exports,shadow$shims) {\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Buffer","check","buffer","length","lenR","lenS","decode","Error","r","slice","s","encode","signature","allocUnsafe","copy"]
}
