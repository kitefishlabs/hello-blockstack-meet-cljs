{
"version":3,
"file":"module$node_modules$browserify_sign$browser$sign.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/browserify-sign/browser/sign.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_sign$browser$sign\"] = function(global,process,require,module,exports,shadow$shims) {\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [ 0 ].concat(r)\n  if (s[0] & 0x80) s = [ 0 ].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([ zeros, x ])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([ zeros, out ])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = new Buffer(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([ t, kv.v ])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getKey","x","q","hash","algo","Buffer","toArray","length","byteLength","zeros","fill","concat","hlen","bits","bits2int","mod","out","v","k","createHmac","update","hbits","digest","obits","BN","shift","bitLength","ishrn","makeKey","kv","t","cmp","crt","EC","ec","parseKeys","curves","sign","key","hashType","signType","tag","priv","curve","Error","curveId","join","keyFromPrivate","privateKey","toDER","type","params","priv_key","p","g","r","H","s","toRed","mont","redPow","fromRed","invm","imul","add","mul","cmpn","res","len","modulus","pad","push","i"]
}
