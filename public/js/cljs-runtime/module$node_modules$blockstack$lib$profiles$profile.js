shadow$provide.module$node_modules$blockstack$lib$profiles$profile=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,"__esModule",{value:!0});exports.Profile=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}
return function(Constructor,protoProps,staticProps){protoProps&&defineProperties(Constructor.prototype,protoProps);staticProps&&defineProperties(Constructor,staticProps);return Constructor}}(),_schemaInspector2=(global=require("module$node_modules$schema_inspector$index"))&&global.__esModule?global:{default:global},_profileTokens=require("module$node_modules$blockstack$lib$profiles$profileTokens"),_profileProofs=require("module$node_modules$blockstack$lib$profiles$profileProofs"),_profileZoneFiles=
require("module$node_modules$blockstack$lib$profiles$profileZoneFiles"),schemaDefinition={type:"object",properties:{"@context":{type:"string",optional:!0},"@type":{type:"string"}}};exports.Profile=function(){function Profile(){var profile=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(!(this instanceof Profile))throw new TypeError("Cannot call a class as a function");this._profile=Object.assign({},{"@context":"http://schema.org/"},profile)}_createClass(Profile,[{key:"toJSON",value:function(){return Object.assign({},
this._profile)}},{key:"toToken",value:function(privateKey){return(0,_profileTokens.signProfileToken)(this.toJSON(),privateKey)}}],[{key:"validateSchema",value:function(profile){schemaDefinition.strict=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1;return _schemaInspector2.default.validate(schemaDefinition,profile)}},{key:"fromToken",value:function(token){var publicKeyOrAddress=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;publicKeyOrAddress=(0,_profileTokens.extractProfile)(token,
publicKeyOrAddress);return new Profile(publicKeyOrAddress)}},{key:"makeZoneFile",value:function(domainName,tokenFileURL){return(0,_profileZoneFiles.makeProfileZoneFile)(domainName,tokenFileURL)}},{key:"validateProofs",value:function(domainName){return(0,_profileProofs.validateProofs)(this.toJSON(),domainName)}}]);return Profile}()}
//# sourceMappingURL=module$node_modules$blockstack$lib$profiles$profile.js.map
