{
"version":3,
"file":"module$node_modules$cheerio$lib$utils.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACnHC,MAAQJ,OAAA,CAAQ,uCAAR,CAD2G,CAEnHK,OAASL,OAAA,CAAQ,0CAAR,CAF0G,CAQnHM,KAAO,CAAEC,IAAK,CAAA,CAAP,CAAaC,OAAQ,CAAA,CAArB,CAA2BC,MAAO,CAAA,CAAlC,CAQXP,QAAAQ,MAAA,CAAgBC,QAAQ,CAACC,IAAD,CAAO,CACzBA,IAAAA,KAAJ,GAAeA,IAAf,CAAsBA,IAAAA,KAAtB,CACA,OAAON,KAAA,CAAKM,IAAL,CAAP,EAAqB,CAAA,CAFQ,CAW/BV,QAAAW,UAAA,CAAoBC,QAAQ,CAACC,GAAD,CAAM,CAChC,MAAOA,IAAAC,QAAA,CAAY,cAAZ,CAA4B,QAAQ,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAChD,MAAOA,EAAAC,YAAA,EADyC,CAA3C,CADyB,CAYlCjB,QAAAkB,QAAA,CAAkBC,QAAQ,CAACN,GAAD,CAAM,CAC9B,MAAOA,IAAAC,QAAA,CAAY,QAAZ;AAAsB,QAAtB,CAAAM,YAAA,EADuB,CAWhCpB,QAAAqB,QAAA,CAAkBC,QAAQ,CAACC,OAAD,CAAUC,EAAV,CAAc,CAEtC,IAFsC,IAClCC,EAAI,CAD8B,CAC3BC,IAAMH,OAAAI,OACjB,CAAOF,CAAP,CAAWC,GAAX,EAAsD,CAAA,CAAtD,GAAkBF,EAAAI,KAAA,CAAQL,OAAR,CAAiBE,CAAjB,CAAoBF,OAAA,CAAQE,CAAR,CAApB,CAAlB,CAAA,CAA6D,EAAEA,CAC/D,OAAOF,QAH+B,CAaxCvB,QAAA6B,SAAA,CAAmBC,QAAQ,CAACC,GAAD,CAAMC,OAAN,CAAe,CACxC,MAAO9B,MAAA,CAAMC,MAAA,CAAO4B,GAAP,CAAYC,OAAZ,CAAN,CAA4BA,OAA5B,CAAAC,SADiC,CAQ1C,KAAIC,UAAY,0CAKhBlC,QAAAmC,OAAA,CAAiBC,QAAQ,CAACvB,GAAD,CAAM,CAE7B,GAAsB,MAAtB,GAAIA,GAAAwB,OAAA,CAAW,CAAX,CAAJ,EAA4D,MAA5D,GAA6BxB,GAAAwB,OAAA,CAAWxB,GAAAc,OAAX,CAAwB,CAAxB,CAA7B,EAAiF,CAAjF,EAAmEd,GAAAc,OAAnE,CAAoF,MAAO,CAAA,CAGvFW,IAAAA,CAAQJ,SAAAK,KAAA,CAAe1B,GAAf,CACZ,OAAO,EAAGyB,CAAAA,GAAH,EAAY,CAAAA,GAAA,CAAM,CAAN,CAAZ,CANsB,CA5EwF;",
"sources":["node_modules/cheerio/lib/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cheerio$lib$utils\"] = function(global,process,require,module,exports,shadow$shims) {\nvar parse = require('./parse'),\n    render = require('dom-serializer');\n\n/**\n * HTML Tags\n */\n\nvar tags = { tag: true, script: true, style: true };\n\n/**\n * Check if the DOM element is a tag\n *\n * isTag(type) includes <script> and <style> tags\n */\n\nexports.isTag = function(type) {\n  if (type.type) type = type.type;\n  return tags[type] || false;\n};\n\n/**\n * Convert a string to camel case notation.\n * @param  {String} str String to be converted.\n * @return {String}     String in camel case notation.\n */\n\nexports.camelCase = function(str) {\n  return str.replace(/[_.-](\\w|$)/g, function(_, x) {\n    return x.toUpperCase();\n  });\n};\n\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n * @param  {String} str String to be converted.\n * @return {string}     String in \"CSS case\".\n */\nexports.cssCase = function(str) {\n  return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n};\n\n/**\n * Iterate over each DOM element without creating intermediary Cheerio instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory pressure introduced\n * by _make.\n */\n\nexports.domEach = function(cheerio, fn) {\n  var i = 0, len = cheerio.length;\n  while (i < len && fn.call(cheerio, i, cheerio[i]) !== false) ++i;\n  return cheerio;\n};\n\n/**\n * Create a deep copy of the given DOM structure by first rendering it to a\n * string and then parsing the resultant markup.\n *\n * @argument {Object} dom - The htmlparser2-compliant DOM structure\n * @argument {Object} options - The parsing/rendering options\n */\nexports.cloneDom = function(dom, options) {\n  return parse(render(dom, options), options).children;\n};\n\n/*\n * A simple way to check for HTML strings or ID strings\n */\n\nvar quickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\n\n/*\n * Check if string is HTML\n */\nexports.isHtml = function(str) {\n  // Faster than running regex, if str starts with `<` and ends with `>`, assume it's HTML\n  if (str.charAt(0) === '<' && str.charAt(str.length - 1) === '>' && str.length >= 3) return true;\n\n  // Run the regex\n  var match = quickExpr.exec(str);\n  return !!(match && match[1]);\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","parse","render","tags","tag","script","style","isTag","exports.isTag","type","camelCase","exports.camelCase","str","replace","_","x","toUpperCase","cssCase","exports.cssCase","toLowerCase","domEach","exports.domEach","cheerio","fn","i","len","length","call","cloneDom","exports.cloneDom","dom","options","children","quickExpr","isHtml","exports.isHtml","charAt","match","exec"]
}
