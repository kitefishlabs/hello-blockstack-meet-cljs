{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$utils.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$utils\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","BN","minAssert","minUtils","assert","toArray","zero2","toHex","encode","getNAF","num","w","naf","ws","k","clone","cmpn","isOdd","mod","andln","z","isubn","push","shift","i","iushrn","getJSF","k1","k2","jsf","d1","d2","m14","m24","u1","m8","u2","cachedProperty","obj","name","computer","key","prototype","undefined","call","parseBytes","bytes","intFromLE"]
}
