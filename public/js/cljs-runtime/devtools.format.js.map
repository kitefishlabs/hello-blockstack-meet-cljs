{"version":3,"sources":["devtools/format.cljs"],"sourcesContent":["(ns devtools.format\n  (:require-macros [devtools.oops :refer [oget]])\n  (:require [devtools.context :as context]))\n\n; WARNING this namespace is here for legacy reasons, it will be removed in future!\n\n; ---------------------------------------------------------------------------------------------------------------------------\n; PROTOCOL SUPPORT\n\n(defprotocol ^:deprecated IDevtoolsFormat                                                                                     ; use IFormat instead\n  (-header [value])\n  (-has-body [value])\n  (-body [value]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *setup-done*)\n\n(defn setup! []\n  (when-not *setup-done*\n    (set! *setup-done* true)\n\n    ; note: we cannote require devtools.formatters.templating or .markup because that would lead to circular requires\n    (def make-template-fn (oget (context/get-root) \"devtools\" \"formatters\" \"templating\" \"make_template\"))\n    (def make-group-fn (oget (context/get-root) \"devtools\" \"formatters\" \"templating\" \"make_group\"))\n    (def make-reference-fn (oget (context/get-root) \"devtools\" \"formatters\" \"templating\" \"make_reference\"))\n    (def make-surrogate-fn (oget (context/get-root) \"devtools\" \"formatters\" \"templating\" \"make_surrogate\"))\n    (def render-markup-fn (oget (context/get-root) \"devtools\" \"formatters\" \"templating\" \"render_markup\"))\n    (def <header>-fn (oget (context/get-root) \"devtools\" \"formatters\" \"markup\" \"_LT_header_GT_\"))\n    (def <standard-body>-fn (oget (context/get-root) \"devtools\" \"formatters\" \"markup\" \"_LT_standard_body_GT_\"))\n\n    (assert make-template-fn)\n    (assert make-group-fn)\n    (assert make-reference-fn)\n    (assert make-surrogate-fn)\n    (assert render-markup-fn)\n    (assert <header>-fn)\n    (assert <standard-body>-fn)))\n\n(defn- render-markup [& args]\n  (setup!)\n  (apply render-markup-fn args))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n; deprecated functionality, implemented for easier transition from v0.7.x to v0.8\n\n(defn ^:deprecated make-template [& args]\n  (setup!)\n  (apply make-template-fn args))\n\n(defn ^:deprecated make-group [& args]\n  (setup!)\n  (apply make-group-fn args))\n\n(defn ^:deprecated make-surrogate [& args]\n  (setup!)\n  (apply make-surrogate-fn args))\n\n(defn ^:deprecated template [& args]\n  (setup!)\n  (apply make-template-fn args))\n\n(defn ^:deprecated group [& args]\n  (setup!)\n  (apply make-group-fn args))\n\n(defn ^:deprecated surrogate [& args]\n  (setup!)\n  (apply make-surrogate-fn args))\n\n(defn ^:deprecated reference [object & [state-override]]\n  (setup!)\n  (apply make-reference-fn [object #(merge % state-override)]))\n\n(defn ^:deprecated standard-reference [target]\n  (setup!)\n  (make-template-fn :ol :standard-ol-style (make-template-fn :li :standard-li-style (make-reference-fn target))))\n\n(defn ^:deprecated build-header [& args]\n  (setup!)\n  (render-markup (apply <header>-fn args)))\n\n(defn ^:deprecated standard-body-template [lines & rest]\n  (setup!)\n  (let [args (concat [(map (fn [x] [x]) lines)] rest)]\n    (render-markup (apply <standard-body>-fn args))))\n"],"mappings":"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","names":["devtools.format/-header","goog/typeOf","x__4347__auto__","m__4348__auto__","cljs.core/missing-protocol","devtools.format/-has-body","devtools.format/-body","devtools.format/IDevtoolsFormat","value","devtools.format/setup!","devtools.format/*setup-done*","devtools.format/make-template-fn","temp__5455__auto__","o12180","o12181","o12182","devtools.context/get-root","devtools.format/make-group-fn","o12189","o12190","o12191","devtools.format/make-reference-fn","o12199","o12200","o12201","devtools.format/make-surrogate-fn","o12206","o12207","o12208","devtools.format/render-markup-fn","o12211","o12212","o12213","devtools.format/<header>-fn","o12220","o12221","o12222","devtools.format/<standard-body>-fn","o12225","o12226","o12227","js/Error","i__4642__auto__","len__4641__auto__","args__4647__auto__","cljs.core/IndexedSeq","devtools.format/render-markup","argseq__4648__auto__","self__4629__auto__","cljs.core/seq","seq12232","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","args","devtools.format/make-template","seq12241","devtools.format/make-group","seq12243","devtools.format/make-surrogate","seq12251","devtools.format/template","seq12252","devtools.format/group","seq12255","devtools.format/surrogate","seq12261","devtools.format/reference","p__12271","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__12272","cljs.core/first","seq12268","cljs.core/next","self__4628__auto__","G__12269","object","p1__12266#","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","state-override","devtools.format/standard-reference","G__12286","G__12287","G__12288","G__12291","G__12292","G__12293","target","devtools.format/build-header","seq12297","devtools.format.render_markup.cljs$core$IFn$_invoke$arity$variadic","devtools.format/standard-body-template","seq12311","G__12312","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$2","x","lines","rest"]}