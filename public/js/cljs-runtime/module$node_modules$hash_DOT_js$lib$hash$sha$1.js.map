{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$sha$1.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/hash_DOT_js/lib/hash/sha/1.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$sha$1\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","SHA1","BlockHash","call","h","W","Array","utils","common","shaCommon","rotl32","sum32","sum32_5","ft_1","sha1_K","inherits","blockSize","outSize","hmacStrength","padLength","prototype","_update","SHA1.prototype._update","msg","start","i","length","a","b","c","d","e","s","t","_digest","SHA1.prototype._digest","enc","toHex32","split32"]
}
