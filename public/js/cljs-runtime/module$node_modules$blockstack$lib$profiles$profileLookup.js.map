{
"version":3,
"file":"module$node_modules$blockstack$lib$profiles$profileLookup.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG3IC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,cAAA,CAeAA,QAAsB,CAACC,QAAD,CAAW,CAC/B,IAAIC,kBAAuC,CAAnB,CAAAC,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,IAE5F,IAAI,CAACF,QAAL,CACE,MAAOK,QAAAC,OAAA,EAET,KAAIC,cAAgB,IAAK,EACrBN,kBAAJ,EACMO,iBACJ,CADUP,iBAAAQ,QAAA,CAA0B,KAA1B,CAAiC,EAAjC,CACV,CADiD,GACjD,CADuDT,QACvD,CAAAO,aAAA,CAAgBG,KAAA,CAAMF,iBAAN,CAAAG,KAAA,CAAgB,QAAS,CAACC,QAAD,CAAW,CAClD,MAAOA,SAAAC,KAAA,EAD2C,CAApC,CAFlB;AAMEN,aANF,CAMkBO,OAAAC,OAAAC,QAAAC,YAAA,CAAmCjB,QAAnC,CAElB,OAAOO,cAAAI,KAAA,CAAmB,QAAS,CAACO,YAAD,CAAe,CAChD,GAAIA,YAAAC,eAAA,CAA4B,UAA5B,CAAJ,EAA+CD,YAAAC,eAAA,CAA4B,SAA5B,CAA/C,CACE,MAAO,CAAC,CAAA,CAAGC,iBAAAC,yBAAJ,EAAgDH,YAAAI,SAAhD,CAAuEJ,YAAAK,QAAvE,CAEP,MAAUC,MAAJ,CAAU,iFAAV,CAAN,CAJ8C,CAA3C,CAfwB,CAbjC,KAAIJ,kBAAoB5B,OAAA,CAAQ,8DAAR,CAAxB,CAEIsB,QAAUtB,OAAA,CAAQ,2CAAR,CAV6H;",
"sources":["node_modules/blockstack/lib/profiles/profileLookup.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$profiles$profileLookup\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lookupProfile = lookupProfile;\n\nvar _profileZoneFiles = require('./profileZoneFiles');\n\nvar _config = require('../config');\n\n/**\n * Look up a user profile by blockstack ID\n *\n * @param {string} username - The Blockstack ID of the profile to look up\n * @param {string} [zoneFileLookupURL=null] - The URL\n * to use for zonefile lookup. If falsey, lookupProfile will use the\n * blockstack.js getNameInfo function.\n * @returns {Promise} that resolves to a profile object\n */\nfunction lookupProfile(username) {\n  var zoneFileLookupURL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!username) {\n    return Promise.reject();\n  }\n  var lookupPromise = void 0;\n  if (zoneFileLookupURL) {\n    var url = zoneFileLookupURL.replace(/\\/$/, '') + '/' + username;\n    lookupPromise = fetch(url).then(function (response) {\n      return response.json();\n    });\n  } else {\n    lookupPromise = _config.config.network.getNameInfo(username);\n  }\n  return lookupPromise.then(function (responseJSON) {\n    if (responseJSON.hasOwnProperty('zonefile') && responseJSON.hasOwnProperty('address')) {\n      return (0, _profileZoneFiles.resolveZoneFileToProfile)(responseJSON.zonefile, responseJSON.address);\n    } else {\n      throw new Error('Invalid zonefile lookup response: did not contain `address`' + ' or `zonefile` field');\n    }\n  });\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","lookupProfile","username","zoneFileLookupURL","arguments","length","undefined","Promise","reject","lookupPromise","url","replace","fetch","then","response","json","_config","config","network","getNameInfo","responseJSON","hasOwnProperty","_profileZoneFiles","resolveZoneFileToProfile","zonefile","address","Error"]
}
