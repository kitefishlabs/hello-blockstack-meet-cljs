{
"version":3,
"file":"module$node_modules$typeforce$index.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/typeforce/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$typeforce$index\"] = function(global,process,require,module,exports,shadow$shims) {\nvar ERRORS = require('./errors')\nvar NATIVE = require('./native')\n\n// short-hand\nvar tfJSON = ERRORS.tfJSON\nvar TfTypeError = ERRORS.TfTypeError\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError\nvar tfSubError = ERRORS.tfSubError\nvar getValueTypeName = ERRORS.getValueTypeName\n\nvar TYPES = {\n  arrayOf: function arrayOf (type, options) {\n    type = compile(type)\n    options = options || {}\n\n    function _arrayOf (array, strict) {\n      if (!NATIVE.Array(array)) return false\n      if (NATIVE.Nil(array)) return false\n      if (options.minLength !== undefined && array.length < options.minLength) return false\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false\n      if (options.length !== undefined && array.length !== options.length) return false\n\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']'\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}'\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' +\n          (options.minLength === undefined ? 0 : options.minLength) + ',' +\n          (options.maxLength === undefined ? Infinity : options.maxLength) + '}'\n      }\n      return str\n    }\n\n    return _arrayOf\n  },\n\n  maybe: function maybe (type) {\n    type = compile(type)\n\n    function _maybe (value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe)\n    }\n    _maybe.toJSON = function () { return '?' + tfJSON(type) }\n\n    return _maybe\n  },\n\n  map: function map (propertyType, propertyKeyType) {\n    propertyType = compile(propertyType)\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType)\n\n    function _map (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict)\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key')\n        }\n\n        try {\n          var propertyValue = value[propertyName]\n          typeforce(propertyType, propertyValue, strict)\n        } catch (e) {\n          throw tfSubError(e, propertyName)\n        }\n      }\n\n      return true\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}'\n      }\n    } else {\n      _map.toJSON = function () { return '{' + tfJSON(propertyType) + '}' }\n    }\n\n    return _map\n  },\n\n  object: function object (uncompiled) {\n    var type = {}\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName])\n    }\n\n    function _object (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      var propertyName\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName]\n          var propertyValue = value[propertyName]\n\n          typeforce(propertyType, propertyValue, strict)\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName)\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue\n\n          throw new TfPropertyTypeError(undefined, propertyName)\n        }\n      }\n\n      return true\n    }\n    _object.toJSON = function () { return tfJSON(type) }\n\n    return _object\n  },\n\n  anyOf: function anyOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _anyOf (value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _anyOf.toJSON = function () { return types.map(tfJSON).join('|') }\n\n    return _anyOf\n  },\n\n  allOf: function allOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _allOf (value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _allOf.toJSON = function () { return types.map(tfJSON).join(' & ') }\n\n    return _allOf\n  },\n\n  quacksLike: function quacksLike (type) {\n    function _quacksLike (value) {\n      return type === getValueTypeName(value)\n    }\n    _quacksLike.toJSON = function () { return type }\n\n    return _quacksLike\n  },\n\n  tuple: function tuple () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _tuple (values, strict) {\n      if (NATIVE.Nil(values)) return false\n      if (NATIVE.Nil(values.length)) return false\n      if (strict && (values.length !== types.length)) return false\n\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _tuple.toJSON = function () { return '(' + types.map(tfJSON).join(', ') + ')' }\n\n    return _tuple\n  },\n\n  value: function value (expected) {\n    function _value (actual) {\n      return actual === expected\n    }\n    _value.toJSON = function () { return expected }\n\n    return _value\n  }\n}\n\n// TODO: deprecate\nTYPES.oneOf = TYPES.anyOf\n\nfunction compile (type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1))\n\n    return NATIVE[type] || TYPES.quacksLike(type)\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1')\n      return TYPES.arrayOf(type[0])\n    }\n\n    return TYPES.object(type)\n  } else if (NATIVE.Function(type)) {\n    return type\n  }\n\n  return TYPES.value(type)\n}\n\nfunction typeforce (type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true\n\n    throw new TfTypeError(surrogate || type, value)\n  }\n\n  // JIT\n  return typeforce(compile(type), value, strict)\n}\n\n// assign types to typeforce function\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName]\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName]\n}\n\nvar EXTRA = require('./extra')\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName]\n}\n\ntypeforce.compile = compile\ntypeforce.TfTypeError = TfTypeError\ntypeforce.TfPropertyTypeError = TfPropertyTypeError\n\nmodule.exports = typeforce\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","compile","type","NATIVE","String","TYPES","maybe","slice","quacksLike","Object","Array","length","TypeError","arrayOf","object","Function","value","typeforce","strict","surrogate","TfTypeError","ERRORS","tfJSON","TfPropertyTypeError","tfSubError","getValueTypeName","options","_arrayOf","array","Nil","undefined","minLength","maxLength","every","i","e","toJSON","_arrayOf.toJSON","str","Infinity","_maybe","_maybe.toJSON","map","propertyType","propertyKeyType","_map","propertyName","propertyValue","_map.toJSON","uncompiled","_object","typePropertyName","_object.toJSON","anyOf","_anyOf","types","some","call","arguments","_anyOf.toJSON","join","allOf","_allOf","_allOf.toJSON","_quacksLike","_quacksLike.toJSON","tuple","_tuple","values","_tuple.toJSON","expected","_value","actual","_value.toJSON","oneOf","typeName","EXTRA"]
}
