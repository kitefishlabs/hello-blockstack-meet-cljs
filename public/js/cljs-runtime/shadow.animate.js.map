{"version":3,"sources":["shadow/animate.cljs"],"sourcesContent":["(ns shadow.animate\n  (:require-macros [cljs.core.async.macros :refer (go)])\n  (:require [shadow.dom :as dom]\n            [shadow.object :as so]\n            [clojure.string :as str]\n            [cljs.core.async :as async]\n            [goog.dom.vendor :as vendor]\n            [goog.style :as gs]\n            [shadow.util :as util :refer (doarray log)]))\n\n;; FIXME: this needs a cleanup, due to introduction of Animator the whole\n;; other stuff seems unnecessary complex and confusing\n\n;; not actually sure a protocol is any help here, just a map of maps would work too\n;; started with a different approach, dunno if there are any drawbacks to keeping this\n(defprotocol Animation\n  (-animate-from [this] \"return a map of {attr initial-value}\")\n  (-animate-to [this] \"return a map of {attr target-value}\")\n  (-animate-toggles [this] \"return a map of {attr target-value}\")\n  (-animate-timings [this] \"return a map of {attr timing-function}\")\n  (-animate-delays [this] \"return a map of {attr transition-delay}\"))\n\n(defn- transition-string [duration adef]\n  (let [timings (-animate-timings adef)\n        delays (-animate-delays adef)]\n    (->> timings\n         (map (fn [[attr timing]]\n                (str (name attr)\n                     \" \"\n                     duration \"ms\"\n                     \" \"\n                     timing \n                     (let [delay (get delays attr)]\n                       (when (and delay (pos? delay))\n                         (str \" \" delay \"ms\"))))))\n         (str/join \", \"))))\n\n(defprotocol IAnimator\n  (get-duration [animator])\n  (init! [animator] \"apply the initial values\")\n  (start! [animator] \"start the animation, must return a channel that closes once the animation is done\")\n  (finish! [animator] \"cleanup\"))\n\n(deftype Animator [duration items]\n  IAnimator\n  (get-duration [_] duration)\n  (init! [_]\n    ;; set from values on all nodes\n    (doarray [{:keys [el from]} items]\n      (gs/setStyle el from)))\n  (start! [_]\n    ;; set to values\n    (doarray [{:keys [el to transition]} items]\n      (aset to \"transition\" transition)\n      (gs/setStyle el to)))\n  (finish! [_]\n    ;; cleanup\n    (doarray [{:keys [el toggles]} items]\n      (aset toggles \"transition\" nil)\n      (gs/setStyle el toggles))))\n\n(defrecord AnimationStep [el from to toggles transition])\n\n(defn setup [duration elements]\n  (let [items (into-array (for [[el adef] elements]\n                            (do (when-not (satisfies? Animation adef)\n                                  (throw (ex-info \"invalid animation\" {:el el :animation adef})))\n                                (let [from (-animate-from adef)\n                                      to (-animate-to adef)\n                                      toggles (-animate-toggles adef)]\n                                  (AnimationStep.\n                                   (dom/dom-node el)\n                                   (clj->js from) \n                                   (clj->js to)\n                                   (clj->js toggles)\n                                   (transition-string duration adef))))))]\n    (Animator. duration items)))\n\n(defn continue! [animator]\n  (start! animator)\n  (go (<! (async/timeout (get-duration animator)))\n      (finish! animator)\n      :done))\n\n(defn start [duration elements]\n  (let [animator (setup duration elements)]\n    (init! animator) \n    (continue! animator)\n    ))\n\n;; transitions\n\n(defn transition\n  \"transition the given attr from -> to using timing function and delay\n   timing defaults to ease, delay to 0\"\n  ([attr from to]\n     (transition attr from to \"ease\" 0))\n  ([attr from to timing]\n     (transition attr from to timing 0))\n  ([attr from to timing delay]\n     (reify Animation\n       (-animate-from [_] {attr from})\n       (-animate-to [_] {attr to})\n       (-animate-toggles [_] {})\n       (-animate-timings [_] {attr timing})\n       (-animate-delays [_] {attr delay})\n       )))\n\n(defn toggle [attr from to]\n  (reify Animation\n    (-animate-to [_] {})\n    (-animate-from [_] {attr from})\n    (-animate-toggles [_] {attr to})\n    (-animate-timings [_] {})\n    (-animate-delays [_] {})))\n\n(defn set-attr\n  \"set attr to value when the animation starts\"\n  ([attrs]\n     (reify Animation\n       (-animate-to [_] {})\n       (-animate-from [_] attrs)\n       (-animate-toggles [_] {})\n       (-animate-timings [_] {})\n       (-animate-delays [_] {})))\n  ([attr value]\n     (set-attr {attr value})))\n\n(defn delete-attr\n  \"use to remove a given attribute style when the animation is finished\n   usually only needed to remove attributes we no longer need since they are probably\n   inherited and we only used for previous transitions\"\n  [attr]\n  (reify Animation\n    (-animate-to [_] {})\n    (-animate-from [_] {})\n    (-animate-toggles [_] {attr nil})\n    (-animate-timings [_] {})\n    (-animate-delays [_] {})))\n\n(defn combine [& transitions]\n  (loop [to {}\n         from {}\n         toggles {}\n         timings {}\n         delays {}\n         transitions transitions]\n    (if-let [adef (first transitions)]\n      ;; TODO: should check for conflicts and throw!\n      ;; can't combine transitions on the same attribute\n      (recur (merge to (-animate-to adef))\n             (merge from (-animate-from adef))\n             (merge toggles (-animate-toggles adef))\n             (merge timings (-animate-timings adef))\n             (merge delays (-animate-delays adef))\n             (rest transitions))\n      ;; return combined transition\n      (reify Animation\n        (-animate-from [_] from)\n        (-animate-to [_] to)\n        (-animate-toggles [_] toggles)\n        (-animate-timings [_] timings)\n        (-animate-delays [_] delays)))))\n\n;; common transitions\n(defn fade-in\n  ([] (fade-in \"ease-in\"))\n  ([timing-function]\n     (transition :opacity \"0\" \"1\" timing-function)\n     ))\n\n(defn fade-out\n  ([] (fade-in \"ease-out\"))\n  ([timing-function]\n     (transition :opacity \"1\" \"0\" timing-function)\n     ))\n\n(def vendor-prefix (vendor/getVendorPrefix))\n;; the transition part for transform is still vendor prefixed! css3 ...\n(def vendor-transform (keyword (str vendor-prefix \"-transform\")))\n\n(defn translate-y\n  ([from to timing]\n     (translate-y from to timing 0))\n  ([from to timing delay]\n     (reify Animation\n       (-animate-from [_] {:transform (str \"translateY(\" from \")\")})\n       (-animate-to [_] {:transform (str \"translateY(\" to \")\")})\n       (-animate-timings [_] {vendor-transform timing})\n       (-animate-toggles [_] {})\n       (-animate-delays [_] {vendor-transform delay}))))\n\n(defn translate-x\n  ([from to timing]\n     (translate-x from to timing 0))\n  ([from to timing delay]\n     (reify Animation\n       (-animate-from [_] {:transform (str \"translateX(\" from \")\")})\n       (-animate-to [_] {:transform (str \"translateX(\" to \")\")})\n       (-animate-timings [_] {vendor-transform timing})\n       (-animate-toggles [_] {})\n       (-animate-delays [_] {vendor-transform delay}))))\n"],"mappings":"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","names":["shadow.animate/-animate-from","goog/typeOf","x__4347__auto__","m__4348__auto__","cljs.core/missing-protocol","shadow.animate/-animate-to","shadow.animate/-animate-toggles","shadow.animate/-animate-timings","shadow.animate/-animate-delays","shadow.animate/Animation","this","shadow.animate/transition-string","adef","timings","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__21882","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__21883","cljs.core/name","attr","duration","timing","cljs.core.get.cljs$core$IFn$_invoke$arity$2","delays","and__4036__auto__","delay","clojure.string.join.cljs$core$IFn$_invoke$arity$2","shadow.animate/get-duration","shadow.animate/init!","shadow.animate/start!","shadow.animate/finish!","shadow.animate/IAnimator","animator","cljs.core/PROTOCOL_SENTINEL","cljs.core/-write","writer__4291__auto__","shadow.animate/Animator","shadow.animate/->Animator","items","i__20464__auto__","n__4518__auto__","map__21930","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","goog.style/setStyle","el","from","map__21940","to","transition","map__21944","toggles","this__4301__auto__","k__4302__auto__","k21957","G__21964","cljs.core/Keyword","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","else__4304__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__21965","vec__21968","f__4321__auto__","ret__4323__auto__","k__4324__auto__","v__4325__auto__","init__4322__auto__","this__4320__auto__","cljs.core/pr-sequential-writer","writer__4316__auto__","opts__4317__auto__","keyval__4319__auto__","pr-pair__4318__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","cljs.core/RecordIter","G__21956","cljs.core/-iterator","cljs.core/nil-iter","__meta","__hash","cljs.core/count","h__4159__auto__","cljs.core/hash-unordered-coll","coll__4298__auto__","fexpr__21975","this__4297__auto__","other21959","this21958","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/contains?","k__4311__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","this__4310__auto__","cljs.core/not-empty","cljs.core/keyword-identical?","k__4309__auto__","expr__22000","pred__21999","G__22002","G__22003","G__22004","G__22005","G__22006","G__22007","G__22008","G__22009","G__22016","G__22017","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/seq","cljs.core/MapEntry","cljs.core/vector?","entry__4307__auto__","this__4306__auto__","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","shadow.animate/AnimationStep","cljs.core/List","writer__4345__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","G__21963","cljs.core/record?","G__22031","extmap__4340__auto__","shadow.animate/->AnimationStep","shadow.animate/map->AnimationStep","shadow.animate/setup","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","cljs.core/LazySeq","s__22052","temp__5457__auto__","cljs.core/chunked-seq?","c__4432__auto__","cljs.core/chunk-buffer","size__4433__auto__","i__22053","vec__22062","cljs.core/chunk-append","b__22054","cljs.core/chunk-cons","cljs.core/chunk","iter__22051","cljs.core/chunk-rest","cljs.core/first","vec__22067","cljs.core/cons","cljs.core/rest","iter__4434__auto__","elements","cljs.core/native-satisfies?","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","shadow.dom/dom-node","cljs.core/clj->js","shadow.animate/continue!","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","state_22078","state_val_22079","inst_22071","cljs.core.async.impl.ioc-helpers/take!","inst_22072","statearr-22080","inst_22076","inst_22074","cljs.core.async.impl.ioc-helpers/return-chan","statearr-22081","state-machine__18821__auto__","switch__18820__auto__","result__18823__auto__","e22082","js/Object","statearr-22083","ex__18824__auto__","cljs.core.async.impl.ioc-helpers/process-exception","ret-value__18822__auto__","f__18922__auto__","statearr-22084","cljs.core.async.impl.ioc-helpers/USER-START-IDX","c__18921__auto__","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state__18923__auto__","cljs.core.async/timeout","shadow.animate/start","G__22087","shadow.animate/transition","js/Error","shadow.animate.transition.cljs$core$IFn$_invoke$arity$5","js/shadow","js/shadow.animate","js/shadow.animate.t_shadow$animate22088","shadow.animate/t_shadow$animate22088","meta22089","shadow.animate/->t_shadow$animate22088","shadow.animate/toggle","js/shadow.animate.t_shadow$animate22156","shadow.animate/t_shadow$animate22156","meta22157","shadow.animate/->t_shadow$animate22156","G__22162","shadow.animate/set-attr","attrs","js/shadow.animate.t_shadow$animate22165","shadow.animate/t_shadow$animate22165","meta22166","shadow.animate/->t_shadow$animate22165","shadow.animate.set_attr.cljs$core$IFn$_invoke$arity$1","value","shadow.animate/delete-attr","js/shadow.animate.t_shadow$animate22187","shadow.animate/t_shadow$animate22187","meta22188","shadow.animate/->t_shadow$animate22187","i__4642__auto__","len__4641__auto__","args__4647__auto__","cljs.core/IndexedSeq","shadow.animate/combine","argseq__4648__auto__","self__4629__auto__","seq22209","transitions","temp__5455__auto__","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","js/shadow.animate.t_shadow$animate22210","shadow.animate/t_shadow$animate22210","meta22211","shadow.animate/->t_shadow$animate22210","G__22243","shadow.animate/fade-in","shadow.animate.fade_in.cljs$core$IFn$_invoke$arity$1","shadow.animate.transition.cljs$core$IFn$_invoke$arity$4","timing-function","G__22261","shadow.animate/fade-out","shadow.animate/vendor-prefix","goog.dom.vendor/getVendorPrefix","shadow.animate/vendor-transform","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","G__22278","shadow.animate/translate-y","shadow.animate.translate_y.cljs$core$IFn$_invoke$arity$4","js/shadow.animate.t_shadow$animate22286","shadow.animate/t_shadow$animate22286","meta22287","shadow.animate/->t_shadow$animate22286","G__22317","shadow.animate/translate-x","shadow.animate.translate_x.cljs$core$IFn$_invoke$arity$4","js/shadow.animate.t_shadow$animate22334","shadow.animate/t_shadow$animate22334","meta22335","shadow.animate/->t_shadow$animate22334","cljs.core/chunk-first"]}