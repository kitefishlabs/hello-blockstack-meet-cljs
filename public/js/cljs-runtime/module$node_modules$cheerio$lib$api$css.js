shadow$provide.module$node_modules$cheerio$lib$api$css=function(global,process,require,module,exports,shadow$shims){function setCss(el,prop,val,idx){if("string"==typeof prop){var styles=getCss(el);"function"===typeof val&&(val=val.call(el,idx,styles[prop]));""===val?delete styles[prop]:null!=val&&(styles[prop]=val);el.attribs.style=stringify(styles)}else"object"==typeof prop&&Object.keys(prop).forEach(function(k){setCss(el,k,prop[k])})}function getCss(el,prop){el=parse(el.attribs.style);return"string"===
typeof prop?el[prop]:Array.isArray(prop)?_.pick(el,prop):el}function stringify(obj){return Object.keys(obj||{}).reduce(function(str,prop){return str+((str?" ":"")+prop+": "+obj[prop]+";")},"")}function parse(styles){return(styles=(styles||"").trim())?styles.split(";").reduce(function(obj,str){var n=str.indexOf(":");if(1>n||n===str.length-1)return obj;obj[str.slice(0,n).trim()]=str.slice(n+1).trim();return obj},{}):{}}var domEach=require("module$node_modules$cheerio$lib$utils").domEach,_={pick:require("module$node_modules$lodash_DOT_pick$index")},
toString=Object.prototype.toString;exports.css=function(prop,val){return 2===arguments.length||"[object Object]"===toString.call(prop)?domEach(this,function(idx,el){setCss(el,prop,val,idx)}):getCss(this[0],prop)}}
//# sourceMappingURL=module$node_modules$cheerio$lib$api$css.js.map
