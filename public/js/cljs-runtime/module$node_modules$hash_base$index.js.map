{
"version":3,
"file":"module$node_modules$hash_base$index.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/hash-base/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_base$index\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","HashBase","blockSize","Transform","call","_block","Buffer","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","inherits","prototype","_transform","HashBase.prototype._transform","chunk","encoding","callback","error","update","err","_flush","HashBase.prototype._flush","push","digest","HashBase.prototype.update","data","isBuffer","val","TypeError","Error","from","block","offset","length","i","_update","j","carry","HashBase.prototype._update","HashBase.prototype.digest","_digest","undefined","toString","fill","HashBase.prototype._digest"]
}
