{
"version":3,
"file":"module$node_modules$blockstack$lib$auth$authMessages.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/blockstack/lib/auth/authMessages.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$auth$authMessages\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeAuthRequest = makeAuthRequest;\nexports.encryptPrivateKey = encryptPrivateKey;\nexports.decryptPrivateKey = decryptPrivateKey;\nexports.makeAuthResponse = makeAuthResponse;\n\nrequire('cross-fetch/polyfill');\n\nvar _jsontokens = require('jsontokens');\n\nvar _index = require('../index');\n\nvar _authConstants = require('./authConstants');\n\nvar _encryption = require('../encryption');\n\nvar _logger = require('../logger');\n\nvar VERSION = '1.3.1';\n\n/**\n * Generates an authentication request that can be sent to the Blockstack\n * browser for the user to approve sign in. This authentication request can\n * then be used for sign in by passing it to the `redirectToSignInWithAuthRequest`\n * method.\n *\n * *Note: This method should only be used if you want to roll your own authentication\n * flow. Typically you'd use `redirectToSignIn` which takes care of this\n * under the hood.*\n *\n * @param  {String} [transitPrivateKey=generateAndStoreTransitKey()] - hex encoded transit\n *   private key\n * @param {String} redirectURI - location to redirect user to after sign in approval\n * @param {String} manifestURI - location of this app's manifest file\n * @param {Array<String>} scopes - the permissions this app is requesting\n * @param {String} appDomain - the origin of this app\n * @param {Number} expiresAt - the time at which this request is no longer valid\n * @param {Object} extraParams - Any extra parameters you'd like to pass to the authenticator.\n * Use this to pass options that aren't part of the Blockstack auth spec, but might be supported\n * by special authenticators.\n * @return {String} the authentication request\n */\nfunction makeAuthRequest() {\n  var transitPrivateKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _index.generateAndStoreTransitKey)();\n  var redirectURI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.origin + '/';\n  var manifestURI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window.location.origin + '/manifest.json';\n  var scopes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _authConstants.DEFAULT_SCOPE;\n  var appDomain = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : window.location.origin;\n  var expiresAt = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : (0, _index.nextHour)().getTime();\n  var extraParams = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\n  /* Create the payload */\n  var payload = Object.assign({}, extraParams, {\n    jti: (0, _index.makeUUID4)(),\n    iat: Math.floor(new Date().getTime() / 1000), // JWT times are in seconds\n    exp: Math.floor(expiresAt / 1000), // JWT times are in seconds\n    iss: null,\n    public_keys: [],\n    domain_name: appDomain,\n    manifest_uri: manifestURI,\n    redirect_uri: redirectURI,\n    version: VERSION,\n    do_not_include_profile: true,\n    supports_hub_url: true,\n    scopes: scopes\n  });\n\n  _logger.Logger.info('blockstack.js: generating v' + VERSION + ' auth request');\n\n  /* Convert the private key to a public key to an issuer */\n  var publicKey = _jsontokens.SECP256K1Client.derivePublicKey(transitPrivateKey);\n  payload.public_keys = [publicKey];\n  var address = (0, _index.publicKeyToAddress)(publicKey);\n  payload.iss = (0, _index.makeDIDFromAddress)(address);\n\n  /* Sign and return the token */\n  var tokenSigner = new _jsontokens.TokenSigner('ES256k', transitPrivateKey);\n  var token = tokenSigner.sign(payload);\n\n  return token;\n}\n\n/**\n * Encrypts the private key for decryption by the given\n * public key.\n * @param  {String} publicKey  [description]\n * @param  {String} privateKey [description]\n * @return {String} hex encoded ciphertext\n * @private\n */\nfunction encryptPrivateKey(publicKey, privateKey) {\n  var encryptedObj = (0, _encryption.encryptECIES)(publicKey, privateKey);\n  var encryptedJSON = JSON.stringify(encryptedObj);\n  return new Buffer(encryptedJSON).toString('hex');\n}\n\n/**\n * Decrypts the hex encrypted private key\n * @param  {String} privateKey  the private key corresponding to the public\n * key for which the ciphertext was encrypted\n * @param  {String} hexedEncrypted the ciphertext\n * @return {String}  the decrypted private key\n * @throws {Error} if unable to decrypt\n *\n * @private\n */\nfunction decryptPrivateKey(privateKey, hexedEncrypted) {\n  var unhexedString = new Buffer(hexedEncrypted, 'hex').toString();\n  var encryptedObj = JSON.parse(unhexedString);\n  var decrypted = (0, _encryption.decryptECIES)(privateKey, encryptedObj);\n  if (typeof decrypted !== 'string') {\n    throw new Error('Unable to correctly decrypt private key');\n  } else {\n    return decrypted;\n  }\n}\n\n/**\n * Generates a signed authentication response token for an app. This\n * token is sent back to apps which use contents to access the\n * resources and data requested by the app.\n *\n * @param  {String} privateKey the identity key of the Blockstack ID generating\n * the authentication response\n * @param  {Object} profile the profile object for the Blockstack ID\n * @param  {String} username the username of the Blockstack ID if any, otherwise `null`\n * @param  {AuthMetadata} metadata an object containing metadata sent as part of the authentication\n * response including `email` if requested and available and a URL to the profile\n * @param  {String} coreToken core session token when responding to a legacy auth request\n * or `null` for current direct to gaia authentication requests\n * @param  {String} appPrivateKey the application private key. This private key is\n * unique and specific for every Blockstack ID and application combination.\n * @param  {Number} expiresAt an integer in the same format as\n * `new Date().getTime()`, milliseconds since the Unix epoch\n * @param {String} transitPublicKey the public key provide by the app\n * in its authentication request with which secrets will be encrypted\n * @param {String} hubUrl URL to the write path of the user's Gaia hub\n * @param {String} blockstackAPIUrl URL to the API endpoint to use\n * @param {String} associationToken JWT that binds the app key to the identity key\n * @return {String} signed and encoded authentication response token\n * @private\n */\nfunction makeAuthResponse(privateKey) {\n  var profile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var username = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var metadata = arguments[3];\n  var coreToken = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var appPrivateKey = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var expiresAt = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : (0, _index.nextMonth)().getTime();\n  var transitPublicKey = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  var hubUrl = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n  var blockstackAPIUrl = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : null;\n  var associationToken = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : null;\n\n  /* Convert the private key to a public key to an issuer */\n  var publicKey = _jsontokens.SECP256K1Client.derivePublicKey(privateKey);\n  var address = (0, _index.publicKeyToAddress)(publicKey);\n\n  /* See if we should encrypt with the transit key */\n  var privateKeyPayload = appPrivateKey;\n  var coreTokenPayload = coreToken;\n  var additionalProperties = {};\n  if (appPrivateKey !== undefined && appPrivateKey !== null) {\n    _logger.Logger.info('blockstack.js: generating v' + VERSION + ' auth response');\n    if (transitPublicKey !== undefined && transitPublicKey !== null) {\n      privateKeyPayload = encryptPrivateKey(transitPublicKey, appPrivateKey);\n      if (coreToken !== undefined && coreToken !== null) {\n        coreTokenPayload = encryptPrivateKey(transitPublicKey, coreToken);\n      }\n    }\n    additionalProperties = {\n      email: metadata.email ? metadata.email : null,\n      profile_url: metadata.profileUrl ? metadata.profileUrl : null,\n      hubUrl: hubUrl,\n      blockstackAPIUrl: blockstackAPIUrl,\n      associationToken: associationToken,\n      version: VERSION\n    };\n  } else {\n    _logger.Logger.info('blockstack.js: generating legacy auth response');\n  }\n\n  /* Create the payload */\n  var payload = Object.assign({}, {\n    jti: (0, _index.makeUUID4)(),\n    iat: Math.floor(new Date().getTime() / 1000), // JWT times are in seconds\n    exp: Math.floor(expiresAt / 1000), // JWT times are in seconds\n    iss: (0, _index.makeDIDFromAddress)(address),\n    private_key: privateKeyPayload,\n    public_keys: [publicKey],\n    profile: profile,\n    username: username,\n    core_token: coreTokenPayload\n  }, additionalProperties);\n\n  /* Sign and return the token */\n  var tokenSigner = new _jsontokens.TokenSigner('ES256k', privateKey);\n  return tokenSigner.sign(payload);\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","encryptPrivateKey","publicKey","privateKey","encryptedObj","_encryption","encryptECIES","encryptedJSON","JSON","stringify","toString","Buffer","Object","defineProperty","value","makeAuthRequest","transitPrivateKey","arguments","length","undefined","_index","generateAndStoreTransitKey","redirectURI","window","location","origin","manifestURI","scopes","_authConstants","DEFAULT_SCOPE","appDomain","expiresAt","nextHour","getTime","payload","assign","extraParams","jti","makeUUID4","iat","Math","floor","Date","exp","iss","public_keys","domain_name","manifest_uri","redirect_uri","version","VERSION","do_not_include_profile","supports_hub_url","_logger","Logger","info","_jsontokens","SECP256K1Client","derivePublicKey","address","publicKeyToAddress","makeDIDFromAddress","sign","tokenSigner","TokenSigner","token","decryptPrivateKey","hexedEncrypted","unhexedString","parse","decrypted","decryptECIES","Error","makeAuthResponse","profile","username","metadata","coreToken","appPrivateKey","nextMonth","transitPublicKey","hubUrl","blockstackAPIUrl","associationToken","privateKeyPayload","coreTokenPayload","additionalProperties","email","profile_url","profileUrl","private_key","core_token"]
}
