shadow$provide.module$node_modules$blockstack$lib$profiles$profileSchemas$personZoneFiles=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,"__esModule",{value:!0});exports.resolveZoneFileToPerson=function(zoneFile,publicKeyOrAddress,callback){var zoneFileJson=null;try{if(zoneFileJson=(0,_zoneFile.parseZoneFile)(zoneFile),!zoneFileJson.hasOwnProperty("$origin"))throw zoneFileJson=null,Error("zone file is missing an origin");}catch(e){console.error(e)}var tokenFileUrl=
null;if(zoneFileJson&&0<Object.keys(zoneFileJson).length)(tokenFileUrl=(0,_profileZoneFiles.getTokenFileUrl)(zoneFileJson))?fetch(tokenFileUrl).then(function(response){return response.text()}).then(function(responseText){return JSON.parse(responseText)}).then(function(responseJson){responseJson=responseJson[0].token;responseJson=(0,_profileTokens.extractProfile)(responseJson,publicKeyOrAddress);callback(responseJson)}).catch(function(error){console.warn(error)}):(console.warn("Token file url not found"),
callback({}));else{zoneFileJson=null;try{zoneFileJson=JSON.parse(zoneFile),zoneFileJson=_person.Person.fromLegacyFormat(zoneFileJson).profile()}catch(error){console.warn(error)}callback(zoneFileJson)}};var _zoneFile=require("module$node_modules$zone_file$lib$index"),_person=require("module$node_modules$blockstack$lib$profiles$profileSchemas$person"),_profileZoneFiles=require("module$node_modules$blockstack$lib$profiles$profileZoneFiles"),_profileTokens=require("module$node_modules$blockstack$lib$profiles$profileTokens")}
//# sourceMappingURL=module$node_modules$blockstack$lib$profiles$profileSchemas$personZoneFiles.js.map
