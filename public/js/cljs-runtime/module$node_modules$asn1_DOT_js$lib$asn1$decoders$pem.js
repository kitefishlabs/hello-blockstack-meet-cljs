shadow$provide.module$node_modules$asn1_DOT_js$lib$asn1$decoders$pem=function(global,process,require,module,exports,shadow$shims){function PEMDecoder(entity){DERDecoder.call(this,entity);this.enc="pem"}global=require("module$node_modules$inherits$inherits_browser");var Buffer=require("module$node_modules$buffer$index").Buffer,DERDecoder=require("module$node_modules$asn1_DOT_js$lib$asn1$decoders$der");global(PEMDecoder,DERDecoder);module.exports=PEMDecoder;PEMDecoder.prototype.decode=function(data,
options){data=data.toString().split(/[\r\n]+/g);for(var label=options.label.toUpperCase(),re=/^-----(BEGIN|END) ([^-]+)-----$/,start=-1,end=-1,i=0;i<data.length;i++){var match=data[i].match(re);if(null!==match&&match[2]===label)if(-1===start){if("BEGIN"!==match[1])break;start=i}else{if("END"!==match[1])break;end=i;break}}if(-1===start||-1===end)throw Error("PEM section not found for: "+label);data=data.slice(start+1,end).join("");data.replace(/[^a-z0-9\+\/=]+/gi,"");data=new Buffer(data,"base64");
return DERDecoder.prototype.decode.call(this,data,options)}}
//# sourceMappingURL=module$node_modules$asn1_DOT_js$lib$asn1$decoders$pem.js.map
