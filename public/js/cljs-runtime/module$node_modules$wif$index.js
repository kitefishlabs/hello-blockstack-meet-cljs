shadow$provide.module$node_modules$wif$index=function(global,process,require,module,exports,shadow$shims){function decodeRaw(buffer,version){if(void 0!==version&&buffer[0]!==version)throw Error("Invalid network version");if(33===buffer.length)return{version:buffer[0],privateKey:buffer.slice(1,33),compressed:!1};if(34!==buffer.length)throw Error("Invalid WIF length");if(1!==buffer[33])throw Error("Invalid compression flag");return{version:buffer[0],privateKey:buffer.slice(1,33),compressed:!0}}function encodeRaw(version,
privateKey,compressed){var result=new shadow$shims.Buffer(compressed?34:33);result.writeUInt8(version,0);privateKey.copy(result,1);compressed&&(result[33]=1);return result}var bs58check=require("module$node_modules$bs58check$index");module.exports={decode:function(string,version){return decodeRaw(bs58check.decode(string),version)},decodeRaw:decodeRaw,encode:function(version,privateKey,compressed){return"number"===typeof version?bs58check.encode(encodeRaw(version,privateKey,compressed)):bs58check.encode(encodeRaw(version.version,
version.privateKey,version.compressed))},encodeRaw:encodeRaw}}
//# sourceMappingURL=module$node_modules$wif$index.js.map
