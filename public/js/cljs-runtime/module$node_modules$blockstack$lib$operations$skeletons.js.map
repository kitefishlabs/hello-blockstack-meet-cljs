{
"version":3,
"file":"module$node_modules$blockstack$lib$operations$skeletons.js",
"lineCount":29,
"mappings":"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",
"sources":["node_modules/blockstack/lib/operations/skeletons.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$operations$skeletons\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlockstackNamespace = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.makePreorderSkeleton = makePreorderSkeleton;\nexports.makeRegisterSkeleton = makeRegisterSkeleton;\nexports.makeRenewalSkeleton = makeRenewalSkeleton;\nexports.makeTransferSkeleton = makeTransferSkeleton;\nexports.makeUpdateSkeleton = makeUpdateSkeleton;\nexports.makeRevokeSkeleton = makeRevokeSkeleton;\nexports.makeNamespacePreorderSkeleton = makeNamespacePreorderSkeleton;\nexports.makeNamespaceRevealSkeleton = makeNamespaceRevealSkeleton;\nexports.makeNamespaceReadySkeleton = makeNamespaceReadySkeleton;\nexports.makeNameImportSkeleton = makeNameImportSkeleton;\nexports.makeAnnounceSkeleton = makeAnnounceSkeleton;\nexports.makeTokenTransferSkeleton = makeTokenTransferSkeleton;\n\nvar _bitcoinjsLib = require('bitcoinjs-lib');\n\nvar _bitcoinjsLib2 = _interopRequireDefault(_bitcoinjsLib);\n\nvar _bigi = require('bigi');\n\nvar _bigi2 = _interopRequireDefault(_bigi);\n\nvar _utils = require('./utils');\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// todo : add name length / character verification\n\n// support v1 and v2 price API endpoint return values\nvar BlockstackNamespace = exports.BlockstackNamespace = function () {\n  function BlockstackNamespace(namespaceID) {\n    _classCallCheck(this, BlockstackNamespace);\n\n    if (namespaceID.length > 19) {\n      throw new Error('Namespace ID too long (19 chars max)');\n    }\n    if (!namespaceID.match('[0123456789abcdefghijklmnopqrstuvwxyz_-]+')) {\n      throw new Error('Namespace ID can only use characters 0123456789abcdefghijklmnopqrstuvwxyz-_');\n    }\n\n    this.namespaceID = namespaceID;\n    this.version = -1;\n    this.lifetime = -1;\n    this.coeff = -1;\n    this.base = -1;\n    this.buckets = [-1];\n    this.nonalphaDiscount = -1;\n    this.noVowelDiscount = -1;\n  }\n\n  _createClass(BlockstackNamespace, [{\n    key: 'check',\n    value: function check() {\n      try {\n        this.setVersion(this.version);\n        this.setLifetime(this.lifetime);\n        this.setCoeff(this.coeff);\n        this.setBase(this.base);\n        this.setBuckets(this.buckets);\n        this.setNonalphaDiscount(this.nonalphaDiscount);\n        this.setNoVowelDiscount(this.noVowelDiscount);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: 'setVersion',\n    value: function setVersion(version) {\n      if (version < 0 || version > Math.pow(2, 16) - 1) {\n        throw new Error('Invalid version: must be a 16-bit number');\n      }\n      this.version = version;\n    }\n  }, {\n    key: 'setLifetime',\n    value: function setLifetime(lifetime) {\n      if (lifetime < 0 || lifetime > Math.pow(2, 32) - 1) {\n        throw new Error('Invalid lifetime: must be a 32-bit number');\n      }\n      this.lifetime = lifetime;\n    }\n  }, {\n    key: 'setCoeff',\n    value: function setCoeff(coeff) {\n      if (coeff < 0 || coeff > 255) {\n        throw new Error('Invalid coeff: must be an 8-bit number');\n      }\n      this.coeff = coeff;\n    }\n  }, {\n    key: 'setBase',\n    value: function setBase(base) {\n      if (base < 0 || base > 255) {\n        throw new Error('Invalid base: must be an 8-bit number');\n      }\n      this.base = base;\n    }\n  }, {\n    key: 'setBuckets',\n    value: function setBuckets(buckets) {\n      if (buckets.length !== 16) {\n        throw new Error('Invalid buckets: must have 16 entries');\n      }\n\n      for (var i = 0; i < buckets.length; i++) {\n        if (buckets[i] < 0 || buckets[i] > 15) {\n          throw new Error('Invalid buckets: must be 4-bit numbers');\n        }\n      }\n\n      this.buckets = buckets.slice(0);\n    }\n  }, {\n    key: 'setNonalphaDiscount',\n    value: function setNonalphaDiscount(nonalphaDiscount) {\n      if (nonalphaDiscount <= 0 || nonalphaDiscount > 15) {\n        throw new Error('Invalid nonalphaDiscount: must be a positive 4-bit number');\n      }\n      this.nonalphaDiscount = nonalphaDiscount;\n    }\n  }, {\n    key: 'setNoVowelDiscount',\n    value: function setNoVowelDiscount(noVowelDiscount) {\n      if (noVowelDiscount <= 0 || noVowelDiscount > 15) {\n        throw new Error('Invalid noVowelDiscount: must be a positive 4-bit number');\n      }\n      this.noVowelDiscount = noVowelDiscount;\n    }\n  }, {\n    key: 'toHexPayload',\n    value: function toHexPayload() {\n      var lifeHex = ('00000000' + this.lifetime.toString(16)).slice(-8);\n      var coeffHex = ('00' + this.coeff.toString(16)).slice(-2);\n      var baseHex = ('00' + this.base.toString(16)).slice(-2);\n      var bucketHex = this.buckets.map(function (b) {\n        return b.toString(16);\n      }).reduce(function (b1, b2) {\n        return b1 + b2;\n      }, '');\n      var discountHex = this.nonalphaDiscount.toString(16) + this.noVowelDiscount.toString(16);\n      var versionHex = ('0000' + this.version.toString(16)).slice(-4);\n      var namespaceIDHex = new Buffer(this.namespaceID).toString('hex');\n\n      return lifeHex + coeffHex + baseHex + bucketHex + discountHex + versionHex + namespaceIDHex;\n    }\n  }]);\n\n  return BlockstackNamespace;\n}();\n\nfunction asAmountV2(amount) {\n  // convert an AmountType v1 or v2 to an AmountTypeV2.\n  // the \"units\" of a v1 amount type are always 'BTC'\n  if (typeof amount === 'number') {\n    return { units: 'BTC', amount: _bigi2.default.fromByteArrayUnsigned(String(amount)) };\n  } else {\n    return { units: amount.units, amount: amount.amount };\n  }\n}\n\nfunction makeTXbuilder() {\n  var txb = new _bitcoinjsLib2.default.TransactionBuilder(_config.config.network.layer1);\n  txb.setVersion(1);\n  return txb;\n}\n\nfunction opEncode(opcode) {\n  // NOTE: must *always* a 3-character string\n  var res = '' + _config.config.network.MAGIC_BYTES + opcode;\n  if (res.length !== 3) {\n    throw new Error('Runtime error: invalid MAGIC_BYTES');\n  }\n  return res;\n}\n\nfunction makePreorderSkeleton(fullyQualifiedName, consensusHash, preorderAddress, burnAddress, burn) {\n  var registerAddress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n  // Returns a preorder tx skeleton.\n  //   with 3 outputs : 1. the Blockstack Preorder OP_RETURN data\n  //                    2. the Preorder's change address (5500 satoshi minimum)\n  //                    3. the BURN\n  //\n  // 0     2  3                                     23             39          47            66\n  // |-----|--|--------------------------------------|--------------|-----------|-------------|\n  // magic op  hash160(fqn,scriptPubkey,registerAddr) consensus hash token burn  token type\n  //                                                                 (optional)   (optional)\n  //\n  // output 0: name preorder code\n  // output 1: preorder address\n  // output 2: burn address\n  //\n  // Returns an unsigned serialized transaction.\n  var burnAmount = asAmountV2(burn);\n  var network = _config.config.network;\n  var nameBuff = Buffer.from((0, _utils.decodeB40)(fullyQualifiedName), 'hex'); // base40\n  var scriptPublicKey = _bitcoinjsLib2.default.address.toOutputScript(preorderAddress, network.layer1);\n\n  var dataBuffers = [nameBuff, scriptPublicKey];\n\n  if (!!registerAddress) {\n    var registerBuff = Buffer.from(registerAddress, 'ascii');\n    dataBuffers.push(registerBuff);\n  }\n\n  var dataBuff = Buffer.concat(dataBuffers);\n\n  var hashed = (0, _utils.hash160)(dataBuff);\n\n  var opReturnBufferLen = burnAmount.units === 'BTC' ? 39 : 66;\n  var opReturnBuffer = Buffer.alloc(opReturnBufferLen);\n  opReturnBuffer.write(opEncode('?'), 0, 3, 'ascii');\n  hashed.copy(opReturnBuffer, 3);\n  opReturnBuffer.write(consensusHash, 23, 16, 'hex');\n\n  if (burnAmount.units !== 'BTC') {\n    var burnHex = burnAmount.amount.toHex();\n    if (burnHex.length > 16) {\n      // exceeds 2**64; can't fit\n      throw new Error('Cannot preorder \\'' + fullyQualifiedName + '\\': cannot fit price into 8 bytes');\n    }\n    var paddedBurnHex = ('0000000000000000' + burnHex).slice(-16);\n\n    opReturnBuffer.write(paddedBurnHex, 39, 8, 'hex');\n    opReturnBuffer.write(burnAmount.units, 47, burnAmount.units.length, 'ascii');\n  }\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n  tx.addOutput(preorderAddress, _utils.DUST_MINIMUM);\n\n  if (burnAmount.units === 'BTC') {\n    var btcBurnAmount = parseInt(burnAmount.amount.toHex(), 16);\n    tx.addOutput(burnAddress, btcBurnAmount);\n  } else {\n    tx.addOutput(burnAddress, _utils.DUST_MINIMUM);\n  }\n\n  return tx.buildIncomplete();\n}\n\nfunction makeRegisterSkeleton(fullyQualifiedName, ownerAddress) {\n  var valueHash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var burnTokenAmountHex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  // Returns a register tx skeleton.\n  //   with 2 outputs : 1. The register OP_RETURN\n  //                    2. The owner address (can be different from REGISTER address on renewals)\n\n  // You MUST make the first input a UTXO from the current OWNER *or* the\n  //   funder of the PREORDER\n\n  // in the case of a renewal, this would need to be modified to include a change address\n  //  as output (3) before the burn output (4)\n\n  /*\n    Formats\n     No zonefile hash, and pay with BTC:\n     0    2  3                                  39\n    |----|--|----------------------------------|\n    magic op   name.ns_id (up to 37 bytes)\n      With zonefile hash, and pay with BTC:\n     0    2  3                                  39                  59\n    |----|--|----------------------------------|-------------------|\n    magic op   name.ns_id (37 bytes, 0-padded)     zone file hash\n     output 0: name registration code\n    output 1: owner address\n  */\n\n  var payload = void 0;\n\n  if (!!burnTokenAmountHex && !valueHash) {\n    // empty value hash\n    valueHash = '0000000000000000000000000000000000000000';\n  }\n\n  if (!!valueHash) {\n    if (valueHash.length !== 40) {\n      throw new Error('Value hash length incorrect. Expecting 20-bytes, hex-encoded');\n    }\n    if (!!burnTokenAmountHex) {\n      if (burnTokenAmountHex.length !== 16) {\n        throw new Error('Burn field length incorrect.  Expecting 8-bytes, hex-encoded');\n      }\n    }\n\n    var payloadLen = burnTokenAmountHex ? 65 : 57;\n    payload = Buffer.alloc(payloadLen, 0);\n    payload.write(fullyQualifiedName, 0, 37, 'ascii');\n    payload.write(valueHash, 37, 20, 'hex');\n    if (!!burnTokenAmountHex) {\n      payload.write(burnTokenAmountHex, 57, 8, 'hex');\n    }\n  } else {\n    payload = Buffer.from(fullyQualifiedName, 'ascii');\n  }\n\n  var opReturnBuffer = Buffer.concat([Buffer.from(opEncode(':'), 'ascii'), payload]);\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n  tx.addOutput(ownerAddress, _utils.DUST_MINIMUM);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeRenewalSkeleton(fullyQualifiedName, nextOwnerAddress, lastOwnerAddress, burnAddress, burn) {\n  var valueHash = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n  /*\n    Formats\n     No zonefile hash, and pay with BTC:\n     0    2  3                                  39\n    |----|--|----------------------------------|\n    magic op   name.ns_id (up to 37 bytes)\n      With zonefile hash, and pay with BTC:\n     0    2  3                                  39                  59\n    |----|--|----------------------------------|-------------------|\n    magic op   name.ns_id (37 bytes, 0-padded)     zone file hash\n     With renewal payment in a token:\n   (for register, tokens burned is not included)\n   (for renew, tokens burned is the number of tokens to burn)\n    0    2  3                                  39                  59                            67\n   |----|--|----------------------------------|-------------------|------------------------------|\n   magic op   name.ns_id (37 bytes, 0-padded)     zone file hash    tokens burned (big-endian)\n    output 0: renewal code\n   output 1: new owner address\n   output 2: current owner address\n   output 3: burn address\n  */\n  var burnAmount = asAmountV2(burn);\n  var network = _config.config.network;\n  var burnTokenAmount = burnAmount.units === 'BTC' ? null : burnAmount.amount;\n  var burnBTCAmount = burnAmount.units === 'BTC' ? parseInt(burnAmount.amount.toHex(), 16) : _utils.DUST_MINIMUM;\n\n  var burnTokenHex = null;\n  if (!!burnTokenAmount) {\n    var burnHex = burnTokenAmount.toHex();\n    if (burnHex.length > 16) {\n      // exceeds 2**64; can't fit \n      throw new Error('Cannot renew \\'' + fullyQualifiedName + '\\': cannot fit price into 8 bytes');\n    }\n    burnTokenHex = ('0000000000000000' + burnHex).slice(-16);\n  }\n\n  var registerTX = makeRegisterSkeleton(fullyQualifiedName, nextOwnerAddress, valueHash, burnTokenHex);\n  var txB = _bitcoinjsLib2.default.TransactionBuilder.fromTransaction(registerTX, network.layer1);\n  txB.addOutput(lastOwnerAddress, _utils.DUST_MINIMUM);\n  txB.addOutput(burnAddress, burnBTCAmount);\n  return txB.buildIncomplete();\n}\n\nfunction makeTransferSkeleton(fullyQualifiedName, consensusHash, newOwner) {\n  var keepZonefile = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // Returns a transfer tx skeleton.\n  //   with 2 outputs : 1. the Blockstack Transfer OP_RETURN data\n  //                    2. the new owner with a DUST_MINIMUM value (5500 satoshi)\n  //\n  // You MUST make the first input a UTXO from the current OWNER\n  //\n  // Returns an unsigned serialized transaction.\n  /*\n    Format\n     0     2  3    4                   20              36\n    |-----|--|----|-------------------|---------------|\n    magic op keep  hash128(name.ns_id) consensus hash\n             data?\n     output 0: transfer code\n    output 1: new owner\n  */\n  var opRet = Buffer.alloc(36);\n  var keepChar = '~';\n  if (keepZonefile) {\n    keepChar = '>';\n  }\n\n  opRet.write(opEncode('>'), 0, 3, 'ascii');\n  opRet.write(keepChar, 3, 1, 'ascii');\n\n  var hashed = (0, _utils.hash128)(Buffer.from(fullyQualifiedName, 'ascii'));\n  hashed.copy(opRet, 4);\n  opRet.write(consensusHash, 20, 16, 'hex');\n\n  var opRetPayload = _bitcoinjsLib2.default.payments.embed({ data: [opRet] }).output;\n\n  var tx = makeTXbuilder();\n\n  tx.addOutput(opRetPayload, 0);\n  tx.addOutput(newOwner, _utils.DUST_MINIMUM);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeUpdateSkeleton(fullyQualifiedName, consensusHash, valueHash) {\n  // Returns an update tx skeleton.\n  //   with 1 output : 1. the Blockstack update OP_RETURN\n  //\n  // You MUST make the first input a UTXO from the current OWNER\n  //\n  // Returns an unsigned serialized transaction.\n  //\n  // output 0: the revoke code\n  /*\n    Format:\n     0     2  3                                   19                      39\n    |-----|--|-----------------------------------|-----------------------|\n    magic op  hash128(name.ns_id,consensus hash) hash160(data)\n     output 0: update code\n  */\n\n  var opRet = Buffer.alloc(39);\n\n  var nameBuff = Buffer.from(fullyQualifiedName, 'ascii');\n  var consensusBuff = Buffer.from(consensusHash, 'ascii');\n\n  var hashedName = (0, _utils.hash128)(Buffer.concat([nameBuff, consensusBuff]));\n\n  opRet.write(opEncode('+'), 0, 3, 'ascii');\n  hashedName.copy(opRet, 3);\n  opRet.write(valueHash, 19, 20, 'hex');\n\n  var opRetPayload = _bitcoinjsLib2.default.payments.embed({ data: [opRet] }).output;\n\n  var tx = makeTXbuilder();\n\n  tx.addOutput(opRetPayload, 0);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeRevokeSkeleton(fullyQualifiedName) {\n  // Returns a revoke tx skeleton\n  //    with 1 output: 1. the Blockstack revoke OP_RETURN\n  //\n  // You MUST make the first input a UTXO from the current OWNER\n  //\n  // Returns an unsigned serialized transaction\n  /*\n   Format:\n    0    2  3                             39\n   |----|--|-----------------------------|\n   magic op   name.ns_id (37 bytes)\n    output 0: the revoke code\n  */\n\n  var opRet = Buffer.alloc(3);\n\n  var nameBuff = Buffer.from(fullyQualifiedName, 'ascii');\n\n  opRet.write(opEncode('~'), 0, 3, 'ascii');\n\n  var opReturnBuffer = Buffer.concat([opRet, nameBuff]);\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeNamespacePreorderSkeleton(namespaceID, consensusHash, preorderAddress, registerAddress, burn) {\n  // Returns a namespace preorder tx skeleton.\n  // Returns an unsigned serialized transaction.\n  /*\n   Formats:\n    Without STACKS:\n    0     2   3                                      23               39\n   |-----|---|--------------------------------------|----------------|\n   magic op  hash(ns_id,script_pubkey,reveal_addr)   consensus hash\n     with STACKs:\n    0     2   3                                      23               39                         47\n   |-----|---|--------------------------------------|----------------|--------------------------|\n   magic op  hash(ns_id,script_pubkey,reveal_addr)   consensus hash    token fee (big-endian)\n    output 0: namespace preorder code\n   output 1: change address\n   otuput 2: burn address\n  */\n\n  var burnAmount = asAmountV2(burn);\n  if (burnAmount.units !== 'BTC' && burnAmount.units !== 'STACKS') {\n    throw new Error('Invalid burnUnits ' + burnAmount.units);\n  }\n\n  var network = _config.config.network;\n  var burnAddress = network.getDefaultBurnAddress();\n  var namespaceIDBuff = Buffer.from((0, _utils.decodeB40)(namespaceID), 'hex'); // base40\n  var scriptPublicKey = _bitcoinjsLib2.default.address.toOutputScript(preorderAddress, network.layer1);\n  var registerBuff = Buffer.from(registerAddress, 'ascii');\n\n  var dataBuffers = [namespaceIDBuff, scriptPublicKey, registerBuff];\n  var dataBuff = Buffer.concat(dataBuffers);\n\n  var hashed = (0, _utils.hash160)(dataBuff);\n\n  var btcBurnAmount = _utils.DUST_MINIMUM;\n  var opReturnBufferLen = 39;\n  if (burnAmount.units === 'STACKS') {\n    opReturnBufferLen = 47;\n  } else {\n    btcBurnAmount = parseInt(burnAmount.amount.toHex(), 16);\n  }\n\n  var opReturnBuffer = Buffer.alloc(opReturnBufferLen);\n  opReturnBuffer.write(opEncode('*'), 0, 3, 'ascii');\n  hashed.copy(opReturnBuffer, 3);\n  opReturnBuffer.write(consensusHash, 23, 16, 'hex');\n\n  if (burnAmount.units === 'STACKS') {\n    var burnHex = burnAmount.amount.toHex();\n    var paddedBurnHex = ('0000000000000000' + burnHex).slice(-16);\n    opReturnBuffer.write(paddedBurnHex, 39, 8, 'hex');\n  }\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n  tx.addOutput(preorderAddress, _utils.DUST_MINIMUM);\n  tx.addOutput(burnAddress, btcBurnAmount);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeNamespaceRevealSkeleton(namespace, revealAddress) {\n  /*\n   Format:\n    0     2   3    7     8     9    10   11   12   13   14    15    16    17       18      20     39\n   |-----|---|----|-----|-----|----|----|----|----|----|-----|-----|-----|--------|-------|-------|\n   magic  op  life coeff. base 1-2  3-4  5-6  7-8  9-10 11-12 13-14 15-16 nonalpha version  ns ID\n                                                  bucket exponents        no-vowel\n                                                                          discounts\n   \n   output 0: namespace reveal code\n   output 1: reveal address\n  */\n  var hexPayload = namespace.toHexPayload();\n\n  var opReturnBuffer = Buffer.alloc(3 + hexPayload.length / 2);\n  opReturnBuffer.write(opEncode('&'), 0, 3, 'ascii');\n  opReturnBuffer.write(hexPayload, 3, hexPayload.length / 2, 'hex');\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n  tx.addOutput(revealAddress, _utils.DUST_MINIMUM);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeNamespaceReadySkeleton(namespaceID) {\n  /*\n   Format:\n    0     2  3  4           23\n   |-----|--|--|------------|\n   magic op  .  ns_id\n    output 0: namespace ready code\n   */\n  var opReturnBuffer = Buffer.alloc(3 + namespaceID.length + 1);\n  opReturnBuffer.write(opEncode('!'), 0, 3, 'ascii');\n  opReturnBuffer.write('.' + namespaceID, 3, namespaceID.length + 1, 'ascii');\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeNameImportSkeleton(name, recipientAddr, zonefileHash) {\n  /*\n   Format:\n     0    2  3                             39\n    |----|--|-----------------------------|\n    magic op   name.ns_id (37 bytes)\n    Output 0: the OP_RETURN\n   Output 1: the recipient\n   Output 2: the zonefile hash\n  */\n  if (zonefileHash.length !== 40) {\n    throw new Error('Invalid zonefile hash: must be 20 bytes hex-encoded');\n  }\n\n  var network = _config.config.network;\n  var opReturnBuffer = Buffer.alloc(3 + name.length);\n  opReturnBuffer.write(opEncode(';'), 0, 3, 'ascii');\n  opReturnBuffer.write(name, 3, name.length, 'ascii');\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n\n  var tx = makeTXbuilder();\n  var zonefileHashB58 = _bitcoinjsLib2.default.address.toBase58Check(new Buffer(zonefileHash, 'hex'), network.layer1.pubKeyHash);\n\n  tx.addOutput(nullOutput, 0);\n  tx.addOutput(recipientAddr, _utils.DUST_MINIMUM);\n  tx.addOutput(zonefileHashB58, _utils.DUST_MINIMUM);\n\n  return tx.buildIncomplete();\n}\n\nfunction makeAnnounceSkeleton(messageHash) {\n  /*\n    Format:\n     0    2  3                             23\n    |----|--|-----------------------------|\n    magic op   message hash (160-bit)\n     output 0: the OP_RETURN\n  */\n  if (messageHash.length !== 40) {\n    throw new Error('Invalid message hash: must be 20 bytes hex-encoded');\n  }\n\n  var opReturnBuffer = Buffer.alloc(3 + messageHash.length / 2);\n  opReturnBuffer.write(opEncode('#'), 0, 3, 'ascii');\n  opReturnBuffer.write(messageHash, 3, messageHash.length / 2, 'hex');\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n  return tx.buildIncomplete();\n}\n\nfunction makeTokenTransferSkeleton(recipientAddress, consensusHash, tokenType, tokenAmount, scratchArea) {\n  /*\n   Format:\n     0     2  3              19         38          46                        80\n    |-----|--|--------------|----------|-----------|-------------------------|\n    magic op  consensus_hash token_type amount (BE) scratch area\n                             (ns_id)\n     output 0: token transfer code\n    output 1: recipient address\n  */\n  if (scratchArea.length > 34) {\n    throw new Error('Invalid scratch area: must be no more than 34 bytes');\n  }\n\n  var opReturnBuffer = Buffer.alloc(46 + scratchArea.length);\n\n  var tokenTypeHex = new Buffer(tokenType).toString('hex');\n  var tokenTypeHexPadded = ('00000000000000000000000000000000000000' + tokenTypeHex).slice(-38);\n\n  var tokenValueHex = tokenAmount.toHex();\n\n  if (tokenValueHex.length > 16) {\n    // exceeds 2**64; can't fit\n    throw new Error('Cannot send tokens: cannot fit ' + tokenAmount.toString() + ' into 8 bytes');\n  }\n\n  var tokenValueHexPadded = ('0000000000000000' + tokenValueHex).slice(-16);\n\n  opReturnBuffer.write(opEncode('$'), 0, 3, 'ascii');\n  opReturnBuffer.write(consensusHash, 3, consensusHash.length / 2, 'hex');\n  opReturnBuffer.write(tokenTypeHexPadded, 19, tokenTypeHexPadded.length / 2, 'hex');\n  opReturnBuffer.write(tokenValueHexPadded, 38, tokenValueHexPadded.length / 2, 'hex');\n  opReturnBuffer.write(scratchArea, 46, scratchArea.length, 'ascii');\n\n  var nullOutput = _bitcoinjsLib2.default.payments.embed({ data: [opReturnBuffer] }).output;\n  var tx = makeTXbuilder();\n\n  tx.addOutput(nullOutput, 0);\n  tx.addOutput(recipientAddress, _utils.DUST_MINIMUM);\n\n  return tx.buildIncomplete();\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","asAmountV2","amount","units","_bigi2","default","fromByteArrayUnsigned","String","makeTXbuilder","txb","_bitcoinjsLib2","TransactionBuilder","_config","config","network","layer1","setVersion","opEncode","opcode","res","MAGIC_BYTES","length","Error","makeRegisterSkeleton","fullyQualifiedName","ownerAddress","valueHash","arguments","undefined","burnTokenAmountHex","payload","Buffer","alloc","payloadLen","write","from","opReturnBuffer","concat","nullOutput","payments","embed","data","output","tx","addOutput","_utils","DUST_MINIMUM","buildIncomplete","Object","defineProperty","value","BlockstackNamespace","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","makePreorderSkeleton","consensusHash","preorderAddress","burnAddress","burn","registerAddress","burnAmount","nameBuff","decodeB40","scriptPublicKey","address","toOutputScript","dataBuffers","registerBuff","push","dataBuff","hashed","hash160","opReturnBufferLen","copy","burnHex","toHex","paddedBurnHex","slice","btcBurnAmount","parseInt","makeRenewalSkeleton","nextOwnerAddress","lastOwnerAddress","burnTokenAmount","burnBTCAmount","burnTokenHex","registerTX","txB","fromTransaction","makeTransferSkeleton","newOwner","keepZonefile","opRet","keepChar","hash128","opRetPayload","makeUpdateSkeleton","consensusBuff","hashedName","makeRevokeSkeleton","makeNamespacePreorderSkeleton","namespaceID","getDefaultBurnAddress","namespaceIDBuff","makeNamespaceRevealSkeleton","namespace","revealAddress","hexPayload","toHexPayload","makeNamespaceReadySkeleton","makeNameImportSkeleton","name","recipientAddr","zonefileHash","zonefileHashB58","toBase58Check","pubKeyHash","makeAnnounceSkeleton","messageHash","makeTokenTransferSkeleton","recipientAddress","tokenType","tokenAmount","scratchArea","tokenTypeHexPadded","toString","tokenTypeHex","tokenValueHex","tokenValueHexPadded","_bitcoinjsLib","__esModule","_bigi","instance","TypeError","match","base","coeff","lifetime","version","buckets","noVowelDiscount","nonalphaDiscount","check","setLifetime","setCoeff","setBase","setBuckets","setNonalphaDiscount","setNoVowelDiscount","e","Math","pow","lifeHex","coeffHex","baseHex","bucketHex","map","b","reduce","b1","b2","discountHex","versionHex","namespaceIDHex"]
}
