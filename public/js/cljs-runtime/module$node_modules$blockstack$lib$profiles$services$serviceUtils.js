shadow$provide.module$node_modules$blockstack$lib$profiles$services$serviceUtils=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,"__esModule",{value:!0});exports.containsValidProofStatement=function(searchText){var name=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;if(!name)return!1;searchText=searchText.toLowerCase();if(2>name.split(".").length)throw Error("Please provide the fully qualified Blockstack name.");var username=null;name.endsWith(".id")&&
(username=name.split(".id")[0]);name=null!=username?["verifying myself: my bitcoin username is +"+username,"verifying myself: my bitcoin username is "+username,"verifying myself: my openname is "+username,"verifying that +"+username+" is my bitcoin username","verifying that "+username+" is my bitcoin username","verifying that "+username+" is my openname","verifying that +"+username+" is my openname","verifying i am +"+username+" on my passcard","verifying that +"+username+" is my blockchain id",'verifying that "'+
name+'" is my blockstack id',"verifying that "+name+" is my blockstack id","verifying that \x26quot;"+name+"\x26quot; is my blockstack id"]:['verifying that "'+name+'" is my blockstack id',"verifying that "+name+" is my blockstack id","verifying that \x26quot;"+name+"\x26quot; is my blockstack id"];for(var i=0;i<name.length;i++)if(searchText.includes(name[i]))return!0;return null!=username&&searchText.includes("verifymyonename")&&searchText.includes("+"+username)?!0:!1};exports.containsValidAddressProofStatement=
function(proofStatement,address){proofStatement=proofStatement.split(address)[0].toLowerCase()+address;address=["verifying my blockstack id is secured with the address "+address];for(var i=0;i<address.length;i++)if(proofStatement.includes(address[i]))return!0;return!1}}
//# sourceMappingURL=module$node_modules$blockstack$lib$profiles$services$serviceUtils.js.map
