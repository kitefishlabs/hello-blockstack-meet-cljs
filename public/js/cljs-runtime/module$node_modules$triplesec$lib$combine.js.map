{
"version":3,
"file":"module$node_modules$triplesec$lib$combine.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/triplesec/lib/combine.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$triplesec$lib$combine\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var CombineBase, Concat, HMAC, SHA3, SHA512, WordArray, XOR, bulk_sign, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('./hmac'), HMAC = _ref.HMAC, bulk_sign = _ref.bulk_sign;\n\n  SHA512 = require('./sha512').SHA512;\n\n  SHA3 = require('./sha3').SHA3;\n\n  WordArray = require('./wordarray').WordArray;\n\n  CombineBase = (function() {\n    function CombineBase() {\n      this.hasherBlockSize = this.hashers[0].hasherBlockSize;\n      this.hasherBlockSizeBytes = this.hasherBlockSize * 4;\n      this.reset();\n    }\n\n    CombineBase.prototype.reset = function() {\n      var h, _i, _len, _ref1;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.reset();\n      }\n      return this;\n    };\n\n    CombineBase.prototype.update = function(w) {\n      var h, _i, _len, _ref1;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.update(w);\n      }\n      return this;\n    };\n\n    CombineBase.prototype.scrub = function() {\n      var h, _i, _len, _ref1;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.scrub();\n      }\n      return this;\n    };\n\n    CombineBase.prototype.finalize = function(w) {\n      var h, hashes, out, _i, _len, _ref1;\n      hashes = (function() {\n        var _i, _len, _ref1, _results;\n        _ref1 = this.hashers;\n        _results = [];\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          h = _ref1[_i];\n          _results.push(h.finalize(w));\n        }\n        return _results;\n      }).call(this);\n      out = hashes[0];\n      _ref1 = hashes.slice(1);\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        this._coalesce(out, h);\n        h.scrub();\n      }\n      return out;\n    };\n\n    return CombineBase;\n\n  })();\n\n  Concat = (function(_super) {\n    __extends(Concat, _super);\n\n    function Concat(key, klasses) {\n      var hm, i, klass, subkey, subkeys;\n      if (klasses == null) {\n        klasses = [SHA512, SHA3];\n      }\n      subkeys = key.split(klasses.length);\n      this.hashers = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (i = _i = 0, _len = klasses.length; _i < _len; i = ++_i) {\n          klass = klasses[i];\n          subkey = subkeys[i];\n          hm = new HMAC(subkey, klass);\n          subkey.scrub();\n          _results.push(hm);\n        }\n        return _results;\n      })();\n      Concat.__super__.constructor.call(this);\n    }\n\n    Concat.get_output_size = function() {\n      return SHA512.output_size + SHA3.output_size;\n    };\n\n    Concat.prototype._coalesce = function(out, h) {\n      return out.concat(h);\n    };\n\n    Concat.prototype.get_output_size = function() {\n      var h, tot, _i, _len, _ref1;\n      tot = 0;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        tot += h.get_output_size();\n      }\n      return tot;\n    };\n\n    Concat.sign = function(_arg) {\n      var input, key;\n      key = _arg.key, input = _arg.input;\n      return (new Concat(key)).finalize(input);\n    };\n\n    Concat.bulk_sign = function(args, cb) {\n      args.klass = Concat;\n      args.what = \"HMAC-SHA512-SHA3\";\n      return bulk_sign(args, cb);\n    };\n\n    return Concat;\n\n  })(CombineBase);\n\n  XOR = (function(_super) {\n    __extends(XOR, _super);\n\n    function XOR(key, klasses) {\n      var klass;\n      if (klasses == null) {\n        klasses = [SHA512, SHA3];\n      }\n      this.hashers = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = klasses.length; _i < _len; _i++) {\n          klass = klasses[_i];\n          _results.push(new HMAC(key, klass));\n        }\n        return _results;\n      })();\n      XOR.__super__.constructor.call(this);\n    }\n\n    XOR.prototype.reset = function() {\n      var h, i, _i, _len, _ref1;\n      XOR.__super__.reset.call(this);\n      _ref1 = this.hashers;\n      for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {\n        h = _ref1[i];\n        h.update(new WordArray([i]));\n      }\n      return this;\n    };\n\n    XOR.get_output_size = function() {\n      return Math.max(SHA512.output_size, SHA3.output_size);\n    };\n\n    XOR.prototype._coalesce = function(out, h) {\n      return out.xor(h, {});\n    };\n\n    XOR.prototype.get_output_size = function() {\n      var h;\n      return Math.max.apply(Math, (function() {\n        var _i, _len, _ref1, _results;\n        _ref1 = this.hashers;\n        _results = [];\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          h = _ref1[_i];\n          _results.push(h.get_output_size());\n        }\n        return _results;\n      }).call(this));\n    };\n\n    XOR.sign = function(_arg) {\n      var input, key;\n      key = _arg.key, input = _arg.input;\n      return (new XOR(key)).finalize(input);\n    };\n\n    XOR.bulk_sign = function(arg, cb) {\n      arg.klass = XOR;\n      arg.what = \"HMAC-SHA512-XOR-SHA3\";\n      return bulk_sign(arg, cb);\n    };\n\n    return XOR;\n\n  })(CombineBase);\n\n  exports.Concat = Concat;\n\n  exports.XOR = XOR;\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__hasProp","hasOwnProperty","__extends","child","parent","ctor","constructor","key","call","prototype","__super__","_ref","HMAC","bulk_sign","SHA512","SHA3","WordArray","CombineBase","hasherBlockSize","hashers","hasherBlockSizeBytes","reset","CombineBase.prototype.reset","_len","_ref1","_i","length","h","update","CombineBase.prototype.update","w","scrub","CombineBase.prototype.scrub","finalize","CombineBase.prototype.finalize","_results","push","out","slice","_coalesce","Concat","_super","klasses","subkeys","split","i","klass","subkey","hm","get_output_size","Concat.get_output_size","output_size","Concat.prototype._coalesce","concat","Concat.prototype.get_output_size","tot","sign","Concat.sign","_arg","input","Concat.bulk_sign","args","cb","what","XOR","XOR.prototype.reset","XOR.get_output_size","Math","max","XOR.prototype._coalesce","xor","XOR.prototype.get_output_size","apply","XOR.sign","XOR.bulk_sign","arg"]
}
