{
"version":3,
"file":"module$node_modules$blockstack$lib$network.js",
"lineCount":50,
"mappings":"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",
"sources":["node_modules/blockstack/lib/network.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$network\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.network = exports.BlockchainInfoApi = exports.InsightClient = exports.BitcoindAPI = exports.LocalRegtest = exports.BlockstackNetwork = exports.BitcoinNetwork = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bitcoinjsLib = require('bitcoinjs-lib');\n\nvar _bitcoinjsLib2 = _interopRequireDefault(_bitcoinjsLib);\n\nvar _formData = require('form-data');\n\nvar _formData2 = _interopRequireDefault(_formData);\n\nvar _bigi = require('bigi');\n\nvar _bigi2 = _interopRequireDefault(_bigi);\n\nvar _ripemd = require('ripemd160');\n\nvar _ripemd2 = _interopRequireDefault(_ripemd);\n\nvar _errors = require('./errors');\n\nvar _logger = require('./logger');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SATOSHIS_PER_BTC = 1e8;\nvar TX_BROADCAST_SERVICE_ZONE_FILE_ENDPOINT = 'zone-file';\nvar TX_BROADCAST_SERVICE_REGISTRATION_ENDPOINT = 'registration';\nvar TX_BROADCAST_SERVICE_TX_ENDPOINT = 'transaction';\n\nvar BitcoinNetwork = exports.BitcoinNetwork = function () {\n  function BitcoinNetwork() {\n    _classCallCheck(this, BitcoinNetwork);\n  }\n\n  _createClass(BitcoinNetwork, [{\n    key: 'broadcastTransaction',\n    value: function broadcastTransaction(transaction) {\n      return Promise.reject(new Error('Not implemented, broadcastTransaction(' + transaction + ')'));\n    }\n  }, {\n    key: 'getBlockHeight',\n    value: function getBlockHeight() {\n      return Promise.reject(new Error('Not implemented, getBlockHeight()'));\n    }\n  }, {\n    key: 'getTransactionInfo',\n    value: function getTransactionInfo(txid) {\n      return Promise.reject(new Error('Not implemented, getTransactionInfo(' + txid + ')'));\n    }\n  }, {\n    key: 'getNetworkedUTXOs',\n    value: function getNetworkedUTXOs(address) {\n      return Promise.reject(new Error('Not implemented, getNetworkedUTXOs(' + address + ')'));\n    }\n  }]);\n\n  return BitcoinNetwork;\n}();\n\nvar BlockstackNetwork = exports.BlockstackNetwork = function () {\n  function BlockstackNetwork(apiUrl, broadcastServiceUrl, bitcoinAPI) {\n    var network = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _bitcoinjsLib2.default.networks.bitcoin;\n\n    _classCallCheck(this, BlockstackNetwork);\n\n    this.blockstackAPIUrl = apiUrl;\n    this.broadcastServiceUrl = broadcastServiceUrl;\n    this.layer1 = network;\n    this.btc = bitcoinAPI;\n\n    this.DUST_MINIMUM = 5500;\n    this.includeUtxoMap = {};\n    this.excludeUtxoSet = [];\n    this.MAGIC_BYTES = 'id';\n  }\n\n  _createClass(BlockstackNetwork, [{\n    key: 'coerceAddress',\n    value: function coerceAddress(address) {\n      var _bitcoinjs$address$fr = _bitcoinjsLib2.default.address.fromBase58Check(address),\n          hash = _bitcoinjs$address$fr.hash,\n          version = _bitcoinjs$address$fr.version;\n\n      var scriptHashes = [_bitcoinjsLib2.default.networks.bitcoin.scriptHash, _bitcoinjsLib2.default.networks.testnet.scriptHash];\n      var pubKeyHashes = [_bitcoinjsLib2.default.networks.bitcoin.pubKeyHash, _bitcoinjsLib2.default.networks.testnet.pubKeyHash];\n      var coercedVersion = void 0;\n      if (scriptHashes.indexOf(version) >= 0) {\n        coercedVersion = this.layer1.scriptHash;\n      } else if (pubKeyHashes.indexOf(version) >= 0) {\n        coercedVersion = this.layer1.pubKeyHash;\n      } else {\n        throw new Error('Unrecognized address version number ' + version + ' in ' + address);\n      }\n      return _bitcoinjsLib2.default.address.toBase58Check(hash, coercedVersion);\n    }\n  }, {\n    key: 'getDefaultBurnAddress',\n    value: function getDefaultBurnAddress() {\n      return this.coerceAddress('1111111111111111111114oLvT2');\n    }\n\n    /**\n     * Get the price of a name via the legacy /v1/prices API endpoint.\n     * @param {String} fullyQualifiedName the name to query\n     * @return {Promise} a promise to an Object with { units: String, amount: BigInteger }\n     * @private\n     */\n\n  }, {\n    key: 'getNamePriceV1',\n    value: function getNamePriceV1(fullyQualifiedName) {\n      var _this = this;\n\n      // legacy code path\n      return fetch(this.blockstackAPIUrl + '/v1/prices/names/' + fullyQualifiedName).then(function (resp) {\n        if (!resp.ok) {\n          throw new Error('Failed to query name price for ' + fullyQualifiedName);\n        }\n        return resp;\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        return resp.name_price;\n      }).then(function (namePrice) {\n        if (!namePrice || !namePrice.satoshis) {\n          throw new Error('Failed to get price for ' + fullyQualifiedName + '. Does the namespace exist?');\n        }\n        if (namePrice.satoshis < _this.DUST_MINIMUM) {\n          namePrice.satoshis = _this.DUST_MINIMUM;\n        }\n        var result = {\n          units: 'BTC',\n          amount: _bigi2.default.fromByteArrayUnsigned(String(namePrice.satoshis))\n        };\n        return result;\n      });\n    }\n\n    /**\n     * Get the price of a namespace via the legacy /v1/prices API endpoint.\n     * @param {String} namespaceID the namespace to query\n     * @return {Promise} a promise to an Object with { units: String, amount: BigInteger }\n     * @private\n     */\n\n  }, {\n    key: 'getNamespacePriceV1',\n    value: function getNamespacePriceV1(namespaceID) {\n      var _this2 = this;\n\n      // legacy code path\n      return fetch(this.blockstackAPIUrl + '/v1/prices/namespaces/' + namespaceID).then(function (resp) {\n        if (!resp.ok) {\n          throw new Error('Failed to query name price for ' + namespaceID);\n        }\n        return resp;\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (namespacePrice) {\n        if (!namespacePrice || !namespacePrice.satoshis) {\n          throw new Error('Failed to get price for ' + namespaceID);\n        }\n        if (namespacePrice.satoshis < _this2.DUST_MINIMUM) {\n          namespacePrice.satoshis = _this2.DUST_MINIMUM;\n        }\n        var result = {\n          units: 'BTC',\n          amount: _bigi2.default.fromByteArrayUnsigned(String(namespacePrice.satoshis))\n        };\n        return result;\n      });\n    }\n\n    /**\n     * Get the price of a name via the /v2/prices API endpoint.\n     * @param {String} fullyQualifiedName the name to query\n     * @return {Promise} a promise to an Object with { units: String, amount: BigInteger }\n     * @private\n     */\n\n  }, {\n    key: 'getNamePriceV2',\n    value: function getNamePriceV2(fullyQualifiedName) {\n      var _this3 = this;\n\n      return fetch(this.blockstackAPIUrl + '/v2/prices/names/' + fullyQualifiedName).then(function (resp) {\n        if (resp.status !== 200) {\n          // old core node \n          throw new Error('The upstream node does not handle the /v2/ price namespace');\n        }\n        return resp;\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        return resp.name_price;\n      }).then(function (namePrice) {\n        if (!namePrice) {\n          throw new Error('Failed to get price for ' + fullyQualifiedName + '. Does the namespace exist?');\n        }\n        var result = {\n          units: namePrice.units,\n          amount: _bigi2.default.fromByteArrayUnsigned(namePrice.amount)\n        };\n        if (namePrice.units === 'BTC') {\n          // must be at least dust-minimum\n          var dustMin = _bigi2.default.fromByteArrayUnsigned(String(_this3.DUST_MINIMUM));\n          if (result.amount.compareTo(dustMin) < 0) {\n            result.amount = dustMin;\n          }\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Get the price of a namespace via the /v2/prices API endpoint.\n     * @param {String} namespaceID the namespace to query\n     * @return {Promise} a promise to an Object with { units: String, amount: BigInteger }\n     * @private\n     */\n\n  }, {\n    key: 'getNamespacePriceV2',\n    value: function getNamespacePriceV2(namespaceID) {\n      var _this4 = this;\n\n      return fetch(this.blockstackAPIUrl + '/v2/prices/namespaces/' + namespaceID).then(function (resp) {\n        if (resp.status !== 200) {\n          // old core node \n          throw new Error('The upstream node does not handle the /v2/ price namespace');\n        }\n        return resp;\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (namespacePrice) {\n        if (!namespacePrice) {\n          throw new Error('Failed to get price for ' + namespaceID);\n        }\n        var result = {\n          units: namespacePrice.units,\n          amount: _bigi2.default.fromByteArrayUnsigned(namespacePrice.amount)\n        };\n        if (namespacePrice.units === 'BTC') {\n          // must be at least dust-minimum\n          var dustMin = _bigi2.default.fromByteArrayUnsigned(String(_this4.DUST_MINIMUM));\n          if (result.amount.compareTo(dustMin) < 0) {\n            result.amount = dustMin;\n          }\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Get the price of a name.\n     * @param {String} fullyQualifiedName the name to query\n     * @return {Promise} a promise to an Object with { units: String, amount: BigInteger }, where\n     *   .units encodes the cryptocurrency units to pay (e.g. BTC, STACKS), and\n     *   .amount encodes the number of units, in the smallest denominiated amount\n     *   (e.g. if .units is BTC, .amount will be satoshis; if .units is STACKS, \n     *   .amount will be microStacks)\n     */\n\n  }, {\n    key: 'getNamePrice',\n    value: function getNamePrice(fullyQualifiedName) {\n      var _this5 = this;\n\n      // handle v1 or v2 \n      return Promise.resolve().then(function () {\n        return _this5.getNamePriceV2(fullyQualifiedName);\n      }).catch(function () {\n        return _this5.getNamePriceV1(fullyQualifiedName);\n      });\n    }\n\n    /**\n     * Get the price of a namespace\n     * @param {String} namespaceID the namespace to query\n     * @return {Promise} a promise to an Object with { units: String, amount: BigInteger }, where\n     *   .units encodes the cryptocurrency units to pay (e.g. BTC, STACKS), and\n     *   .amount encodes the number of units, in the smallest denominiated amount\n     *   (e.g. if .units is BTC, .amount will be satoshis; if .units is STACKS, \n     *   .amount will be microStacks)\n     */\n\n  }, {\n    key: 'getNamespacePrice',\n    value: function getNamespacePrice(namespaceID) {\n      var _this6 = this;\n\n      // handle v1 or v2 \n      return Promise.resolve().then(function () {\n        return _this6.getNamespacePriceV2(namespaceID);\n      }).catch(function () {\n        return _this6.getNamespacePriceV1(namespaceID);\n      });\n    }\n\n    /**\n     * How many blocks can pass between a name expiring and the name being able to be\n     * re-registered by a different owner?\n     * @return {Promise} a promise to the number of blocks\n     */\n\n  }, {\n    key: 'getGracePeriod',\n    value: function getGracePeriod() {\n      return new Promise(function (resolve) {\n        return resolve(5000);\n      });\n    }\n\n    /**\n     * Get the names -- both on-chain and off-chain -- owned by an address.\n     * @param {String} address the blockchain address (the hash of the owner public key)\n     * @return {Promise} a promise that resolves to a list of names (Strings)\n     */\n\n  }, {\n    key: 'getNamesOwned',\n    value: function getNamesOwned(address) {\n      var networkAddress = this.coerceAddress(address);\n      return fetch(this.blockstackAPIUrl + '/v1/addresses/bitcoin/' + networkAddress).then(function (resp) {\n        return resp.json();\n      }).then(function (obj) {\n        return obj.names;\n      });\n    }\n\n    /**\n     * Get the blockchain address to which a name's registration fee must be sent\n     * (the address will depend on the namespace in which it is registered.)\n     * @param {String} namespace the namespace ID\n     * @return {Promise} a promise that resolves to an address (String)\n     */\n\n  }, {\n    key: 'getNamespaceBurnAddress',\n    value: function getNamespaceBurnAddress(namespace) {\n      var _this7 = this;\n\n      return Promise.all([fetch(this.blockstackAPIUrl + '/v1/namespaces/' + namespace), this.getBlockHeight()]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            resp = _ref2[0],\n            blockHeight = _ref2[1];\n\n        if (resp.status === 404) {\n          throw new Error('No such namespace \\'' + namespace + '\\'');\n        } else {\n          return Promise.all([resp.json(), blockHeight]);\n        }\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            namespaceInfo = _ref4[0],\n            blockHeight = _ref4[1];\n\n        var address = _this7.getDefaultBurnAddress();\n        if (namespaceInfo.version === 2) {\n          // pay-to-namespace-creator if this namespace is less than 1 year old\n          if (namespaceInfo.reveal_block + 52595 >= blockHeight) {\n            address = namespaceInfo.address;\n          }\n        }\n        return address;\n      }).then(function (address) {\n        return _this7.coerceAddress(address);\n      });\n    }\n\n    /**\n     * Get WHOIS-like information for a name, including the address that owns it,\n     * the block at which it expires, and the zone file anchored to it (if available).\n     * @param {String} fullyQualifiedName the name to query.  Can be on-chain of off-chain.\n     * @return {Promise} a promise that resolves to the WHOIS-like information \n     */\n\n  }, {\n    key: 'getNameInfo',\n    value: function getNameInfo(fullyQualifiedName) {\n      var _this8 = this;\n\n      return fetch(this.blockstackAPIUrl + '/v1/names/' + fullyQualifiedName).then(function (resp) {\n        if (resp.status === 404) {\n          throw new Error('Name not found');\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (nameInfo) {\n        // the returned address _should_ be in the correct network ---\n        //  blockstackd gets into trouble because it tries to coerce back to mainnet\n        //  and the regtest transaction generation libraries want to use testnet addresses\n        if (nameInfo.address) {\n          return Object.assign({}, nameInfo, { address: _this8.coerceAddress(nameInfo.address) });\n        } else {\n          return nameInfo;\n        }\n      });\n    }\n\n    /**\n     * Get the pricing parameters and creation history of a namespace.\n     * @param {String} namespaceID the namespace to query\n     * @return {Promise} a promise that resolves to the namespace information.\n     */\n\n  }, {\n    key: 'getNamespaceInfo',\n    value: function getNamespaceInfo(namespaceID) {\n      var _this9 = this;\n\n      return fetch(this.blockstackAPIUrl + '/v1/namespaces/' + namespaceID).then(function (resp) {\n        if (resp.status === 404) {\n          throw new Error('Namespace not found');\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (namespaceInfo) {\n        // the returned address _should_ be in the correct network ---\n        //  blockstackd gets into trouble because it tries to coerce back to mainnet\n        //  and the regtest transaction generation libraries want to use testnet addresses\n        if (namespaceInfo.address && namespaceInfo.recipient_address) {\n          return Object.assign({}, namespaceInfo, {\n            address: _this9.coerceAddress(namespaceInfo.address),\n            recipient_address: _this9.coerceAddress(namespaceInfo.recipient_address)\n          });\n        } else {\n          return namespaceInfo;\n        }\n      });\n    }\n\n    /**\n     * Get a zone file, given its hash.  Throws an exception if the zone file\n     * obtained does not match the hash.\n     * @param {String} zonefileHash the ripemd160(sha256) hash of the zone file\n     * @return {Promise} a promise that resolves to the zone file's text\n     */\n\n  }, {\n    key: 'getZonefile',\n    value: function getZonefile(zonefileHash) {\n      return fetch(this.blockstackAPIUrl + '/v1/zonefiles/' + zonefileHash).then(function (resp) {\n        if (resp.status === 200) {\n          return resp.text().then(function (body) {\n            var sha256 = _bitcoinjsLib2.default.crypto.sha256(body);\n            var h = new _ripemd2.default().update(sha256).digest('hex');\n            if (h !== zonefileHash) {\n              throw new Error('Zone file contents hash to ' + h + ', not ' + zonefileHash);\n            }\n            return body;\n          });\n        } else {\n          throw new Error('Bad response status: ' + resp.status);\n        }\n      });\n    }\n\n    /**\n     * Get the status of an account for a particular token holding.  This includes its total number of\n     * expenditures and credits, lockup times, last txid, and so on.\n     * @param {String} address the account\n     * @param {String} tokenType the token type to query\n     * @return {Promise} a promise that resolves to an object representing the state of the account\n     *   for this token\n     */\n\n  }, {\n    key: 'getAccountStatus',\n    value: function getAccountStatus(address, tokenType) {\n      var _this10 = this;\n\n      return fetch(this.blockstackAPIUrl + '/v1/accounts/' + address + '/' + tokenType + '/status').then(function (resp) {\n        if (resp.status === 404) {\n          throw new Error('Account not found');\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (accountStatus) {\n        // coerce all addresses, and convert credit/debit to biginteger\n        var formattedStatus = Object.assign({}, accountStatus, {\n          address: _this10.coerceAddress(accountStatus.address),\n          debit_value: _bigi2.default.fromByteArrayUnsigned(String(accountStatus.debit_value)),\n          credit_value: _bigi2.default.fromByteArrayUnsigned(String(accountStatus.credit_value))\n        });\n        return formattedStatus;\n      });\n    }\n\n    /**\n     * Get a page of an account's transaction history.\n     * @param {String} address the account's address\n     * @param {number} page the page number.  Page 0 is the most recent transactions\n     * @return {Promise} a promise that resolves to an Array of Objects, where each Object encodes\n     *   states of the account at various block heights (e.g. prior balances, txids, etc)\n     */\n\n  }, {\n    key: 'getAccountHistoryPage',\n    value: function getAccountHistoryPage(address, page) {\n      var _this11 = this;\n\n      var url = this.blockstackAPIUrl + '/v1/accounts/' + address + '/history?page=' + page;\n      return fetch(url).then(function (resp) {\n        if (resp.status === 404) {\n          throw new Error('Account not found');\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (historyList) {\n        if (historyList.error) {\n          throw new Error('Unable to get account history page: ' + historyList.error);\n        }\n        // coerse all addresses and convert to bigint\n        return historyList.map(function (histEntry) {\n          histEntry.address = _this11.coerceAddress(histEntry.address);\n          histEntry.debit_value = _bigi2.default.fromByteArrayUnsigned(String(histEntry.debit_value));\n          histEntry.credit_value = _bigi2.default.fromByteArrayUnsigned(String(histEntry.credit_value));\n          return histEntry;\n        });\n      });\n    }\n\n    /**\n     * Get the state(s) of an account at a particular block height.  This includes the state of the\n     * account beginning with this block's transactions, as well as all of the states the account\n     * passed through when this block was processed (if any).\n     * @param {String} address the account's address\n     * @param {Integer} blockHeight the block to query\n     * @return {Promise} a promise that resolves to an Array of Objects, where each Object encodes\n     *   states of the account at this block.\n     */\n\n  }, {\n    key: 'getAccountAt',\n    value: function getAccountAt(address, blockHeight) {\n      var _this12 = this;\n\n      var url = this.blockstackAPIUrl + '/v1/accounts/' + address + '/history/' + blockHeight;\n      return fetch(url).then(function (resp) {\n        if (resp.status === 404) {\n          throw new Error('Account not found');\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (historyList) {\n        if (historyList.error) {\n          throw new Error('Unable to get historic account state: ' + historyList.error);\n        }\n        // coerce all addresses \n        return historyList.map(function (histEntry) {\n          histEntry.address = _this12.coerceAddress(histEntry.address);\n          histEntry.debit_value = _bigi2.default.fromByteArrayUnsigned(String(histEntry.debit_value));\n          histEntry.credit_value = _bigi2.default.fromByteArrayUnsigned(String(histEntry.credit_value));\n          return histEntry;\n        });\n      });\n    }\n\n    /**\n     * Get the set of token types that this account owns\n     * @param {String} address the account's address\n     * @return {Promise} a promise that resolves to an Array of Strings, where each item encodes the \n     *   type of token this account holds (excluding the underlying blockchain's tokens)\n     */\n\n  }, {\n    key: 'getAccountTokens',\n    value: function getAccountTokens(address) {\n      return fetch(this.blockstackAPIUrl + '/v1/accounts/' + address + '/tokens').then(function (resp) {\n        if (resp.status === 404) {\n          throw new Error('Account not found');\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (tokenList) {\n        if (tokenList.error) {\n          throw new Error('Unable to get token list: ' + tokenList.error);\n        }\n        return tokenList;\n      });\n    }\n\n    /**\n     * Get the number of tokens owned by an account.  If the account does not exist or has no\n     * tokens of this type, then 0 will be returned.\n     * @param {String} address the account's address\n     * @param {String} tokenType the type of token to query.\n     * @return {Promise} a promise that resolves to a BigInteger that encodes the number of tokens \n     *   held by this account.\n     */\n\n  }, {\n    key: 'getAccountBalance',\n    value: function getAccountBalance(address, tokenType) {\n      return fetch(this.blockstackAPIUrl + '/v1/accounts/' + address + '/' + tokenType + '/balance').then(function (resp) {\n        if (resp.status === 404) {\n          // talking to an older blockstack core node without the accounts API\n          return Promise.resolve().then(function () {\n            return _bigi2.default.fromByteArrayUnsigned('0');\n          });\n        } else if (resp.status !== 200) {\n          throw new Error('Bad response status: ' + resp.status);\n        } else {\n          return resp.json();\n        }\n      }).then(function (tokenBalance) {\n        if (tokenBalance.error) {\n          throw new Error('Unable to get account balance: ' + tokenBalance.error);\n        }\n        var balance = '0';\n        if (tokenBalance && tokenBalance.balance) {\n          balance = tokenBalance.balance;\n        }\n        return _bigi2.default.fromByteArrayUnsigned(balance);\n      });\n    }\n\n    /**\n     * Performs a POST request to the given URL\n     * @param  {String} endpoint  the name of\n     * @param  {String} body [description]\n     * @return {Promise<Object|Error>} Returns a `Promise` that resolves to the object requested.\n     * In the event of an error, it rejects with:\n     * * a `RemoteServiceError` if there is a problem\n     * with the transaction broadcast service\n     * * `MissingParameterError` if you call the function without a required\n     * parameter\n     *\n     * @private\n     */\n\n  }, {\n    key: 'broadcastServiceFetchHelper',\n    value: function broadcastServiceFetchHelper(endpoint, body) {\n      var requestHeaders = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      };\n\n      var options = {\n        method: 'POST',\n        headers: requestHeaders,\n        body: JSON.stringify(body)\n      };\n\n      var url = this.broadcastServiceUrl + '/v1/broadcast/' + endpoint;\n      return fetch(url, options).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new _errors.RemoteServiceError(response);\n        }\n      });\n    }\n\n    /**\n    * Broadcasts a signed bitcoin transaction to the network optionally waiting to broadcast the\n    * transaction until a second transaction has a certain number of confirmations.\n    *\n    * @param  {string} transaction the hex-encoded transaction to broadcast\n    * @param  {string} transactionToWatch the hex transaction id of the transaction to watch for\n    * the specified number of confirmations before broadcasting the `transaction`\n    * @param  {number} confirmations the number of confirmations `transactionToWatch` must have\n    * before broadcasting `transaction`.\n    * @return {Promise<Object|Error>} Returns a Promise that resolves to an object with a\n    * `transaction_hash` key containing the transaction hash of the broadcasted transaction.\n    *\n    * In the event of an error, it rejects with:\n    * * a `RemoteServiceError` if there is a problem\n    *   with the transaction broadcast service\n    * * `MissingParameterError` if you call the function without a required\n    *   parameter\n    * @private\n    */\n\n  }, {\n    key: 'broadcastTransaction',\n    value: function broadcastTransaction(transaction) {\n      var transactionToWatch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var confirmations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n\n      if (!transaction) {\n        var error = new _errors.MissingParameterError('transaction');\n        return Promise.reject(error);\n      }\n\n      if (!confirmations && confirmations !== 0) {\n        var _error = new _errors.MissingParameterError('confirmations');\n        return Promise.reject(_error);\n      }\n\n      if (transactionToWatch === null) {\n        return this.btc.broadcastTransaction(transaction);\n      } else {\n        /*\n         * POST /v1/broadcast/transaction\n         * Request body:\n         * JSON.stringify({\n         *  transaction,\n         *  transactionToWatch,\n         *  confirmations\n         * })\n         */\n        var endpoint = TX_BROADCAST_SERVICE_TX_ENDPOINT;\n\n        var requestBody = {\n          transaction: transaction,\n          transactionToWatch: transactionToWatch,\n          confirmations: confirmations\n        };\n\n        return this.broadcastServiceFetchHelper(endpoint, requestBody);\n      }\n    }\n\n    /**\n     * Broadcasts a zone file to the Atlas network via the transaction broadcast service.\n     *\n     * @param  {String} zoneFile the zone file to be broadcast to the Atlas network\n     * @param  {String} transactionToWatch the hex transaction id of the transaction\n     * to watch for confirmation before broadcasting the zone file to the Atlas network\n     * @return {Promise<Object|Error>} Returns a Promise that resolves to an object with a\n     * `transaction_hash` key containing the transaction hash of the broadcasted transaction.\n     *\n     * In the event of an error, it rejects with:\n     * * a `RemoteServiceError` if there is a problem\n     *   with the transaction broadcast service\n     * * `MissingParameterError` if you call the function without a required\n     *   parameter\n     * @private\n     */\n\n  }, {\n    key: 'broadcastZoneFile',\n    value: function broadcastZoneFile(zoneFile) {\n      var transactionToWatch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!zoneFile) {\n        return Promise.reject(new _errors.MissingParameterError('zoneFile'));\n      }\n\n      // TODO: validate zonefile\n\n      if (transactionToWatch) {\n        // broadcast via transaction broadcast service\n\n        /*\n         * POST /v1/broadcast/zone-file\n         * Request body:\n         * JSON.stringify({\n         *  zoneFile,\n         *  transactionToWatch\n         * })\n         */\n\n        var requestBody = {\n          zoneFile: zoneFile,\n          transactionToWatch: transactionToWatch\n        };\n\n        var endpoint = TX_BROADCAST_SERVICE_ZONE_FILE_ENDPOINT;\n\n        return this.broadcastServiceFetchHelper(endpoint, requestBody);\n      } else {\n        // broadcast via core endpoint\n\n        // zone file is two words but core's api treats it as one word 'zonefile'\n        var _requestBody = { zonefile: zoneFile };\n\n        return fetch(this.blockstackAPIUrl + '/v1/zonefile/', {\n          method: 'POST',\n          body: JSON.stringify(_requestBody),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (resp) {\n          var json = resp.json();\n          return json.then(function (respObj) {\n            if (respObj.hasOwnProperty('error')) {\n              throw new _errors.RemoteServiceError(resp);\n            }\n            return respObj.servers;\n          });\n        });\n      }\n    }\n\n    /**\n     * Sends the preorder and registration transactions and zone file\n     * for a Blockstack name registration\n     * along with the to the transaction broadcast service.\n     *\n     * The transaction broadcast:\n     *\n     * * immediately broadcasts the preorder transaction\n     * * broadcasts the register transactions after the preorder transaction\n     * has an appropriate number of confirmations\n     * * broadcasts the zone file to the Atlas network after the register transaction\n     * has an appropriate number of confirmations\n     *\n     * @param  {String} preorderTransaction the hex-encoded, signed preorder transaction generated\n     * using the `makePreorder` function\n     * @param  {String} registerTransaction the hex-encoded, signed register transaction generated\n     * using the `makeRegister` function\n     * @param  {String} zoneFile the zone file to be broadcast to the Atlas network\n     * @return {Promise<Object|Error>} Returns a Promise that resolves to an object with a\n     * `transaction_hash` key containing the transaction hash of the broadcasted transaction.\n     *\n     * In the event of an error, it rejects with:\n     * * a `RemoteServiceError` if there is a problem\n     *   with the transaction broadcast service\n     * * `MissingParameterError` if you call the function without a required\n     *   parameter\n     * @private\n     */\n\n  }, {\n    key: 'broadcastNameRegistration',\n    value: function broadcastNameRegistration(preorderTransaction, registerTransaction, zoneFile) {\n      /*\n         * POST /v1/broadcast/registration\n         * Request body:\n         * JSON.stringify({\n         * preorderTransaction,\n         * registerTransaction,\n         * zoneFile\n         * })\n         */\n\n      if (!preorderTransaction) {\n        var error = new _errors.MissingParameterError('preorderTransaction');\n        return Promise.reject(error);\n      }\n\n      if (!registerTransaction) {\n        var _error2 = new _errors.MissingParameterError('registerTransaction');\n        return Promise.reject(_error2);\n      }\n\n      if (!zoneFile) {\n        var _error3 = new _errors.MissingParameterError('zoneFile');\n        return Promise.reject(_error3);\n      }\n\n      var requestBody = {\n        preorderTransaction: preorderTransaction,\n        registerTransaction: registerTransaction,\n        zoneFile: zoneFile\n      };\n\n      var endpoint = TX_BROADCAST_SERVICE_REGISTRATION_ENDPOINT;\n\n      return this.broadcastServiceFetchHelper(endpoint, requestBody);\n    }\n  }, {\n    key: 'getFeeRate',\n    value: function getFeeRate() {\n      return fetch('https://bitcoinfees.earn.com/api/v1/fees/recommended').then(function (resp) {\n        return resp.json();\n      }).then(function (rates) {\n        return Math.floor(rates.fastestFee);\n      });\n    }\n  }, {\n    key: 'countDustOutputs',\n    value: function countDustOutputs() {\n      throw new Error('Not implemented.');\n    }\n  }, {\n    key: 'getUTXOs',\n    value: function getUTXOs(address) {\n      var _this13 = this;\n\n      return this.getNetworkedUTXOs(address).then(function (networkedUTXOs) {\n        var returnSet = networkedUTXOs.concat();\n        if (_this13.includeUtxoMap.hasOwnProperty(address)) {\n          returnSet = networkedUTXOs.concat(_this13.includeUtxoMap[address]);\n        }\n\n        // aaron: I am *well* aware this is O(n)*O(m) runtime\n        //    however, clients should clear the exclude set periodically\n        var excludeSet = _this13.excludeUtxoSet;\n        returnSet = returnSet.filter(function (utxo) {\n          var inExcludeSet = excludeSet.reduce(function (inSet, utxoToCheck) {\n            return inSet || utxoToCheck.tx_hash === utxo.tx_hash && utxoToCheck.tx_output_n === utxo.tx_output_n;\n          }, false);\n          return !inExcludeSet;\n        });\n\n        return returnSet;\n      });\n    }\n\n    /**\n     * This will modify the network's utxo set to include UTXOs\n     *  from the given transaction and exclude UTXOs *spent* in\n     *  that transaction\n     * @param {String} txHex - the hex-encoded transaction to use\n     * @return {void} no return value, this modifies the UTXO config state\n     * @private\n     */\n\n  }, {\n    key: 'modifyUTXOSetFrom',\n    value: function modifyUTXOSetFrom(txHex) {\n      var _this14 = this;\n\n      var tx = _bitcoinjsLib2.default.Transaction.fromHex(txHex);\n\n      var excludeSet = this.excludeUtxoSet.concat();\n\n      tx.ins.forEach(function (utxoUsed) {\n        var reverseHash = Buffer.from(utxoUsed.hash);\n        reverseHash.reverse();\n        excludeSet.push({\n          tx_hash: reverseHash.toString('hex'),\n          tx_output_n: utxoUsed.index\n        });\n      });\n\n      this.excludeUtxoSet = excludeSet;\n\n      var txHash = tx.getHash().reverse().toString('hex');\n      tx.outs.forEach(function (utxoCreated, txOutputN) {\n        var isNullData = function isNullData(script) {\n          try {\n            _bitcoinjsLib2.default.payments.embed({ output: script }, { validate: true });\n            return true;\n          } catch (_) {\n            return false;\n          }\n        };\n        if (isNullData(utxoCreated.script)) {\n          return;\n        }\n        var address = _bitcoinjsLib2.default.address.fromOutputScript(utxoCreated.script, _this14.layer1);\n\n        var includeSet = [];\n        if (_this14.includeUtxoMap.hasOwnProperty(address)) {\n          includeSet = includeSet.concat(_this14.includeUtxoMap[address]);\n        }\n\n        includeSet.push({\n          tx_hash: txHash,\n          confirmations: 0,\n          value: utxoCreated.value,\n          tx_output_n: txOutputN\n        });\n        _this14.includeUtxoMap[address] = includeSet;\n      });\n    }\n  }, {\n    key: 'resetUTXOs',\n    value: function resetUTXOs(address) {\n      delete this.includeUtxoMap[address];\n      this.excludeUtxoSet = [];\n    }\n  }, {\n    key: 'getConsensusHash',\n    value: function getConsensusHash() {\n      return fetch(this.blockstackAPIUrl + '/v1/blockchains/bitcoin/consensus').then(function (resp) {\n        return resp.json();\n      }).then(function (x) {\n        return x.consensus_hash;\n      });\n    }\n  }, {\n    key: 'getTransactionInfo',\n    value: function getTransactionInfo(txHash) {\n      return this.btc.getTransactionInfo(txHash);\n    }\n  }, {\n    key: 'getBlockHeight',\n    value: function getBlockHeight() {\n      return this.btc.getBlockHeight();\n    }\n  }, {\n    key: 'getNetworkedUTXOs',\n    value: function getNetworkedUTXOs(address) {\n      return this.btc.getNetworkedUTXOs(address);\n    }\n  }]);\n\n  return BlockstackNetwork;\n}();\n\nvar LocalRegtest = exports.LocalRegtest = function (_BlockstackNetwork) {\n  _inherits(LocalRegtest, _BlockstackNetwork);\n\n  function LocalRegtest(apiUrl, broadcastServiceUrl, bitcoinAPI) {\n    _classCallCheck(this, LocalRegtest);\n\n    return _possibleConstructorReturn(this, (LocalRegtest.__proto__ || Object.getPrototypeOf(LocalRegtest)).call(this, apiUrl, broadcastServiceUrl, bitcoinAPI, _bitcoinjsLib2.default.networks.testnet));\n  }\n\n  _createClass(LocalRegtest, [{\n    key: 'getFeeRate',\n    value: function getFeeRate() {\n      return Promise.resolve(Math.floor(0.00001000 * SATOSHIS_PER_BTC));\n    }\n  }]);\n\n  return LocalRegtest;\n}(BlockstackNetwork);\n\nvar BitcoindAPI = exports.BitcoindAPI = function (_BitcoinNetwork) {\n  _inherits(BitcoindAPI, _BitcoinNetwork);\n\n  function BitcoindAPI(bitcoindUrl, bitcoindCredentials) {\n    _classCallCheck(this, BitcoindAPI);\n\n    var _this16 = _possibleConstructorReturn(this, (BitcoindAPI.__proto__ || Object.getPrototypeOf(BitcoindAPI)).call(this));\n\n    _this16.bitcoindUrl = bitcoindUrl;\n    _this16.bitcoindCredentials = bitcoindCredentials;\n    _this16.importedBefore = {};\n    return _this16;\n  }\n\n  _createClass(BitcoindAPI, [{\n    key: 'broadcastTransaction',\n    value: function broadcastTransaction(transaction) {\n      var jsonRPC = {\n        jsonrpc: '1.0',\n        method: 'sendrawtransaction',\n        params: [transaction]\n      };\n      var authString = Buffer.from(this.bitcoindCredentials.username + ':' + this.bitcoindCredentials.password).toString('base64');\n      var headers = { Authorization: 'Basic ' + authString };\n      return fetch(this.bitcoindUrl, {\n        method: 'POST',\n        body: JSON.stringify(jsonRPC),\n        headers: headers\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (respObj) {\n        return respObj.result;\n      });\n    }\n  }, {\n    key: 'getBlockHeight',\n    value: function getBlockHeight() {\n      var jsonRPC = {\n        jsonrpc: '1.0',\n        method: 'getblockcount'\n      };\n      var authString = Buffer.from(this.bitcoindCredentials.username + ':' + this.bitcoindCredentials.password).toString('base64');\n      var headers = { Authorization: 'Basic ' + authString };\n      return fetch(this.bitcoindUrl, {\n        method: 'POST',\n        body: JSON.stringify(jsonRPC),\n        headers: headers\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (respObj) {\n        return respObj.result;\n      });\n    }\n  }, {\n    key: 'getTransactionInfo',\n    value: function getTransactionInfo(txHash) {\n      var _this17 = this;\n\n      var jsonRPC = {\n        jsonrpc: '1.0',\n        method: 'gettransaction',\n        params: [txHash]\n      };\n      var authString = Buffer.from(this.bitcoindCredentials.username + ':' + this.bitcoindCredentials.password).toString('base64');\n      var headers = { Authorization: 'Basic ' + authString };\n      return fetch(this.bitcoindUrl, {\n        method: 'POST',\n        body: JSON.stringify(jsonRPC),\n        headers: headers\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (respObj) {\n        return respObj.result;\n      }).then(function (txInfo) {\n        return txInfo.blockhash;\n      }).then(function (blockhash) {\n        var jsonRPCBlock = {\n          jsonrpc: '1.0',\n          method: 'getblockheader',\n          params: [blockhash]\n        };\n        headers.Authorization = 'Basic ' + authString;\n        return fetch(_this17.bitcoindUrl, {\n          method: 'POST',\n          body: JSON.stringify(jsonRPCBlock),\n          headers: headers\n        });\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (respObj) {\n        if (!respObj || !respObj.result) {\n          // unconfirmed \n          throw new Error('Unconfirmed transaction');\n        } else {\n          return { block_height: respObj.result.height };\n        }\n      });\n    }\n  }, {\n    key: 'getNetworkedUTXOs',\n    value: function getNetworkedUTXOs(address) {\n      var _this18 = this;\n\n      var jsonRPCImport = {\n        jsonrpc: '1.0',\n        method: 'importaddress',\n        params: [address]\n      };\n      var jsonRPCUnspent = {\n        jsonrpc: '1.0',\n        method: 'listunspent',\n        params: [0, 9999999, [address]]\n      };\n      var authString = Buffer.from(this.bitcoindCredentials.username + ':' + this.bitcoindCredentials.password).toString('base64');\n      var headers = { Authorization: 'Basic ' + authString };\n\n      var importPromise = this.importedBefore[address] ? Promise.resolve() : fetch(this.bitcoindUrl, {\n        method: 'POST',\n        body: JSON.stringify(jsonRPCImport),\n        headers: headers\n      }).then(function () {\n        _this18.importedBefore[address] = true;\n      });\n\n      return importPromise.then(function () {\n        return fetch(_this18.bitcoindUrl, {\n          method: 'POST',\n          body: JSON.stringify(jsonRPCUnspent),\n          headers: headers\n        });\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (x) {\n        return x.result;\n      }).then(function (utxos) {\n        return utxos.map(function (x) {\n          return Object({\n            value: Math.round(x.amount * SATOSHIS_PER_BTC),\n            confirmations: x.confirmations,\n            tx_hash: x.txid,\n            tx_output_n: x.vout\n          });\n        });\n      });\n    }\n  }]);\n\n  return BitcoindAPI;\n}(BitcoinNetwork);\n\nvar InsightClient = exports.InsightClient = function (_BitcoinNetwork2) {\n  _inherits(InsightClient, _BitcoinNetwork2);\n\n  function InsightClient() {\n    var insightUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://utxo.technofractal.com/';\n\n    _classCallCheck(this, InsightClient);\n\n    var _this19 = _possibleConstructorReturn(this, (InsightClient.__proto__ || Object.getPrototypeOf(InsightClient)).call(this));\n\n    _this19.apiUrl = insightUrl;\n    return _this19;\n  }\n\n  _createClass(InsightClient, [{\n    key: 'broadcastTransaction',\n    value: function broadcastTransaction(transaction) {\n      var jsonData = { tx: transaction };\n      return fetch(this.apiUrl + '/tx/send', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(jsonData)\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: 'getBlockHeight',\n    value: function getBlockHeight() {\n      return fetch(this.apiUrl + '/status').then(function (resp) {\n        return resp.json();\n      }).then(function (status) {\n        return status.blocks;\n      });\n    }\n  }, {\n    key: 'getTransactionInfo',\n    value: function getTransactionInfo(txHash) {\n      var _this20 = this;\n\n      return fetch(this.apiUrl + '/tx/' + txHash).then(function (resp) {\n        return resp.json();\n      }).then(function (transactionInfo) {\n        if (transactionInfo.error) {\n          throw new Error('Error finding transaction: ' + transactionInfo.error);\n        }\n        return fetch(_this20.apiUrl + '/block/' + transactionInfo.blockHash);\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (blockInfo) {\n        return { block_height: blockInfo.height };\n      });\n    }\n  }, {\n    key: 'getNetworkedUTXOs',\n    value: function getNetworkedUTXOs(address) {\n      return fetch(this.apiUrl + '/addr/' + address + '/utxo').then(function (resp) {\n        return resp.json();\n      }).then(function (utxos) {\n        return utxos.map(function (x) {\n          return {\n            value: x.satoshis,\n            confirmations: x.confirmations,\n            tx_hash: x.txid,\n            tx_output_n: x.vout\n          };\n        });\n      });\n    }\n  }]);\n\n  return InsightClient;\n}(BitcoinNetwork);\n\nvar BlockchainInfoApi = exports.BlockchainInfoApi = function (_BitcoinNetwork3) {\n  _inherits(BlockchainInfoApi, _BitcoinNetwork3);\n\n  function BlockchainInfoApi() {\n    var blockchainInfoUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://blockchain.info';\n\n    _classCallCheck(this, BlockchainInfoApi);\n\n    var _this21 = _possibleConstructorReturn(this, (BlockchainInfoApi.__proto__ || Object.getPrototypeOf(BlockchainInfoApi)).call(this));\n\n    _this21.utxoProviderUrl = blockchainInfoUrl;\n    return _this21;\n  }\n\n  _createClass(BlockchainInfoApi, [{\n    key: 'getBlockHeight',\n    value: function getBlockHeight() {\n      return fetch(this.utxoProviderUrl + '/latestblock?cors=true').then(function (resp) {\n        return resp.json();\n      }).then(function (blockObj) {\n        return blockObj.height;\n      });\n    }\n  }, {\n    key: 'getNetworkedUTXOs',\n    value: function getNetworkedUTXOs(address) {\n      return fetch(this.utxoProviderUrl + '/unspent?format=json&active=' + address + '&cors=true').then(function (resp) {\n        if (resp.status === 500) {\n          _logger.Logger.debug('UTXO provider 500 usually means no UTXOs: returning []');\n          return {\n            unspent_outputs: []\n          };\n        } else {\n          return resp.json();\n        }\n      }).then(function (utxoJSON) {\n        return utxoJSON.unspent_outputs;\n      }).then(function (utxoList) {\n        return utxoList.map(function (utxo) {\n          var utxoOut = {\n            value: utxo.value,\n            tx_output_n: utxo.tx_output_n,\n            confirmations: utxo.confirmations,\n            tx_hash: utxo.tx_hash_big_endian\n          };\n          return utxoOut;\n        });\n      });\n    }\n  }, {\n    key: 'getTransactionInfo',\n    value: function getTransactionInfo(txHash) {\n      return fetch(this.utxoProviderUrl + '/rawtx/' + txHash + '?cors=true').then(function (resp) {\n        if (resp.status === 200) {\n          return resp.json();\n        } else {\n          throw new Error('Could not lookup transaction info for \\'' + txHash + '\\'. Server error.');\n        }\n      }).then(function (respObj) {\n        return { block_height: respObj.block_height };\n      });\n    }\n  }, {\n    key: 'broadcastTransaction',\n    value: function broadcastTransaction(transaction) {\n      var form = new _formData2.default();\n      form.append('tx', transaction);\n      return fetch(this.utxoProviderUrl + '/pushtx?cors=true', {\n        method: 'POST',\n        body: form\n      }).then(function (resp) {\n        var text = resp.text();\n        return text.then(function (respText) {\n          if (respText.toLowerCase().indexOf('transaction submitted') >= 0) {\n            var txHash = _bitcoinjsLib2.default.Transaction.fromHex(transaction).getHash().reverse().toString('hex'); // big_endian\n            return txHash;\n          } else {\n            throw new _errors.RemoteServiceError(resp, 'Broadcast transaction failed with message: ' + respText);\n          }\n        });\n      });\n    }\n  }]);\n\n  return BlockchainInfoApi;\n}(BitcoinNetwork);\n\nvar LOCAL_REGTEST = new LocalRegtest('http://localhost:16268', 'http://localhost:16269', new BitcoindAPI('http://localhost:18332/', { username: 'blockstack', password: 'blockstacksystem' }));\n\nvar MAINNET_DEFAULT = new BlockstackNetwork('https://core.blockstack.org', 'https://broadcast.blockstack.org', new BlockchainInfoApi());\n\nvar network = exports.network = {\n  BlockstackNetwork: BlockstackNetwork,\n  LocalRegtest: LocalRegtest,\n  BlockchainInfoApi: BlockchainInfoApi,\n  BitcoindAPI: BitcoindAPI,\n  InsightClient: InsightClient,\n  defaults: { LOCAL_REGTEST: LOCAL_REGTEST, MAINNET_DEFAULT: MAINNET_DEFAULT }\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_interopRequireDefault","obj","__esModule","default","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","defineProperty","network","BlockchainInfoApi","InsightClient","BitcoindAPI","LocalRegtest","BlockstackNetwork","BitcoinNetwork","undefined","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_i","_s","done","next","push","length","err","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_bitcoinjsLib","_bitcoinjsLib2","_formData","_formData2","_bigi","_bigi2","_ripemd","_ripemd2","_errors","_logger","broadcastTransaction","transaction","Promise","reject","Error","getBlockHeight","getTransactionInfo","txid","getNetworkedUTXOs","address","apiUrl","broadcastServiceUrl","bitcoinAPI","arguments","networks","bitcoin","blockstackAPIUrl","layer1","btc","DUST_MINIMUM","includeUtxoMap","excludeUtxoSet","MAGIC_BYTES","coerceAddress","_bitcoinjs$address$fr","fromBase58Check","hash","version","pubKeyHashes","pubKeyHash","testnet","scriptHashes","scriptHash","indexOf","coercedVersion","toBase58Check","getDefaultBurnAddress","getNamePriceV1","fullyQualifiedName","_this","fetch","then","resp","ok","json","name_price","namePrice","satoshis","result","units","amount","fromByteArrayUnsigned","String","getNamespacePriceV1","namespaceID","_this2","namespacePrice","getNamePriceV2","_this3","status","dustMin","compareTo","getNamespacePriceV2","_this4","getNamePrice","_this5","resolve","catch","getNamespacePrice","_this6","getGracePeriod","getNamesOwned","networkAddress","names","getNamespaceBurnAddress","namespace","_this7","all","_ref","_ref2","blockHeight","_ref3","_ref4","namespaceInfo","reveal_block","getNameInfo","_this8","nameInfo","assign","getNamespaceInfo","_this9","recipient_address","getZonefile","zonefileHash","text","body","sha256","crypto","h","update","digest","getAccountStatus","tokenType","_this10","accountStatus","formattedStatus","debit_value","credit_value","getAccountHistoryPage","page","_this11","historyList","error","map","histEntry","getAccountAt","_this12","getAccountTokens","tokenList","getAccountBalance","tokenBalance","balance","broadcastServiceFetchHelper","endpoint","options","method","headers","requestHeaders","Accept","JSON","stringify","response","RemoteServiceError","transactionToWatch","confirmations","TX_BROADCAST_SERVICE_TX_ENDPOINT","requestBody","_error","MissingParameterError","broadcastZoneFile","zoneFile","TX_BROADCAST_SERVICE_ZONE_FILE_ENDPOINT","_requestBody","zonefile","respObj","hasOwnProperty","servers","broadcastNameRegistration","preorderTransaction","registerTransaction","TX_BROADCAST_SERVICE_REGISTRATION_ENDPOINT","_error3","_error2","getFeeRate","rates","Math","floor","fastestFee","countDustOutputs","getUTXOs","_this13","networkedUTXOs","returnSet","concat","excludeSet","filter","utxo","reduce","inExcludeSet","inSet","utxoToCheck","tx_hash","tx_output_n","modifyUTXOSetFrom","txHex","_this14","tx","Transaction","fromHex","ins","forEach","utxoUsed","reverseHash","Buffer","from","reverse","toString","index","txHash","getHash","outs","utxoCreated","txOutputN","payments","embed","output","script","validate","_","fromOutputScript","includeSet","resetUTXOs","getConsensusHash","x","consensus_hash","_BlockstackNetwork","getPrototypeOf","SATOSHIS_PER_BTC","_BitcoinNetwork","bitcoindUrl","bitcoindCredentials","_this16","importedBefore","jsonRPC","jsonrpc","params","Authorization","username","password","authString","_this17","txInfo","blockhash","jsonRPCBlock","block_height","height","_this18","jsonRPCImport","jsonRPCUnspent","importPromise","utxos","round","vout","_BitcoinNetwork2","insightUrl","_this19","jsonData","blocks","_this20","transactionInfo","blockHash","blockInfo","_BitcoinNetwork3","blockchainInfoUrl","_this21","utxoProviderUrl","blockObj","Logger","debug","unspent_outputs","utxoJSON","utxoList","utxoOut","tx_hash_big_endian","form","append","respText","toLowerCase","LOCAL_REGTEST","MAINNET_DEFAULT","defaults"]
}
