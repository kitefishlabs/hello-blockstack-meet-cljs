{
"version":3,
"file":"module$node_modules$cheerio$lib$api$manipulation.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/cheerio/lib/api/manipulation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cheerio$lib$api$manipulation\"] = function(global,process,require,module,exports,shadow$shims) {\nvar parse = require('../parse'),\n    $ = require('../static'),\n    updateDOM = parse.update,\n    evaluate = parse.evaluate,\n    utils = require('../utils'),\n    domEach = utils.domEach,\n    cloneDom = utils.cloneDom,\n    isHtml = utils.isHtml,\n    slice = Array.prototype.slice,\n    _ = {\n      flatten: require('lodash.flatten'),\n      bind: require('lodash.bind'),\n      forEach: require('lodash.foreach')\n    };\n\n// Create an array of nodes, recursing into arrays and parsing strings if\n// necessary\nexports._makeDomArray = function makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  } else if (elem.cheerio) {\n    return clone ? cloneDom(elem.get(), elem.options) : elem.get();\n  } else if (Array.isArray(elem)) {\n    return _.flatten(elem.map(function(el) {\n      return this._makeDomArray(el, clone);\n    }, this));\n  } else if (typeof elem === 'string') {\n    return evaluate(elem, this.options);\n  } else {\n    return clone ? cloneDom([elem]) : [elem];\n  }\n};\n\nvar _insert = function(concatenator) {\n  return function() {\n    var elems = slice.call(arguments),\n        lastIdx = this.length - 1;\n\n    return domEach(this, function(i, el) {\n      var dom, domSrc;\n\n      if (typeof elems[0] === 'function') {\n        domSrc = elems[0].call(el, i, $.html(el.children));\n      } else {\n        domSrc = elems;\n      }\n\n      dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n};\n\n/*\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @param {Array} array Target array to splice.\n * @param {Number} spliceIdx Index at which to begin changing the array.\n * @param {Number} spliceCount Number of elements to remove from the array.\n * @param {Array} newElems Elements to insert into the array.\n *\n * @api private\n */\nvar uniqueSplice = function(array, spliceIdx, spliceCount, newElems, parent) {\n  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),\n      prev = array[spliceIdx - 1] || null,\n      next = array[spliceIdx] || null;\n  var idx, len, prevIdx, node, oldParent;\n\n  // Before splicing in new elements, ensure they do not already appear in the\n  // current array.\n  for (idx = 0, len = newElems.length; idx < len; ++idx) {\n    node = newElems[idx];\n    oldParent = node.parent || node.root;\n    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);\n\n    if (oldParent && prevIdx > -1) {\n      oldParent.children.splice(prevIdx, 1);\n      if (parent === oldParent && spliceIdx > prevIdx) {\n        spliceArgs[0]--;\n      }\n    }\n\n    node.root = null;\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next || null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev || null;\n    }\n\n    node.prev = newElems[idx - 1] || prev;\n    node.next = newElems[idx + 1] || next;\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice.apply(array, spliceArgs);\n};\n\nexports.appendTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.append(this);\n\n  return this;\n};\n\nexports.prependTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.prepend(this);\n\n  return this;\n};\n\nexports.append = _insert(function(dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n\nexports.prepend = _insert(function(dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nexports.wrap = function(wrapper) {\n  var wrapperFn = typeof wrapper === 'function' && wrapper,\n      lastIdx = this.length - 1;\n\n  _.forEach(this, _.bind(function(el, i) {\n    var parent = el.parent || el.root,\n        siblings = parent.children,\n        dom, index;\n\n    if (!parent) {\n      return;\n    }\n\n    if (wrapperFn) {\n      wrapper = wrapperFn.call(el, i);\n    }\n\n    if (typeof wrapper === 'string' && !isHtml(wrapper)) {\n      wrapper = this.parents().last().find(wrapper).clone();\n    }\n\n    dom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);\n    index = siblings.indexOf(el);\n\n    updateDOM([el], dom[0]);\n    // The previous operation removed the current element from the `siblings`\n    // array, so the `dom` array can be inserted without removing any\n    // additional elements.\n    uniqueSplice(siblings, index, 0, dom, parent);\n  }, this));\n\n  return this;\n};\n\nexports.after = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertAfter = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.before = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertBefore = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\n/*\n  remove([selector])\n*/\nexports.remove = function(selector) {\n  var elems = this;\n\n  // Filter if we have selector\n  if (selector)\n    elems = elems.filter(selector);\n\n  domEach(elems, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    if (index < 0) return;\n\n    siblings.splice(index, 1);\n    if (el.prev) {\n      el.prev.next = el.next;\n    }\n    if (el.next) {\n      el.next.prev = el.prev;\n    }\n    el.prev = el.next = el.parent = el.root = null;\n  });\n\n  return this;\n};\n\nexports.replaceWith = function(content) {\n  var self = this;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),\n        index;\n\n    // In the case that `dom` contains nodes that already exist in other\n    // structures, ensure those nodes are properly removed.\n    updateDOM(dom, null);\n\n    index = siblings.indexOf(el);\n\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    el.parent = el.prev = el.next = el.root = null;\n  });\n\n  return this;\n};\n\nexports.empty = function() {\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    el.children.length = 0;\n  });\n  return this;\n};\n\n/**\n * Set/Get the HTML\n */\nexports.html = function(str) {\n  if (str === undefined) {\n    if (!this[0] || !this[0].children) return null;\n    return $.html(this[0].children, this.options);\n  }\n\n  var opts = this.options;\n\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts);\n\n    updateDOM(content, el);\n  });\n\n  return this;\n};\n\nexports.toString = function() {\n  return $.html(this, this.options);\n};\n\nexports.text = function(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return $.text(this);\n  } else if (typeof str === 'function') {\n    // Function support\n    return domEach(this, function(i, el) {\n      var $el = [el];\n      return exports.text.call($el, str.call(el, i, $.text($el)));\n    });\n  }\n\n  // Append text node to each selected elements\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var elem = {\n      data: '' + str,\n      type: 'text',\n      parent: el,\n      prev: null,\n      next: null,\n      children: []\n    };\n\n    updateDOM(elem, el);\n  });\n\n  return this;\n};\n\nexports.clone = function() {\n  return this._make(cloneDom(this.get(), this.options));\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","parse","$","updateDOM","update","evaluate","utils","domEach","cloneDom","isHtml","slice","Array","prototype","_","flatten","bind","forEach","_makeDomArray","exports._makeDomArray","elem","clone","cheerio","get","options","isArray","map","el","_insert","concatenator","elems","call","arguments","lastIdx","length","i","domSrc","html","children","dom","uniqueSplice","array","spliceIdx","spliceCount","newElems","parent","spliceArgs","concat","prev","next","len","oldParent","idx","node","prevIdx","root","indexOf","splice","apply","appendTo","exports.appendTo","target","constructor","_originalRoot","append","prependTo","exports.prependTo","prepend","wrap","exports.wrap","wrapper","wrapperFn","siblings","parents","last","find","index","after","exports.after","insertAfter","exports.insertAfter","clones","self","remove","clonedSelf","push","before","exports.before","insertBefore","exports.insertBefore","exports.remove","selector","filter","replaceWith","exports.replaceWith","content","empty","exports.empty","exports.html","str","undefined","opts","toString","exports.toString","text","exports.text","$el","data","type","exports.clone","_make"]
}
