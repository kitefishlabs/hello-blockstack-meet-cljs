{
"version":3,
"file":"module$node_modules$des_DOT_js$lib$des$cipher.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/des_DOT_js/lib/des/cipher.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$des_DOT_js$lib$des$cipher\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Cipher","options","type","blockSize","_init","buffer","Array","bufferOff","assert","prototype","Cipher.prototype._init","update","Cipher.prototype.update","data","length","_updateDecrypt","_updateEncrypt","_buffer","Cipher.prototype._buffer","off","min","Math","i","_flushBuffer","Cipher.prototype._flushBuffer","out","_update","Cipher.prototype._updateEncrypt","inputOff","outputOff","max","Cipher.prototype._updateDecrypt","count","ceil","final","Cipher.prototype.final","first","last","_finalEncrypt","_finalDecrypt","concat","_pad","Cipher.prototype._pad","Cipher.prototype._finalEncrypt","_unpad","Cipher.prototype._unpad","Cipher.prototype._finalDecrypt","equal"]
}
