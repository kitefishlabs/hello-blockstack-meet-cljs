{
"version":3,
"file":"module$node_modules$lodash_DOT_assignin$index.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/lodash_DOT_assignin/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash_DOT_assignin$index\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = assignIn;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","apply","func","thisArg","args","length","call","baseRest","start","nativeMax","undefined","arguments","index","array","Array","otherArgs","isIndex","value","MAX_SAFE_INTEGER","reIsUint","test","isArrayLike","tag","isObject","objectToString","funcTag","genTag","type","objectProto","Object","prototype","hasOwnProperty","toString","propertyIsEnumerable","Math","max","isArray","assignIn","createAssigner","assigner","object","sources","customizer","guard","other","source","argsTag","result","n","iteratee","skipIndexes","key","push","Ctor","constructor","isProto","props","objValue"]
}
