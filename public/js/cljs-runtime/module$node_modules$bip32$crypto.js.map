{
"version":3,
"file":"module$node_modules$bip32$crypto.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAClH,IAAIC,WAAaJ,OAAA,CAAQ,yCAAR,CAAjB,CACIK,WAAaL,OAAA,CAAQ,yCAAR,CAYjBC,OAAAC,QAAA,CAAiB,CAAEI,QAVnBA,QAAiB,CAACC,MAAD,CAAS,CACxB,MAAOH,WAAA,CAAW,QAAX,CAAAI,OAAA,CACLJ,UAAA,CAAW,QAAX,CAAAI,OAAA,CAA4BD,MAA5B,CAAAE,OAAA,EADK,CAAAA,OAAA,EADiB,CAUT,CAAWC,WAJ5BA,QAAoB,CAACC,GAAD,CAAMC,IAAN,CAAY,CAC9B,MAAOP,WAAA,CAAW,QAAX,CAAqBM,GAArB,CAAAH,OAAA,CAAiCI,IAAjC,CAAAH,OAAA,EADuB,CAIf,CAdiG;",
"sources":["node_modules/bip32/crypto.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip32$crypto\"] = function(global,process,require,module,exports,shadow$shims) {\nlet createHash = require('create-hash')\nlet createHmac = require('create-hmac')\n\nfunction hash160 (buffer) {\n  return createHash('rmd160').update(\n    createHash('sha256').update(buffer).digest()\n  ).digest()\n}\n\nfunction hmacSHA512 (key, data) {\n  return createHmac('sha512', key).update(data).digest()\n}\n\nmodule.exports = { hash160, hmacSHA512 }\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","createHash","createHmac","hash160","buffer","update","digest","hmacSHA512","key","data"]
}
