shadow$provide.module$node_modules$blockstack$lib$storage$hub=function(global,process,require,module,exports,shadow$shims){function connectToGaiaHub(gaiaHubUrl,challengeSignerHex,associationToken$jscomp$0){if(!associationToken$jscomp$0)try{var userData=(0,_authApp.loadUserData)();userData&&userData.gaiaAssociationToken&&(associationToken$jscomp$0=userData.gaiaAssociationToken)}catch(e){associationToken$jscomp$0=void 0}_logger.Logger.debug("connectToGaiaHub: "+gaiaHubUrl+"/hub_info");return fetch(gaiaHubUrl+
"/hub_info").then(function(response){return response.json()}).then(function(hubInfo){var readURL=hubInfo.read_url_prefix;var associationToken=associationToken$jscomp$0;var token=hubInfo.challenge_text;var handlesV1Auth=hubInfo.latest_auth_version&&1<=parseInt(hubInfo.latest_auth_version.slice(1),10);hubInfo=(0,_index.getPublicKeyFromPrivate)(challengeSignerHex);if(handlesV1Auth)handlesV1Auth=_crypto2.default.randomBytes(16).toString("hex"),token={gaiaChallenge:token,hubUrl:gaiaHubUrl,iss:hubInfo,
salt:handlesV1Auth,associationToken:associationToken},token="v1:"+(new _jsontokens.TokenSigner("ES256K",challengeSignerHex)).sign(token);else{associationToken=void 0;try{associationToken=JSON.parse(token)}catch(err){throw Error("Failed in parsing legacy challenge text from the gaia hub.");}if("gaiahub"===associationToken[0]&&"blockstack_storage_please_sign"===associationToken[3])associationToken=(0,_index.hexStringToECPair)(challengeSignerHex+(64===challengeSignerHex.length?"01":"")),token=_bitcoinjsLib2.default.crypto.sha256(token),
token=associationToken.sign(token).toDER().toString("hex"),associationToken=(0,_index.getPublicKeyFromPrivate)(challengeSignerHex),token=shadow$shims.Buffer.from(JSON.stringify({publickey:associationToken,signature:token})).toString("base64");else throw Error("Failed to connect to legacy gaia hub. If you operate this hub, please update.");}associationToken=(0,_utils.ecPairToAddress)((0,_index.hexStringToECPair)(challengeSignerHex+(64===challengeSignerHex.length?"01":"")));return{url_prefix:readURL,
address:associationToken,token:token,server:gaiaHubUrl}})}function setLocalGaiaHubConnection(){var userData=(0,_authApp.loadUserData)();userData.hubUrl||(userData.hubUrl=_authConstants.BLOCKSTACK_DEFAULT_GAIA_HUB_URL,window.localStorage.setItem(_authConstants.BLOCKSTACK_STORAGE_LABEL,JSON.stringify(userData)),userData=(0,_authApp.loadUserData)());return connectToGaiaHub(userData.hubUrl,userData.appPrivateKey,userData.associationToken).then(function(gaiaConfig){localStorage.setItem(BLOCKSTACK_GAIA_HUB_LABEL,
JSON.stringify(gaiaConfig));return gaiaConfig})}Object.defineProperty(exports,"__esModule",{value:!0});exports.BLOCKSTACK_GAIA_HUB_LABEL=void 0;exports.uploadToGaiaHub=function(filename,contents,hubConfig){var contentType=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"application/octet-stream";_logger.Logger.debug("uploadToGaiaHub: uploading "+filename+" to "+hubConfig.server);return fetch(hubConfig.server+"/store/"+hubConfig.address+"/"+filename,{method:"POST",headers:{"Content-Type":contentType,
Authorization:"bearer "+hubConfig.token},body:contents}).then(function(response){if(response.ok)return response.text();throw Error("Error when uploading to Gaia hub");}).then(function(responseText){return JSON.parse(responseText)}).then(function(responseJSON){return responseJSON.publicURL})};exports.getFullReadUrl=function(filename,hubConfig){return""+hubConfig.url_prefix+hubConfig.address+"/"+filename};exports.connectToGaiaHub=connectToGaiaHub;exports.setLocalGaiaHubConnection=setLocalGaiaHubConnection;
exports.getOrSetLocalGaiaHubConnection=function(){var hubConfig=localStorage.getItem(BLOCKSTACK_GAIA_HUB_LABEL);return hubConfig&&(hubConfig=JSON.parse(hubConfig),null!==hubConfig)?Promise.resolve(hubConfig):setLocalGaiaHubConnection()};exports.getBucketUrl=function(gaiaHubUrl,appPrivateKey){var challengeSigner=void 0;try{challengeSigner=_bitcoinjsLib2.default.ECPair.fromPrivateKey(new shadow$shims.Buffer(appPrivateKey,"hex"))}catch(e){return Promise.reject(e)}return fetch(gaiaHubUrl+"/hub_info").then(function(response){return response.text()}).then(function(responseText){return JSON.parse(responseText)}).then(function(responseJSON){responseJSON=
responseJSON.read_url_prefix;var address=(0,_utils.ecPairToAddress)(challengeSigner);return""+responseJSON+address+"/"})};var _bitcoinjsLib2=(global=require("module$node_modules$bitcoinjs_lib$src$index"))&&global.__esModule?global:{default:global},_crypto2=(global=require("module$node_modules$crypto_browserify$index"))&&global.__esModule?global:{default:global},_jsontokens=require("module$node_modules$jsontokens$lib$index"),_authApp=require("module$node_modules$blockstack$lib$auth$authApp"),_utils=
require("module$node_modules$blockstack$lib$utils"),_index=require("module$node_modules$blockstack$lib$index"),_authConstants=require("module$node_modules$blockstack$lib$auth$authConstants"),_logger=require("module$node_modules$blockstack$lib$logger"),BLOCKSTACK_GAIA_HUB_LABEL=exports.BLOCKSTACK_GAIA_HUB_LABEL="blockstack-gaia-hub-config"}
//# sourceMappingURL=module$node_modules$blockstack$lib$storage$hub.js.map
