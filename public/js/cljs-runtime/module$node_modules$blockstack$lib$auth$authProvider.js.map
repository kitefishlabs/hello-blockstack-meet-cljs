{
"version":3,
"file":"module$node_modules$blockstack$lib$auth$authProvider.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGtIC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,sBAAA,CAwBAA,QAA8B,EAAG,CAC/B,IAAIC,UAAYC,aAAAC,QAAAC,MAAA,CAA4BC,QAAAC,OAA5B,CAChB,OAA8B,KAA9B,GAAIL,SAAAM,YAAJ,EAAgEC,IAAAA,EAAhE,GAAsCP,SAAAM,YAAtC,CACSN,SAAAM,YAAAE,MAAA,CAA4BC,MAAAC,mBAA5B,CAAwD,GAAxD,CAAAC,KAAA,CAAkE,EAAlE,CADT,CAGS,IALsB,CAvBjCjB,QAAAkB,iBAAA,CAyCAA,QAAyB,CAACN,WAAD,CAAc,CACrC,MAAO,KAAIO,OAAJ,CAAY,QAAS,CAACC,OAAD;AAAUC,MAAV,CAAkB,CAC5C,GAAKT,WAAL,CAEO,CAEL,IAAIU,YADU,CAAC,CAAA,CAAGC,WAAAC,YAAJ,EAA6BZ,WAA7B,CAAAa,QACIC,aAClB,IAAI,CACFC,OAAAC,OAAAC,MAAA,CAAqB,yBAArB,CAAiDP,WAAjD,CACA,CAAAQ,KAAA,CAAMR,WAAN,CAAAS,KAAA,CAAwB,QAAS,CAACC,QAAD,CAAW,CAC1C,MAAOA,SAAAC,KAAA,EADmC,CAA5C,CAAAF,KAAA,CAEQ,QAAS,CAACG,YAAD,CAAe,CAC9B,MAAOC,KAAA1B,MAAA,CAAWyB,YAAX,CADuB,CAFhC,CAAAH,KAAA,CAIQ,QAAS,CAACK,YAAD,CAAe,CAC9BhB,OAAA,CAAQgB,YAAR,CAD8B,CAJhC,CAAAC,MAAA,CAMS,QAAS,CAACC,CAAD,CAAI,CACpBX,OAAAC,OAAAC,MAAA,CAAqBS,CAAAC,MAArB,CACAlB,OAAA,CAAO,+BAAP,CAFoB,CANtB,CAFE,CAYF,MAAOiB,CAAP,CAAU,CACVX,OAAAC,OAAAC,MAAA,CAAqBS,CAAAC,MAArB,CACA,CAAAlB,MAAA,CAAO,+BAAP,CAFU,CAfP,CAFP,IACEA,OAAA,CAAO,sBAAP,CAF0C,CAAvC,CAD8B,CAxCvCrB;OAAAwC,kBAAA,CA8EAA,QAA0B,CAAC5B,WAAD,CAAc6B,YAAd,CAA4B,CAEhDC,WAAAA,CADU,CAAC,CAAA,CAAGnB,WAAAC,YAAJ,EAA6BZ,WAA7B,CAAAa,QACIkB,aAClBhB,QAAAC,OAAAC,MAAA,CAAqBa,WAArB,CACA,IAAIA,WAAJ,CACEA,WAAA,CAAc,CAAC,CAAA,CAAGE,MAAAC,2BAAJ,EAAuCH,WAAvC,CAAoD,cAApD,CAAoED,YAApE,CADhB,KAGE,MAAUK,MAAJ,CAAU,sBAAV,CAAN,CAEFC,MAAArC,SAAA,CAAkBgC,WATkC,CA1EtD,KAAInC,cAU0C,CAZ1CyC,MAY0C,CAZ3BlD,OAAA,CAAQ,wCAAR,CAY2B,GAVHkD,MAUUC,WAAP,CAVHD,MAUG,CAA8B,CAAExC,QAVnCwC,MAUiC,CAV5E,CAEIzB,YAAczB,OAAA,CAAQ,0CAAR,CAFlB;AAII8C,OAAS9C,OAAA,CAAQ,0CAAR,CAJb,CAMIiB,OAASjB,OAAA,CAAQ,0CAAR,CANb,CAQI6B,QAAU7B,OAAA,CAAQ,2CAAR,CApBwH;",
"sources":["node_modules/blockstack/lib/auth/authProvider.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$auth$authProvider\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAuthRequestFromURL = getAuthRequestFromURL;\nexports.fetchAppManifest = fetchAppManifest;\nexports.redirectUserToApp = redirectUserToApp;\n\nvar _queryString = require('query-string');\n\nvar _queryString2 = _interopRequireDefault(_queryString);\n\nvar _jsontokens = require('jsontokens');\n\nvar _index = require('../index');\n\nvar _utils = require('../utils');\n\nvar _logger = require('../logger');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Retrieves the authentication request from the query string\n * @return {String|null} the authentication request or `null` if\n * the query string parameter `authRequest` is not found\n * @private\n */\nfunction getAuthRequestFromURL() {\n  var queryDict = _queryString2.default.parse(location.search);\n  if (queryDict.authRequest !== null && queryDict.authRequest !== undefined) {\n    return queryDict.authRequest.split(_utils.BLOCKSTACK_HANDLER + ':').join('');\n  } else {\n    return null;\n  }\n}\n\n/**\n * Fetches the contents of the manifest file specified in the authentication request\n *\n * @param  {String} authRequest encoded and signed authentication request\n * @return {Promise<Object|String>} Returns a `Promise` that resolves to the JSON\n * object manifest file unless there's an error in which case rejects with an error\n * message.\n * @private\n */\nfunction fetchAppManifest(authRequest) {\n  return new Promise(function (resolve, reject) {\n    if (!authRequest) {\n      reject('Invalid auth request');\n    } else {\n      var payload = (0, _jsontokens.decodeToken)(authRequest).payload;\n      var manifestURI = payload.manifest_uri;\n      try {\n        _logger.Logger.debug('Fetching manifest from ' + manifestURI);\n        fetch(manifestURI).then(function (response) {\n          return response.text();\n        }).then(function (responseText) {\n          return JSON.parse(responseText);\n        }).then(function (responseJSON) {\n          resolve(responseJSON);\n        }).catch(function (e) {\n          _logger.Logger.debug(e.stack);\n          reject('Could not fetch manifest.json');\n        });\n      } catch (e) {\n        _logger.Logger.debug(e.stack);\n        reject('Could not fetch manifest.json');\n      }\n    }\n  });\n}\n\n/**\n * Redirect the user's browser to the app using the `redirect_uri`\n * specified in the authentication request, passing the authentication\n * response token as a query parameter.\n *\n * @param {String} authRequest  encoded and signed authentication request token\n * @param  {String} authResponse encoded and signed authentication response token\n * @return {void}\n * @throws {Error} if there is no redirect uri\n * @private\n */\nfunction redirectUserToApp(authRequest, authResponse) {\n  var payload = (0, _jsontokens.decodeToken)(authRequest).payload;\n  var redirectURI = payload.redirect_uri;\n  _logger.Logger.debug(redirectURI);\n  if (redirectURI) {\n    redirectURI = (0, _index.updateQueryStringParameter)(redirectURI, 'authResponse', authResponse);\n  } else {\n    throw new Error('Invalid redirect URI');\n  }\n  window.location = redirectURI;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","getAuthRequestFromURL","queryDict","_queryString2","default","parse","location","search","authRequest","undefined","split","_utils","BLOCKSTACK_HANDLER","join","fetchAppManifest","Promise","resolve","reject","manifestURI","_jsontokens","decodeToken","payload","manifest_uri","_logger","Logger","debug","fetch","then","response","text","responseText","JSON","responseJSON","catch","e","stack","redirectUserToApp","authResponse","redirectURI","redirect_uri","_index","updateQueryStringParameter","Error","window","_queryString","__esModule"]
}
