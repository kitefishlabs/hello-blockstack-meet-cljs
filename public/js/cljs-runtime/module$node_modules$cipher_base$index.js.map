{
"version":3,
"file":"module$node_modules$cipher_base$index.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/cipher-base/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cipher_base$index\"] = function(global,process,require,module,exports,shadow$shims) {\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","CipherBase","hashMode","Transform","call","_finalOrDigest","final","_final","__final","_encoding","_decoder","Buffer","StringDecoder","inherits","prototype","update","CipherBase.prototype.update","data","inputEnc","outputEnc","from","outData","_update","_toString","setAutoPadding","CipherBase.prototype.setAutoPadding","getAuthTag","CipherBase.prototype.getAuthTag","Error","setAuthTag","CipherBase.prototype.setAuthTag","setAAD","CipherBase.prototype.setAAD","_transform","CipherBase.prototype._transform","_","next","push","e","err","_flush","CipherBase.prototype._flush","done","CipherBase.prototype._finalOrDigest","alloc","CipherBase.prototype._toString","value","enc","fin","out","write","end"]
}
