{
"version":3,
"file":"module$node_modules$browserify_rsa$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAa1HC,QAASA,IAAG,CAACC,GAAD,CAAMC,IAAN,CAAY,CARlBC,IAAAA,wCAAIC,IAAA,CASWF,IATX,CAGR,KAAA,sCAFcC,uCAAAE,MAAA,CAAQC,EAAAC,KAAA,CAQHL,IARWM,QAAR,CAAR,CAAAC,OAAA,CACN,IAAIH,EAAJ,CAOWJ,IAPJQ,eAAP,CADM,CAAAC,QAAAC,EAEd,wCAAA,CAEYT,uCAAAU,KAAA,CAIOX,IAJAM,QAAP,CAKZ,KAAIM,IAAMZ,IAAAM,QAAAO,WAAA,EACAT,GAAAC,KAAA,CAAQL,IAAAM,QAAR,CACNQ;GAAAA,CAAUC,CAAA,IAAIX,EAAJ,CAAOL,GAAP,CAAAgB,KAAA,CAAgBL,qCAAhB,CAAAM,KAAA,CAAqChB,IAAAM,QAArC,CACd,KAAIW,GAAKH,GAAAX,MAAA,CAAcC,EAAAC,KAAA,CAAQL,IAAAkB,OAAR,CAAd,CAAT,CACIC,GAAKL,GAAAX,MAAA,CAAcC,EAAAC,KAAA,CAAQL,IAAAoB,OAAR,CAAd,CACLC,sCAAAA,CAAOrB,IAAAsB,YACX,KAAIC,EAAIvB,IAAAkB,OACJM,IAAAA,CAAIxB,IAAAoB,OACJK,GAAAA,CAAKR,EAAAV,OAAA,CAAUP,IAAA0B,UAAV,CACLC,GAAAA,CAAKR,EAAAZ,OAAA,CAAUP,IAAA4B,UAAV,CACTH,GAAA,CAAKA,EAAAhB,QAAA,EACLkB,GAAA,CAAKA,EAAAlB,QAAA,EACDoB,sCAAAA,CAAIJ,EAAAK,KAAA,CAAQH,EAAR,CAAAI,KAAA,CAAiBV,qCAAjB,CAAAL,KAAA,CAA4BO,CAA5B,CACRM,sCAAAE,KAAA,CAAOP,GAAP,CACAG,GAAAK,KAAA,CAAQH,qCAAR,CACA;MAAO,KAAII,mBAAJ,CAAWN,EAAAI,KAAA,CAAQG,uCAAR,CAAAlB,KAAA,CAA+BhB,IAAAM,QAA/B,CAAA6B,QAAA,CAAqD,CAAA,CAArD,CAA4DvB,GAA5D,CAAX,CAjBe,CAoBxBV,QAASA,KAAI,CAACF,IAAD,CAAO,CAGlB,IAFA,IAAIY,IAAMZ,IAAAM,QAAAO,WAAA,EAAV,CACIZ,EAAI,IAAIG,EAAJ,CAAOgC,WAAA,CAAYxB,GAAZ,CAAP,CACR,CAA+B,CAA/B,EAAOX,CAAAoC,IAAA,CAAMrC,IAAAM,QAAN,CAAP,EAAoC,CAACL,CAAAe,KAAA,CAAOhB,IAAAkB,OAAP,CAArC,EAA4D,CAACjB,CAAAe,KAAA,CAAOhB,IAAAoB,OAAP,CAA7D,CAAA,CACEnB,CAAA,CAAI,IAAIG,EAAJ,CAAOgC,WAAA,CAAYxB,GAAZ,CAAP,CAEN,OAAOX,EANW,CAhCpB,IAAIG,GAAKV,OAAA,CAAQ,sCAAR,CAAT,CACI0C,YAAc1C,OAAA,CAAQ,yCAAR,CAClBC,OAAAC,QAAA,CAAiBE,GA6BjBA,IAAAI,KAAA,CAAWA,IAhC+G;",
"sources":["node_modules/browserify-rsa/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_rsa$index\"] = function(global,process,require,module,exports,shadow$shims) {\nvar bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","crt","msg","priv","r","getr","toRed","bn","mont","modulus","redPow","publicExponent","fromRed","blinder","invm","len","byteLength","blinded","mul","umod","c1","prime1","c2","prime2","qinv","coefficient","p","q","m1","exponent1","m2","exponent2","h","isub","imul","iadd","Buffer","unblinder","toArray","randomBytes","cmp"]
}
