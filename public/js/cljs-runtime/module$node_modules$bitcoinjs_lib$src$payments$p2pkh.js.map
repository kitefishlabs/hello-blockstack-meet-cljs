{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2pkh.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2pkh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2pkh\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\nconst ecc = require('tiny-secp256k1')\n\nconst bcrypto = require('../crypto')\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\nconst bs58check = require('bs58check')\n\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh (a, opts) {\n  if (\n    !a.address &&\n    !a.hash &&\n    !a.output &&\n    !a.pubkey &&\n    !a.input\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    network: typef.maybe(typef.Object),\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    output: typef.maybe(typef.BufferN(25)),\n\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    input: typef.maybe(typef.Buffer)\n  }, a)\n\n  const _address = lazy.value(function () {\n    const payload = bs58check.decode(a.address)\n    const version = payload.readUInt8(0)\n    const hash = payload.slice(1)\n    return { version, hash }\n  })\n  const _chunks = lazy.value(function () { return bscript.decompile(a.input) })\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return\n\n    const payload = Buffer.allocUnsafe(21)\n    payload.writeUInt8(network.pubKeyHash, 0)\n    o.hash.copy(payload, 1)\n    return bs58check.encode(payload)\n  })\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(3, 23)\n    if (a.address) return _address().hash\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey)\n  })\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG\n    ])\n  })\n  lazy.prop(o, 'pubkey', function () {\n    if (!a.input) return\n    return _chunks()[1]\n  })\n  lazy.prop(o, 'signature', function () {\n    if (!a.input) return\n    return _chunks()[0]\n  })\n  lazy.prop(o, 'input', function () {\n    if (!a.pubkey) return\n    if (!a.signature) return\n    return bscript.compile([a.signature, a.pubkey])\n  })\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return\n    return []\n  })\n\n  // extended validation\n  if (opts.validate) {\n    let hash\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash) throw new TypeError('Invalid version or Network mismatch')\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address')\n      hash = _address().hash\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch')\n      else hash = a.hash\n    }\n\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG) throw new TypeError('Output is invalid')\n\n      const hash2 = a.output.slice(3, 23)\n      if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch')\n      else hash = hash2\n    }\n\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey)\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch')\n      else hash = pkh\n    }\n\n    if (a.input) {\n      const chunks = _chunks()\n      if (chunks.length !== 2) throw new TypeError('Input is invalid')\n      if (!bscript.isCanonicalScriptSignature(chunks[0])) throw new TypeError('Input has invalid signature')\n      if (!ecc.isPoint(chunks[1])) throw new TypeError('Input has invalid pubkey')\n\n      if (a.signature && !a.signature.equals(chunks[0])) throw new TypeError('Signature mismatch')\n      if (a.pubkey && !a.pubkey.equals(chunks[1])) throw new TypeError('Pubkey mismatch')\n\n      const pkh = bcrypto.hash160(chunks[1])\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2pkh\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","lazy","typef","OPS","ecc","bcrypto","bscript","BITCOIN_NETWORK","bitcoin","bs58check","p2pkh","a","opts","address","hash","output","pubkey","input","TypeError","Object","assign","validate","network","maybe","String","BufferN","isPoint","signature","isCanonicalScriptSignature","Buffer","_address","value","payload","decode","version","readUInt8","slice","_chunks","decompile","o","prop","allocUnsafe","writeUInt8","pubKeyHash","copy","encode","hash160","compile","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","length","equals","hash2","pkh","chunks"]
}
