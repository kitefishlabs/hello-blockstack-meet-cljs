shadow$provide.module$node_modules$blockstack$lib$logger=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,"__esModule",{value:!0});exports.Logger=exports.levels=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}
return function(Constructor,protoProps,staticProps){protoProps&&defineProperties(Constructor.prototype,protoProps);staticProps&&defineProperties(Constructor,staticProps);return Constructor}}(),_config=require("module$node_modules$blockstack$lib$config");global=exports.levels=["debug","info","warn","error","none"];var levelToInt={};for(process=0;process<global.length;process++)levelToInt[global[process]]=process;exports.Logger=function(){function Logger(){if(!(this instanceof Logger))throw new TypeError("Cannot call a class as a function");
}_createClass(Logger,null,[{key:"error",value:function(message){this.shouldLog("error")&&console.error(this.logMessage("error",message))}},{key:"warn",value:function(message){this.shouldLog("warn")&&console.warn(this.logMessage("warn",message))}},{key:"info",value:function(message){this.shouldLog("info")&&console.log(this.logMessage("info",message))}},{key:"debug",value:function(message){this.shouldLog("debug")&&console.log(this.logMessage("debug",message))}},{key:"logMessage",value:function(level,
message){return"["+level.toUpperCase()+"] "+message}},{key:"shouldLog",value:function(level){return levelToInt[_config.config.logLevel]<=levelToInt[level]}}]);return Logger}()}
//# sourceMappingURL=module$node_modules$blockstack$lib$logger.js.map
