{
"version":3,
"file":"module$node_modules$browserify_cipher$browser.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/browserify-cipher/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_cipher$browser\"] = function(global,process,require,module,exports,shadow$shims) {\nvar DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","createCipheriv","suite","key","iv","toLowerCase","aesModes","aes","desModes","DES","mode","TypeError","createDecipheriv","decrypt","ebtk","createCipher","Cipher","password","keyLen","ivLen","keys","Cipheriv","createDecipher","Decipher","Decipheriv","listCiphers","getCiphers","Object","concat"]
}
