{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$ripemd.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/hash_DOT_js/lib/hash/ripemd.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$ripemd\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","RIPEMD160","BlockHash","call","h","endian","f","j","x","y","z","utils","common","rotl32","sum32","sum32_3","sum32_4","inherits","ripemd160","blockSize","outSize","hmacStrength","padLength","prototype","_update","RIPEMD160.prototype._update","msg","start","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","r","s","rh","sh","_digest","RIPEMD160.prototype._digest","enc","toHex32","split32"]
}
