{
"version":3,
"file":"module$node_modules$triplesec$lib$sha384.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAEzH,SAAQ,EAAG,CAAA,IAERC,UAAY,EAAAC,eAFJ,CAGRC,UAAYA,QAAQ,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAAyFC,QAASA,KAAI,EAAG,CAAE,IAAAC,YAAA,CAAmBH,KAArB,CAAvG,IAAKI,IAAIA,GAAT,GAAgBH,OAAhB,CAA8BJ,SAAAQ,KAAA,CAAeJ,MAAf,CAAuBG,GAAvB,CAAJ,GAAiCJ,KAAA,CAAMI,GAAN,CAAjC,CAA8CH,MAAA,CAAOG,GAAP,CAA9C,CAA2GF,KAAAI,UAAA,CAAiBL,MAAAK,UAAkBN,MAAAM,UAAA,CAAkB,IAAIJ,IAAQF,MAAAO,UAAA,CAAkBN,MAAAK,UAAkB,OAAON,MAAnP,CAEtC,KAA+BQ,aAAxBf,OAAAgB,CAAQ,6CAARA,CAAuCD,aAE9C,KAAAE;AAAQjB,OAAA,CAAQ,0CAAR,CAAR,KAA6BkB,OAASD,KAAAC,OAAtC,KAAoDC,OAASF,KAAAE,OAE7D,KAAAC,gBAAU,QAAQ,CAACC,MAAD,CAAS,CAGzBD,QAASA,OAAM,EAAG,CAChB,MAAOA,OAAAN,UAAAJ,YAAAY,MAAA,CAAmC,IAAnC,CAAyCC,SAAzC,CADS,CAFlBjB,SAAA,CAAUc,MAAV,CAAkBC,MAAlB,CAMAD,OAAAI,YAAA,CAAqB,EAErBJ,OAAAP,UAAAW,YAAA,CAA+BJ,MAAAI,YAE/BJ,OAAAP,UAAAY,SAAA,CAA4BC,QAAQ,EAAG,CACrC,MAAO,KAAAC,MAAP,CAAoB,IAAIZ,YAAJ,CAAiBI,MAAAS,QAAA,CAAe,CAAC,UAAD,CAAa,UAAb,CAAyB,UAAzB,CAAqC,SAArC,CAAiD,UAAjD,CAA6D,SAA7D,CAAyE,SAAzE,CAAqF,UAArF,CAAiG,UAAjG,CAA6G,UAA7G;AAAyH,UAAzH,CAAqI,UAArI,CAAiJ,UAAjJ,CAA6J,UAA7J,CAAyK,UAAzK,CAAqL,UAArL,CAAf,CAAjB,CADiB,CAIvCR,OAAAP,UAAAgB,YAAA,CAA+BC,QAAQ,EAAG,CAExC,IAAAC,KAAOX,MAAAN,UAAAe,YAAAjB,KAAA,CAAkC,IAAlC,CACPmB,KAAAC,SAAA,EAAiB,EACjB,OAAOD,KAJiC,CAO1CX,OAAAP,UAAAoB,MAAA,CAAyBC,QAAQ,EAAG,CAElC,IAAAC,IAAM,IAAIf,MACV,KAAAgB,QAAA,CAAaD,GAAb,CACA,OAAOA,IAJ2B,CAOpC,OAAOf,OA7BkB,CAAlB,CA+BNF,MA/BM,CAwCThB,QAAAkB,OAAA,CAAiBA,eAEjBlB,QAAAmC,UAAA,CATYA,QAAQ,CAACC,CAAD,CAAI,CAEtB,IAAAH,IAAMI,CAAC,IAAInB,eAALmB,UAAA,CAAsBD,CAAtB,CACNA,EAAAE,MAAA,EACA,OAAOL,IAJe,CA1Cd,CAAX,CAADvB,KAAA,CAqDQ,IArDR,CAF0H;",
"sources":["node_modules/triplesec/lib/sha384.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$triplesec$lib$sha384\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var Global, SHA384, SHA512, WordArray, X64WordArray, transform, _ref, _ref1,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('./wordarray'), X64WordArray = _ref.X64WordArray, WordArray = _ref.WordArray;\n\n  _ref1 = require('./sha512'), SHA512 = _ref1.SHA512, Global = _ref1.Global;\n\n  SHA384 = (function(_super) {\n    __extends(SHA384, _super);\n\n    function SHA384() {\n      return SHA384.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA384.output_size = 384 / 8;\n\n    SHA384.prototype.output_size = SHA384.output_size;\n\n    SHA384.prototype._doReset = function() {\n      return this._hash = new X64WordArray(Global.convert([0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4]));\n    };\n\n    SHA384.prototype._doFinalize = function() {\n      var hash;\n      hash = SHA384.__super__._doFinalize.call(this);\n      hash.sigBytes -= 16;\n      return hash;\n    };\n\n    SHA384.prototype.clone = function() {\n      var out;\n      out = new SHA384();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA384;\n\n  })(SHA512);\n\n  transform = function(x) {\n    var out;\n    out = (new SHA384).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.SHA384 = SHA384;\n\n  exports.transform = transform;\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__hasProp","hasOwnProperty","__extends","child","parent","ctor","constructor","key","call","prototype","__super__","X64WordArray","_ref","_ref1","SHA512","Global","SHA384","_super","apply","arguments","output_size","_doReset","SHA384.prototype._doReset","_hash","convert","_doFinalize","SHA384.prototype._doFinalize","hash","sigBytes","clone","SHA384.prototype.clone","out","copy_to","transform","x","finalize","scrub"]
}
