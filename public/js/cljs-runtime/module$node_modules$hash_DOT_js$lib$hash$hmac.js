shadow$provide.module$node_modules$hash_DOT_js$lib$hash$hmac=function(global,process,require,module,exports,shadow$shims){function Hmac(hash,key,enc){if(!(this instanceof Hmac))return new Hmac(hash,key,enc);this.Hash=hash;this.blockSize=hash.blockSize/8;this.outSize=hash.outSize/8;this.outer=this.inner=null;this._init(utils.toArray(key,enc))}var utils=require("module$node_modules$hash_DOT_js$lib$hash$utils"),assert=require("module$node_modules$minimalistic_assert$index");module.exports=Hmac;Hmac.prototype._init=
function(key){key.length>this.blockSize&&(key=(new this.Hash).update(key).digest());assert(key.length<=this.blockSize);for(var i=key.length;i<this.blockSize;i++)key.push(0);for(i=0;i<key.length;i++)key[i]^=54;this.inner=(new this.Hash).update(key);for(i=0;i<key.length;i++)key[i]^=106;this.outer=(new this.Hash).update(key)};Hmac.prototype.update=function(msg,enc){this.inner.update(msg,enc);return this};Hmac.prototype.digest=function(enc){this.outer.update(this.inner.digest());return this.outer.digest(enc)}}
//# sourceMappingURL=module$node_modules$hash_DOT_js$lib$hash$hmac.js.map
