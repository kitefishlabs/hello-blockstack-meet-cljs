shadow$provide.module$node_modules$blockstack$lib$operations$txbuild=function(global,process,require,module,exports,shadow$shims){function addOwnerInput(utxos,ownerAddress,txB){var addChangeOut=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!0;if(0>=utxos.length)throw Error("Owner has no UTXOs for UPDATE.");utxos.sort(function(a,b){return a.value-b.value});var ownerUTXO=utxos[0],ownerInput=txB.addInput(ownerUTXO.tx_hash,ownerUTXO.tx_output_n);addChangeOut&&txB.addOutput(ownerAddress,ownerUTXO.value);
return{index:ownerInput,value:ownerUTXO.value}}function fundTransaction(txB,paymentAddress,utxos,feeRate,inAmounts){var changeIndex=5<arguments.length&&void 0!==arguments[5]?arguments[5]:null;null===changeIndex&&(changeIndex=txB.addOutput(paymentAddress,_utils.DUST_MINIMUM));var txFee=(0,_utils.estimateTXBytes)(txB,0,0)*feeRate,outAmounts=(0,_utils.sumOutputValues)(txB);txFee=(0,_utils.addUTXOsToFund)(txB,utxos,txFee+outAmounts-inAmounts,feeRate);txB.__tx.outs[changeIndex].value+=txFee;return txB}
function returnTransactionHex(txB){return 1<arguments.length&&void 0!==arguments[1]&&arguments[1]?txB.buildIncomplete().toHex():txB.build().toHex()}function getTransactionSigner(input){return"string"===typeof input?_signers.PubkeyHashSigner.fromHexString(input):input}Object.defineProperty(exports,"__esModule",{value:!0});exports.transactions=void 0;var _slicedToArray=function(){return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;
try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e;}}return _arr}throw new TypeError("Invalid attempt to destructure non-iterable instance");}}(),_bitcoinjsLib2=(global=require("module$node_modules$bitcoinjs_lib$src$index"))&&global.__esModule?global:{default:global};require("module$node_modules$bigi$lib$index");var _utils=require("module$node_modules$blockstack$lib$operations$utils"),
_skeletons=require("module$node_modules$blockstack$lib$operations$skeletons"),_config=require("module$node_modules$blockstack$lib$config"),_errors=require("module$node_modules$blockstack$lib$errors"),_signers=require("module$node_modules$blockstack$lib$operations$signers");exports.transactions={makeRenewal:function(fullyQualifiedName,destinationAddress,ownerKeyIn,paymentKeyIn){var zonefile=4<arguments.length&&void 0!==arguments[4]?arguments[4]:null,valueHash=5<arguments.length&&void 0!==arguments[5]?
arguments[5]:null,buildIncomplete=6<arguments.length&&void 0!==arguments[6]?arguments[6]:!1,network=_config.config.network;!valueHash&&zonefile&&(valueHash=(0,_utils.hash160)(shadow$shims.Buffer.from(zonefile)).toString("hex"));var namespace=fullyQualifiedName.split(".").pop(),paymentKey=getTransactionSigner(paymentKeyIn),ownerKey=getTransactionSigner(ownerKeyIn);return Promise.all([ownerKey.getAddress(),paymentKey.getAddress()]).then(function(_ref27){_ref27=_slicedToArray(_ref27,2);var ownerAddress=
_ref27[0],paymentAddress=_ref27[1];_ref27=Promise.all([network.getNamePrice(fullyQualifiedName),network.getNamespaceBurnAddress(namespace)]).then(function(_ref29){var _ref30=_slicedToArray(_ref29,2);_ref29=_ref30[0];_ref30=_ref30[1];return(0,_skeletons.makeRenewalSkeleton)(fullyQualifiedName,destinationAddress,ownerAddress,_ref30,_ref29,valueHash)}).then(function(tx){tx=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(tx,network.layer1);tx.setVersion(1);return tx});return Promise.all([_ref27,
network.getUTXOs(paymentAddress),network.getUTXOs(ownerAddress),network.getFeeRate()]).then(function(_ref31){var _ref32=_slicedToArray(_ref31,4);_ref31=_ref32[0];var payerUtxos=_ref32[1],feeRate=_ref32[3];_ref32=addOwnerInput(_ref32[2],ownerAddress,_ref31,!1);var ownerOutput=_ref31.__tx.outs[2],ownerOutputAddr=_bitcoinjsLib2.default.address.fromOutputScript(ownerOutput.script,network.layer1);if(ownerOutputAddr!==ownerAddress)return Promise.reject(Error("Original owner "+ownerAddress+" should have an output at "+
("index 2 in transaction was "+ownerOutputAddr)));ownerOutput.value=_ref32.value;_ref31=fundTransaction(_ref31,paymentAddress,payerUtxos,feeRate,_ref32.value);return(0,_utils.signInputs)(_ref31,paymentKey,[{index:_ref32.index,signer:ownerKey}])})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeUpdate:function(fullyQualifiedName,ownerKeyIn,paymentKeyIn,zonefile){var valueHash=4<arguments.length&&void 0!==arguments[4]?arguments[4]:"",buildIncomplete=5<arguments.length&&
void 0!==arguments[5]?arguments[5]:!1,network=_config.config.network;if(!valueHash&&!zonefile)return Promise.reject(Error("Need zonefile or valueHash arguments"));if(0===valueHash.length){if(!zonefile)return Promise.reject(Error("Need zonefile or valueHash arguments"));valueHash=(0,_utils.hash160)(shadow$shims.Buffer.from(zonefile)).toString("hex")}else if(40!==valueHash.length)return Promise.reject(Error("Invalid valueHash "+valueHash));var paymentKey=getTransactionSigner(paymentKeyIn),ownerKey=
getTransactionSigner(ownerKeyIn);return Promise.all([ownerKey.getAddress(),paymentKey.getAddress()]).then(function(_ref13){_ref13=_slicedToArray(_ref13,2);var ownerAddress=_ref13[0],paymentAddress=_ref13[1];_ref13=network.getConsensusHash().then(function(consensusHash){return(0,_skeletons.makeUpdateSkeleton)(fullyQualifiedName,consensusHash,valueHash)}).then(function(updateTX){updateTX=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(updateTX,network.layer1);updateTX.setVersion(1);return updateTX});
return Promise.all([_ref13,network.getUTXOs(paymentAddress),network.getUTXOs(ownerAddress),network.getFeeRate()]).then(function(_ref15){var _ref16=_slicedToArray(_ref15,4);_ref15=_ref16[0];var payerUtxos=_ref16[1],feeRate=_ref16[3];_ref16=addOwnerInput(_ref16[2],ownerAddress,_ref15);_ref15=fundTransaction(_ref15,paymentAddress,payerUtxos,feeRate,_ref16.value);return(0,_utils.signInputs)(_ref15,paymentKey,[{index:_ref16.index,signer:ownerKey}])})}).then(function(signingTxB){return returnTransactionHex(signingTxB,
buildIncomplete)})},makePreorder:function(fullyQualifiedName,destinationAddress,paymentKeyIn){var buildIncomplete=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1,network=_config.config.network,namespace=fullyQualifiedName.split(".").pop(),paymentKey=getTransactionSigner(paymentKeyIn);return paymentKey.getAddress().then(function(preorderAddress){var preorderPromise=Promise.all([network.getConsensusHash(),network.getNamePrice(fullyQualifiedName),network.getNamespaceBurnAddress(namespace)]).then(function(_ref9){var _ref10=
_slicedToArray(_ref9,3);_ref9=_ref10[0];var namePrice=_ref10[1];_ref10=_ref10[2];return(0,_skeletons.makePreorderSkeleton)(fullyQualifiedName,_ref9,preorderAddress,_ref10,namePrice,destinationAddress)});return Promise.all([network.getUTXOs(preorderAddress),network.getFeeRate(),preorderPromise]).then(function(_ref11){var _ref12=_slicedToArray(_ref11,3);_ref11=_ref12[0];var feeRate=_ref12[1];_ref12=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(_ref12[2],network.layer1);_ref12.setVersion(1);
_ref11=fundTransaction(_ref12,preorderAddress,_ref11,feeRate,0,1);return(0,_utils.signInputs)(_ref11,paymentKey)}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})})},makeRegister:function(fullyQualifiedName,registerAddress,paymentKeyIn){var zonefile=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null,valueHash=4<arguments.length&&void 0!==arguments[4]?arguments[4]:null,buildIncomplete=5<arguments.length&&void 0!==arguments[5]?arguments[5]:!1,network=_config.config.network;
if(!valueHash&&zonefile)valueHash=(0,_utils.hash160)(shadow$shims.Buffer.from(zonefile)).toString("hex");else if(valueHash&&40!==valueHash.length)return Promise.reject(Error("Invalid zonefile hash "+valueHash));zonefile=(0,_skeletons.makeRegisterSkeleton)(fullyQualifiedName,registerAddress,valueHash);var txB=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(zonefile,network.layer1);txB.setVersion(1);var paymentKey=getTransactionSigner(paymentKeyIn);return paymentKey.getAddress().then(function(paymentAddress){return Promise.all([network.getUTXOs(paymentAddress),
network.getFeeRate()]).then(function(_ref17){_ref17=_slicedToArray(_ref17,2);_ref17=fundTransaction(txB,paymentAddress,_ref17[0],_ref17[1],0);return(0,_utils.signInputs)(_ref17,paymentKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeTransfer:function(fullyQualifiedName,destinationAddress,ownerKeyIn,paymentKeyIn){var keepZonefile=4<arguments.length&&void 0!==arguments[4]?arguments[4]:!1,buildIncomplete=5<arguments.length&&void 0!==arguments[5]?arguments[5]:
!1,network=_config.config.network,paymentKey=getTransactionSigner(paymentKeyIn),ownerKey=getTransactionSigner(ownerKeyIn);return Promise.all([ownerKey.getAddress(),paymentKey.getAddress()]).then(function(_ref19){_ref19=_slicedToArray(_ref19,2);var ownerAddress=_ref19[0],paymentAddress=_ref19[1];_ref19=network.getConsensusHash().then(function(consensusHash){return(0,_skeletons.makeTransferSkeleton)(fullyQualifiedName,consensusHash,destinationAddress,keepZonefile)}).then(function(transferTX){transferTX=
_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(transferTX,network.layer1);transferTX.setVersion(1);return transferTX});return Promise.all([_ref19,network.getUTXOs(paymentAddress),network.getUTXOs(ownerAddress),network.getFeeRate()]).then(function(_ref21){var _ref22=_slicedToArray(_ref21,4);_ref21=_ref22[0];var payerUtxos=_ref22[1],feeRate=_ref22[3];_ref22=addOwnerInput(_ref22[2],ownerAddress,_ref21);_ref21=fundTransaction(_ref21,paymentAddress,payerUtxos,feeRate,_ref22.value);return(0,
_utils.signInputs)(_ref21,paymentKey,[{index:_ref22.index,signer:ownerKey}])})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeRevoke:function(fullyQualifiedName,ownerKeyIn,paymentKeyIn){var buildIncomplete=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1,network=_config.config.network,paymentKey=getTransactionSigner(paymentKeyIn),ownerKey=getTransactionSigner(ownerKeyIn);return Promise.all([ownerKey.getAddress(),paymentKey.getAddress()]).then(function(_ref23){_ref23=
_slicedToArray(_ref23,2);var ownerAddress=_ref23[0],paymentAddress=_ref23[1];_ref23=(0,_skeletons.makeRevokeSkeleton)(fullyQualifiedName);_ref23=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(_ref23,network.layer1);_ref23.setVersion(1);return Promise.all([_ref23,network.getUTXOs(paymentAddress),network.getUTXOs(ownerAddress),network.getFeeRate()]).then(function(_ref25){var _ref26=_slicedToArray(_ref25,4);_ref25=_ref26[0];var payerUtxos=_ref26[1],feeRate=_ref26[3];_ref26=addOwnerInput(_ref26[2],
ownerAddress,_ref25);_ref25=fundTransaction(_ref25,paymentAddress,payerUtxos,feeRate,_ref26.value);return(0,_utils.signInputs)(_ref25,paymentKey,[{index:_ref26.index,signer:ownerKey}])})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeNamespacePreorder:function(namespaceID,revealAddress,paymentKeyIn){var buildIncomplete=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1,network=_config.config.network,paymentKey=getTransactionSigner(paymentKeyIn);return paymentKey.getAddress().then(function(preorderAddress){var preorderPromise=
Promise.all([network.getConsensusHash(),network.getNamespacePrice(namespaceID)]).then(function(_ref33){var _ref34=_slicedToArray(_ref33,2);_ref33=_ref34[0];_ref34=_ref34[1];return(0,_skeletons.makeNamespacePreorderSkeleton)(namespaceID,_ref33,preorderAddress,revealAddress,_ref34)});return Promise.all([network.getUTXOs(preorderAddress),network.getFeeRate(),preorderPromise]).then(function(_ref35){var _ref36=_slicedToArray(_ref35,3);_ref35=_ref36[0];var feeRate=_ref36[1];_ref36=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(_ref36[2],
network.layer1);_ref36.setVersion(1);_ref35=fundTransaction(_ref36,preorderAddress,_ref35,feeRate,0,1);return(0,_utils.signInputs)(_ref35,paymentKey)}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})})},makeNamespaceReveal:function(namespace,revealAddress,paymentKeyIn){var buildIncomplete=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1,network=_config.config.network;if(!namespace.check())return Promise.reject(Error("Invalid namespace"));var namespaceRevealTX=
(0,_skeletons.makeNamespaceRevealSkeleton)(namespace,revealAddress),paymentKey=getTransactionSigner(paymentKeyIn);return paymentKey.getAddress().then(function(preorderAddress){return Promise.all([network.getUTXOs(preorderAddress),network.getFeeRate()]).then(function(_ref37){var _ref38=_slicedToArray(_ref37,2);_ref37=_ref38[0];_ref38=_ref38[1];var txB=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(namespaceRevealTX,network.layer1);txB.setVersion(1);_ref37=fundTransaction(txB,preorderAddress,
_ref37,_ref38,0);return(0,_utils.signInputs)(_ref37,paymentKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeNamespaceReady:function(namespaceID,revealKeyIn){var buildIncomplete=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1,network=_config.config.network,namespaceReadyTX=(0,_skeletons.makeNamespaceReadySkeleton)(namespaceID),revealKey=getTransactionSigner(revealKeyIn);return revealKey.getAddress().then(function(revealAddress){return Promise.all([network.getUTXOs(revealAddress),
network.getFeeRate()]).then(function(_ref39){var _ref40=_slicedToArray(_ref39,2);_ref39=_ref40[0];_ref40=_ref40[1];var txB=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(namespaceReadyTX,network.layer1);txB.setVersion(1);_ref39=fundTransaction(txB,revealAddress,_ref39,_ref40,0);return(0,_utils.signInputs)(_ref39,revealKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeBitcoinSpend:function(destinationAddress,paymentKeyIn,amount){var buildIncomplete=
3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1;if(0>=amount)return Promise.reject(new _errors.InvalidParameterError("amount","amount must be greater than zero"));var network=_config.config.network,paymentKey=getTransactionSigner(paymentKeyIn);return paymentKey.getAddress().then(function(paymentAddress){return Promise.all([network.getUTXOs(paymentAddress),network.getFeeRate()]).then(function(_ref49){_ref49=_slicedToArray(_ref49,2);var utxos=_ref49[0],feeRate=_ref49[1];_ref49=new _bitcoinjsLib2.default.TransactionBuilder(network.layer1);
_ref49.setVersion(1);var destinationIndex=_ref49.addOutput(destinationAddress,0),change=void 0;try{change=(0,_utils.addUTXOsToFund)(_ref49,utxos,amount,feeRate,!1)}catch(err){if("NotEnoughFundsError"===err.name)amount-=err.leftToFund,change=0;else throw err;}utxos=feeRate*(0,_utils.estimateTXBytes)(_ref49,0,0);feeRate=feeRate*(0,_utils.estimateTXBytes)(_ref49,0,1)-utxos;change>feeRate&&(utxos+=feeRate,_ref49.addOutput(paymentAddress,change));change=amount-utxos;if(change<_utils.DUST_MINIMUM)throw new _errors.InvalidAmountError(utxos,
amount);_ref49.__tx.outs[destinationIndex].value=change;return(0,_utils.signInputs)(_ref49,paymentKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeNameImport:function(name,recipientAddr,zonefileHash,importerKeyIn){var buildIncomplete=4<arguments.length&&void 0!==arguments[4]?arguments[4]:!1,network=_config.config.network,nameImportTX=(0,_skeletons.makeNameImportSkeleton)(name,recipientAddr,zonefileHash),importerKey=getTransactionSigner(importerKeyIn);
return importerKey.getAddress().then(function(importerAddress){return Promise.all([network.getUTXOs(importerAddress),network.getFeeRate()]).then(function(_ref41){var _ref42=_slicedToArray(_ref41,2);_ref41=_ref42[0];_ref42=_ref42[1];var txB=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(nameImportTX,network.layer1);_ref41=fundTransaction(txB,importerAddress,_ref41,_ref42,0);return(0,_utils.signInputs)(_ref41,importerKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,
buildIncomplete)})},makeAnnounce:function(messageHash,senderKeyIn){var buildIncomplete=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1,network=_config.config.network,announceTX=(0,_skeletons.makeAnnounceSkeleton)(messageHash),senderKey=getTransactionSigner(senderKeyIn);return senderKey.getAddress().then(function(senderAddress){return Promise.all([network.getUTXOs(senderAddress),network.getFeeRate()]).then(function(_ref43){var _ref44=_slicedToArray(_ref43,2);_ref43=_ref44[0];_ref44=_ref44[1];
var txB=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(announceTX,network.layer1);_ref43=fundTransaction(txB,senderAddress,_ref43,_ref44,0);return(0,_utils.signInputs)(_ref43,senderKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},makeTokenTransfer:function(recipientAddress,tokenType,tokenAmount,scratchArea,senderKeyIn,btcFunderKeyIn){var buildIncomplete=6<arguments.length&&void 0!==arguments[6]?arguments[6]:!1,network=_config.config.network,
separateFunder=!!btcFunderKeyIn,senderKey=getTransactionSigner(senderKeyIn),btcKey=btcFunderKeyIn?getTransactionSigner(btcFunderKeyIn):senderKey,txPromise=network.getConsensusHash().then(function(consensusHash){return(0,_skeletons.makeTokenTransferSkeleton)(recipientAddress,consensusHash,tokenType,tokenAmount,scratchArea)});return Promise.all([senderKey.getAddress(),btcKey.getAddress()]).then(function(_ref45){_ref45=_slicedToArray(_ref45,2);var senderAddress=_ref45[0],btcAddress=_ref45[1];_ref45=
separateFunder?network.getUTXOs(btcAddress):Promise.resolve([]);_ref45=[network.getUTXOs(senderAddress),_ref45,network.getFeeRate(),txPromise];return Promise.all(_ref45).then(function(_ref47){var _ref48=_slicedToArray(_ref47,4),senderUTXOs=_ref48[0];_ref47=_ref48[1];var feeRate=_ref48[2];_ref48=_bitcoinjsLib2.default.TransactionBuilder.fromTransaction(_ref48[3],network.layer1);if(separateFunder)return senderUTXOs=addOwnerInput(senderUTXOs,senderAddress,_ref48),_ref47=fundTransaction(_ref48,btcAddress,
_ref47,feeRate,senderUTXOs.value),(0,_utils.signInputs)(_ref47,btcKey,[{index:senderUTXOs.index,signer:senderKey}]);_ref47=fundTransaction(_ref48,senderAddress,senderUTXOs,feeRate,0);return(0,_utils.signInputs)(_ref47,senderKey)})}).then(function(signingTxB){return returnTransactionHex(signingTxB,buildIncomplete)})},BlockstackNamespace:_skeletons.BlockstackNamespace,estimatePreorder:function(fullyQualifiedName,destinationAddress,paymentAddress){var paymentUtxos=3<arguments.length&&void 0!==arguments[3]?
arguments[3]:1,network=_config.config.network,preorderPromise=network.getNamePrice(fullyQualifiedName).then(function(namePrice){return(0,_skeletons.makePreorderSkeleton)(fullyQualifiedName,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",paymentAddress,network.getDefaultBurnAddress(),namePrice,destinationAddress)});return Promise.all([network.getFeeRate(),preorderPromise]).then(function(_ref){var _ref2=_slicedToArray(_ref,2);_ref=_ref2[0];_ref2=_ref2[1];var outputsValue=(0,_utils.sumOutputValues)(_ref2);return _ref*
(0,_utils.estimateTXBytes)(_ref2,paymentUtxos,0)+outputsValue})},estimateRegister:function(fullyQualifiedName,registerAddress,paymentAddress){var paymentUtxos=4<arguments.length&&void 0!==arguments[4]?arguments[4]:1,network=_config.config.network,valueHash=void 0;3<arguments.length&&void 0!==arguments[3]&&arguments[3]&&(valueHash="ffffffffffffffffffffffffffffffffffffffff");var registerTX=(0,_skeletons.makeRegisterSkeleton)(fullyQualifiedName,registerAddress,valueHash);return network.getFeeRate().then(function(feeRate){var outputsValue=
(0,_utils.sumOutputValues)(registerTX);return feeRate*(0,_utils.estimateTXBytes)(registerTX,paymentUtxos,1)+outputsValue})},estimateTransfer:function(fullyQualifiedName,destinationAddress,ownerAddress,paymentAddress){var paymentUtxos=4<arguments.length&&void 0!==arguments[4]?arguments[4]:1,network=_config.config.network,transferTX=(0,_skeletons.makeTransferSkeleton)(fullyQualifiedName,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",destinationAddress);return network.getFeeRate().then(function(feeRate){var outputsValue=
(0,_utils.sumOutputValues)(transferTX);return feeRate*(0,_utils.estimateTXBytes)(transferTX,1+paymentUtxos,2)+outputsValue})},estimateUpdate:function(fullyQualifiedName,ownerAddress,paymentAddress){var paymentUtxos=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,network=_config.config.network,updateTX=(0,_skeletons.makeUpdateSkeleton)(fullyQualifiedName,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","ffffffffffffffffffffffffffffffffffffffff");return network.getFeeRate().then(function(feeRate){var outputsValue=
(0,_utils.sumOutputValues)(updateTX);return feeRate*(0,_utils.estimateTXBytes)(updateTX,1+paymentUtxos,2)+outputsValue})},estimateRenewal:function(fullyQualifiedName,destinationAddress,ownerAddress,paymentAddress){var paymentUtxos=5<arguments.length&&void 0!==arguments[5]?arguments[5]:1,network=_config.config.network,valueHash=void 0;4<arguments.length&&void 0!==arguments[4]&&arguments[4]&&(valueHash="ffffffffffffffffffffffffffffffffffffffff");var renewalPromise=network.getNamePrice(fullyQualifiedName).then(function(namePrice){return(0,
_skeletons.makeRenewalSkeleton)(fullyQualifiedName,destinationAddress,ownerAddress,network.getDefaultBurnAddress(),namePrice,valueHash)});return Promise.all([network.getFeeRate(),renewalPromise]).then(function(_ref3){var _ref4=_slicedToArray(_ref3,2);_ref3=_ref4[0];_ref4=_ref4[1];var outputsValue=(0,_utils.sumOutputValues)(_ref4);return _ref3*(0,_utils.estimateTXBytes)(_ref4,1+paymentUtxos,1)+outputsValue-5500})},estimateRevoke:function(fullyQualifiedName,ownerAddress,paymentAddress){var paymentUtxos=
3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,network=_config.config.network,revokeTX=(0,_skeletons.makeRevokeSkeleton)(fullyQualifiedName);return Promise.all([network.getFeeRate()]).then(function(_ref5){_ref5=_slicedToArray(_ref5,1)[0];var outputsValue=(0,_utils.sumOutputValues)(revokeTX);return _ref5*(0,_utils.estimateTXBytes)(revokeTX,1+paymentUtxos,2)+outputsValue})},estimateNamespacePreorder:function(namespaceID,revealAddress,paymentAddress){var paymentUtxos=3<arguments.length&&void 0!==
arguments[3]?arguments[3]:1,network=_config.config.network,preorderPromise=network.getNamespacePrice(namespaceID).then(function(namespacePrice){return(0,_skeletons.makeNamespacePreorderSkeleton)(namespaceID,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",paymentAddress,revealAddress,namespacePrice)});return Promise.all([network.getFeeRate(),preorderPromise]).then(function(_ref7){var _ref8=_slicedToArray(_ref7,2);_ref7=_ref8[0];_ref8=_ref8[1];var outputsValue=(0,_utils.sumOutputValues)(_ref8);return _ref7*(0,_utils.estimateTXBytes)(_ref8,
paymentUtxos,0)+outputsValue})},estimateNamespaceReveal:function(namespace,revealAddress,paymentAddress){var paymentUtxos=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,network=_config.config.network,revealTX=(0,_skeletons.makeNamespaceRevealSkeleton)(namespace,revealAddress);return network.getFeeRate().then(function(feeRate){var outputsValue=(0,_utils.sumOutputValues)(revealTX);return feeRate*(0,_utils.estimateTXBytes)(revealTX,paymentUtxos,1)+outputsValue})},estimateNamespaceReady:function(namespaceID){var revealUtxos=
1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,network=_config.config.network,readyTX=(0,_skeletons.makeNamespaceReadySkeleton)(namespaceID);return network.getFeeRate().then(function(feeRate){var outputsValue=(0,_utils.sumOutputValues)(readyTX);return feeRate*(0,_utils.estimateTXBytes)(readyTX,revealUtxos,1)+outputsValue})},estimateNameImport:function(name,recipientAddr,zonefileHash){var importUtxos=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1,network=_config.config.network,
importTX=(0,_skeletons.makeNameImportSkeleton)(name,recipientAddr,zonefileHash);return network.getFeeRate().then(function(feeRate){var outputsValue=(0,_utils.sumOutputValues)(importTX);return feeRate*(0,_utils.estimateTXBytes)(importTX,importUtxos,1)+outputsValue})},estimateAnnounce:function(messageHash){var senderUtxos=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,network=_config.config.network,announceTX=(0,_skeletons.makeAnnounceSkeleton)(messageHash);return network.getFeeRate().then(function(feeRate){var outputsValue=
(0,_utils.sumOutputValues)(announceTX);return feeRate*(0,_utils.estimateTXBytes)(announceTX,senderUtxos,1)+outputsValue})},estimateTokenTransfer:function(recipientAddress,tokenType,tokenAmount,scratchArea){var senderUtxos=4<arguments.length&&void 0!==arguments[4]?arguments[4]:1,additionalOutputs=5<arguments.length&&void 0!==arguments[5]?arguments[5]:1,network=_config.config.network,tokenTransferTX=(0,_skeletons.makeTokenTransferSkeleton)(recipientAddress,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",tokenType,
tokenAmount,scratchArea);return network.getFeeRate().then(function(feeRate){var outputsValue=(0,_utils.sumOutputValues)(tokenTransferTX);return feeRate*(0,_utils.estimateTXBytes)(tokenTransferTX,senderUtxos,additionalOutputs)+outputsValue})}}}
//# sourceMappingURL=module$node_modules$blockstack$lib$operations$txbuild.js.map
