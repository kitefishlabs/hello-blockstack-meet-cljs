{
"version":3,
"file":"module$node_modules$css_select$lib$sort.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAwCzHC,QAASA,aAAY,CAACC,KAAD,CAAO,CAC3B,IAAIC,KAAOC,SAAA,CAAUF,KAAAG,KAAV,CAEX,IAAGF,IAAH,GAAYC,SAAAE,UAAZ,CACCH,IAOA,CAPOI,UAAA,CAAWL,KAAAM,OAAX,CAOP,CALGL,IAKH,GALYI,UAAAE,OAKZ,EALgD,IAKhD,GALiCP,KAAAQ,KAKjC,GAHCP,IAGD,CAHQ,CAGR,EAAGD,KAAAS,WAAH,GAGCR,IAHD,GAGU,CAHV,CARD,KAaO,IAAGA,IAAH,GAAYC,SAAAQ,OAAZ,CACN,GAAIV,KAAAW,KAAJ,CAEO,GAAkB,KAAlB,GAAGX,KAAAQ,KAAH,EAA0C,UAA1C,GAA2BR,KAAAQ,KAA3B,CACNP,IAAA,CAAO,CADD,KAEA,IAAkB,SAAlB,GAAGD,KAAAQ,KAAH,EAA8C,KAA9C,GAA+BR,KAAAQ,KAA/B,CAAoD,CAE1D,IAAI,IAAII,EADRX,IACQW,CADD,CACP,CAAeA,CAAf,CAAmBZ,KAAAW,KAAAE,OAAnB,CAAsCD,CAAA,EAAtC,CAEC,GAA4B,CAA5B;AAAGZ,KAAAW,KAAA,CAAWC,CAAX,CAAAC,OAAH,CAAA,CACA,IAAIC,IAAMf,YAAA,CAAaC,KAAAW,KAAA,CAAWC,CAAX,CAAA,CAAc,CAAd,CAAb,CAEV,IAAW,CAAX,GAAGE,GAAH,CAAa,CACZb,IAAA,CAAO,CACP,MAFY,CAIVa,GAAH,CAASb,IAAT,GAAeA,IAAf,CAAsBa,GAAtB,CAPA,CASsB,CAAvB,CAAGd,KAAAW,KAAAE,OAAH,EAAmC,CAAnC,CAA4BZ,IAA5B,EAAsC,EAAAA,IAboB,CAApD,IAeNA,KAAA,CAAO,CAnBR,KACCA,KAAA,CAAO,CAqBT,OAAOA,KAvCoB,CAvC5BL,MAAAC,QAAA,CAsBAkB,QAAwB,CAACC,GAAD,CAAK,CAE5B,IADA,IAAIC,MAAQD,GAAAE,IAAA,CAAQnB,YAAR,CAAZ,CACQa,EAAI,CAAZ,CAAeA,CAAf,CAAmBI,GAAAH,OAAnB,CAA+BD,CAAA,EAA/B,CAAmC,CAClC,IAAIO,QAAUF,KAAA,CAAML,CAAN,CAEd,IAAG,EAAU,CAAV,CAAAO,OAAA,CAAH,CAEA,IAAI,IAAIC,EAAIR,CAAJQ,CAAQ,CAAhB,CAAwB,CAAxB,EAAmBA,CAAnB,EAA6BD,OAA7B,CAAuCF,KAAA,CAAMG,CAAN,CAAvC,CAAiDA,CAAA,EAAjD,CAAqD,CACpD,IAAIpB,MAAQgB,GAAA,CAAII,CAAJ,CAAQ,CAAR,CACZJ,IAAA,CAAII,CAAJ,CAAQ,CAAR,CAAA,CAAaJ,GAAA,CAAII,CAAJ,CACbJ,IAAA,CAAII,CAAJ,CAAA,CAASpB,KACTiB,MAAA,CAAMG,CAAN,CAAU,CAAV,CAAA,CAAeH,KAAA,CAAMG,CAAN,CACfH,MAAA,CAAMG,CAAN,CAAA,CAAWD,OALyC,CALnB,CAFP,CAd7B,KAAIjB,UAAYP,OAAA,CAAQ,mDAAR,CAAhB;AAEIU,WAAa,CAChBgB,UAAW,IADK,CAEhBC,OAAQ,EAFQ,CAGhBf,OAAQ,CAHQ,CAIhBgB,IAAK,CAJW,CAKhBC,MAAO,CALS,CAMhBC,IAAK,CANW,CAOhBC,IAAK,CAPW,CAQhBC,OAAQ,CARQ,CAShBC,QAAS,CATO,CAXwG;",
"sources":["node_modules/css-select/lib/sort.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$css_select$lib$sort\"] = function(global,process,require,module,exports,shadow$shims) {\nmodule.exports = sortByProcedure;\n\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\n\nvar attributes = {\n\t__proto__: null,\n\texists: 10,\n\tequals: 8,\n\tnot: 7,\n\tstart: 6,\n\tend: 6,\n\tany: 5,\n\thyphen: 4,\n\telement: 4\n};\n\nfunction sortByProcedure(arr){\n\tvar procs = arr.map(getProcedure);\n\tfor(var i = 1; i < arr.length; i++){\n\t\tvar procNew = procs[i];\n\n\t\tif(procNew < 0) continue;\n\n\t\tfor(var j = i - 1; j >= 0 && procNew < procs[j]; j--){\n\t\t\tvar token = arr[j + 1];\n\t\t\tarr[j + 1] = arr[j];\n\t\t\tarr[j] = token;\n\t\t\tprocs[j + 1] = procs[j];\n\t\t\tprocs[j] = procNew;\n\t\t}\n\t}\n}\n\nfunction getProcedure(token){\n\tvar proc = procedure[token.type];\n\n\tif(proc === procedure.attribute){\n\t\tproc = attributes[token.action];\n\n\t\tif(proc === attributes.equals && token.name === \"id\"){\n\t\t\t//prefer ID selectors (eg. #ID)\n\t\t\tproc = 9;\n\t\t}\n\n\t\tif(token.ignoreCase){\n\t\t\t//ignoreCase adds some overhead, prefer \"normal\" token\n\t\t\t//this is a binary operation, to ensure it's still an int\n\t\t\tproc >>= 1;\n\t\t}\n\t} else if(proc === procedure.pseudo){\n\t\tif(!token.data){\n\t\t\tproc = 3;\n\t\t} else if(token.name === \"has\" || token.name === \"contains\"){\n\t\t\tproc = 0; //expensive in any case\n\t\t} else if(token.name === \"matches\" || token.name === \"not\"){\n\t\t\tproc = 0;\n\t\t\tfor(var i = 0; i < token.data.length; i++){\n\t\t\t\t//TODO better handling of complex selectors\n\t\t\t\tif(token.data[i].length !== 1) continue;\n\t\t\t\tvar cur = getProcedure(token.data[i][0]);\n\t\t\t\t//avoid executing :has or :contains\n\t\t\t\tif(cur === 0){\n\t\t\t\t\tproc = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(cur > proc) proc = cur;\n\t\t\t}\n\t\t\tif(token.data.length > 1 && proc > 0) proc -= 1;\n\t\t} else {\n\t\t\tproc = 1;\n\t\t}\n\t}\n\treturn proc;\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getProcedure","token","proc","procedure","type","attribute","attributes","action","equals","name","ignoreCase","pseudo","data","i","length","cur","sortByProcedure","arr","procs","map","procNew","j","__proto__","exists","not","start","end","any","hyphen","element"]
}
