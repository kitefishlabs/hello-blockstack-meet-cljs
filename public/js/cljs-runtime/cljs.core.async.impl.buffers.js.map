{"version":3,"sources":["cljs/core/async/impl/buffers.cljs"],"sourcesContent":[";;   Copyright (c) Rich Hickey and contributors. All rights reserved.\n;;   The use and distribution terms for this software are covered by the\n;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;;   which can be found in the file epl-v10.html at the root of this distribution.\n;;   By using this software in any fashion, you are agreeing to be bound by\n;;   the terms of this license.\n;;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.core.async.impl.buffers\n  (:require [cljs.core.async.impl.protocols :as impl]))\n\n;; -----------------------------------------------------------------------------\n;; DO NOT USE, this is internal buffer representation\n\n(defn acopy [src src-start dest dest-start len]\n  (loop [cnt 0]\n    (when (< cnt len)\n      (aset dest\n            (+ dest-start cnt)\n            (aget src (+ src-start cnt)))\n      (recur (inc cnt)))))\n\n(deftype RingBuffer [^:mutable head ^:mutable tail ^:mutable length ^:mutable arr]\n  Object\n  (pop [_]\n    (when-not (zero? length)\n      (let [x (aget arr tail)]\n        (aset arr tail nil)\n        (set! tail (js-mod (inc tail) (alength arr)))\n        (set! length (dec length))\n        x)))\n\n  (unshift [_ x]\n    (aset arr head x)\n    (set! head (js-mod (inc head) (alength arr)))\n    (set! length (inc length))\n    nil)\n\n  (unbounded-unshift [this x]\n    (if (== (inc length) (alength arr))\n      (.resize this))\n    (.unshift this x))\n\n  ;; Doubles the size of the buffer while retaining all the existing values\n  (resize\n    [_]\n    (let [new-arr-size (* (alength arr) 2)\n          new-arr (make-array new-arr-size)]\n      (cond\n       (< tail head)\n       (do (acopy arr tail new-arr 0 length)\n           (set! tail 0)\n           (set! head length)\n           (set! arr new-arr))\n\n       (> tail head)\n       (do (acopy arr tail new-arr 0 (- (alength arr) tail))\n           (acopy arr 0 new-arr (- (alength arr) tail) head)\n           (set! tail 0)\n           (set! head length)\n           (set! arr new-arr))\n\n       (== tail head)\n       (do (set! tail 0)\n           (set! head 0)\n           (set! arr new-arr)))))\n\n  (cleanup [this keep?]\n    (dotimes [x length]\n      (let [v (.pop this)]\n        (when ^boolean (keep? v)\n          (.unshift this v))))))\n\n(defn ring-buffer [n]\n  (assert (> n 0) \"Can't create a ring buffer of size 0\")\n  (RingBuffer. 0 0 0 (make-array n)))\n\n;; -----------------------------------------------------------------------------\n\n(deftype FixedBuffer [buf n]\n  impl/Buffer\n  (full? [this]\n    (== (.-length buf) n))\n  (remove! [this]\n    (.pop buf))\n  (add!* [this itm]\n    (.unbounded-unshift buf itm)\n    this)\n  (close-buf! [this])\n  cljs.core/ICounted\n  (-count [this]\n    (.-length buf)))\n\n(defn fixed-buffer [n]\n  (FixedBuffer. (ring-buffer n) n))\n\n(deftype DroppingBuffer [buf n]\n  impl/UnblockingBuffer\n  impl/Buffer\n  (full? [this]\n    false)\n  (remove! [this]\n    (.pop buf))\n  (add!* [this itm]\n    (when-not (== (.-length buf) n)\n      (.unshift buf itm))\n    this)\n  (close-buf! [this])\n  cljs.core/ICounted\n  (-count [this]\n    (.-length buf)))\n\n(defn dropping-buffer [n]\n  (DroppingBuffer. (ring-buffer n) n))\n\n(deftype SlidingBuffer [buf n]\n  impl/UnblockingBuffer\n  impl/Buffer\n  (full? [this]\n    false)\n  (remove! [this]\n    (.pop buf))\n  (add!* [this itm]\n    (when (== (.-length buf) n)\n      (impl/remove! this))\n    (.unshift buf itm)\n    this)\n  (close-buf! [this])\n  cljs.core/ICounted\n  (-count [this]\n    (.-length buf)))\n\n(defn sliding-buffer [n]\n  (SlidingBuffer. (ring-buffer n) n))\n\n(defonce ^:private NO-VAL (js/Object.))\n(defn- undelivered? [val]\n  (identical? NO-VAL val))\n\n(deftype PromiseBuffer [^:mutable val]\n  impl/UnblockingBuffer\n  impl/Buffer\n  (full? [_]\n    false)\n  (remove! [_]\n    val)\n  (add!* [this itm]\n    (when (undelivered? val)\n      (set! val itm))\n    this)\n  (close-buf! [_]\n    (when (undelivered? val)\n      (set! val nil)))\n  cljs.core/ICounted\n  (-count [_]\n    (if (undelivered? val) 0 1)))\n\n(defn promise-buffer []\n  (PromiseBuffer. NO-VAL))\n"],"mappings":"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","names":["cljs.core.async.impl.buffers/acopy","cnt","len","dest","dest-start","src","src-start","cljs.core/-write","writer__4291__auto__","cljs.core.async.impl.buffers/RingBuffer","cljs.core.async.impl.buffers/->RingBuffer","head","tail","length","arr","x","this","js/Array","new-arr-size","new-arr","n__4518__auto__","keep?","v","cljs.core.async.impl.buffers/ring-buffer","js/Error","n","cljs.core/PROTOCOL_SENTINEL","cljs.core.async.impl.buffers/FixedBuffer","cljs.core.async.impl.buffers/->FixedBuffer","buf","itm","cljs.core.async.impl.buffers/fixed-buffer","cljs.core.async.impl.buffers/DroppingBuffer","cljs.core.async.impl.buffers/->DroppingBuffer","cljs.core.async.impl.buffers/dropping-buffer","cljs.core.async.impl.buffers/SlidingBuffer","cljs.core.async.impl.buffers/->SlidingBuffer","cljs.core.async.impl.buffers/sliding-buffer","js/cljs","js/cljs.core","js/cljs.core.async","js/cljs.core.async.impl","js/cljs.core.async.impl.buffers","js/cljs.core.async.impl.buffers.NO-VAL","cljs.core.async.impl.buffers/NO-VAL","js/Object","cljs.core.async.impl.buffers/undelivered?","val","cljs.core.async.impl.buffers/PromiseBuffer","cljs.core.async.impl.buffers/->PromiseBuffer","cljs.core.async.impl.buffers/promise-buffer"]}