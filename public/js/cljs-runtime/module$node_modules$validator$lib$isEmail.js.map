{
"version":3,
"file":"module$node_modules$validator$lib$isEmail.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/validator/lib/isEmail.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$validator$lib$isEmail\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _isByteLength = require('./isByteLength');\n\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n    user = user.replace(/\\./g, '').toLowerCase();\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    return false;\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","isEmail","str","options","_assertString2","_merge2","default_email_options","require_display_name","allow_display_name","display_email","match","displayName","parts","split","domain","pop","user","join","lower_domain","toLowerCase","replace","_isByteLength2","max","_isFQDN2","require_tld","slice","length","allow_utf8_local_part","quotedEmailUserUtf8","test","quotedEmailUser","pattern","emailUserUtf8Part","emailUserPart","user_parts","i","_assertString","_merge","_isByteLength","_isFQDN"]
}
