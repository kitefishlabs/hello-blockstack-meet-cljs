{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2wsh.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2wsh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2wsh\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\n\nconst bech32 = require('bech32')\nconst bcrypto = require('../crypto')\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\n\nconst EMPTY_BUFFER = Buffer.alloc(0)\n\nfunction stacksEqual (a, b) {\n  if (a.length !== b.length) return false\n\n  return a.every(function (x, i) {\n    return x.equals(b[i])\n  })\n}\n\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\nfunction p2wsh (a, opts) {\n  if (\n    !a.address &&\n    !a.hash &&\n    !a.output &&\n    !a.redeem &&\n    !a.witness\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    network: typef.maybe(typef.Object),\n\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(32)),\n    output: typef.maybe(typef.BufferN(34)),\n\n    redeem: typef.maybe({\n      input: typef.maybe(typef.Buffer),\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer))\n    }),\n    input: typef.maybe(typef.BufferN(0)),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a)\n\n  const _address = lazy.value(function () {\n    const result = bech32.decode(a.address)\n    const version = result.words.shift()\n    const data = bech32.fromWords(result.words)\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    }\n  })\n  const _rchunks = lazy.value(function () { return bscript.decompile(a.redeem.input) })\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return\n    const words = bech32.toWords(o.hash)\n    words.unshift(0x00)\n    return bech32.encode(network.bech32, words)\n  })\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(2)\n    if (a.address) return _address().data\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output)\n  })\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return\n    return bscript.compile([\n      OPS.OP_0,\n      o.hash\n    ])\n  })\n  lazy.prop(o, 'redeem', function () {\n    if (!a.witness) return\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1)\n    }\n  })\n  lazy.prop(o, 'input', function () {\n    if (!o.witness) return\n    return EMPTY_BUFFER\n  })\n  lazy.prop(o, 'witness', function () {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = bscript.toStack(_rchunks())\n\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem)\n      o.redeem.input = EMPTY_BUFFER\n      return [].concat(stack, a.redeem.output)\n    }\n\n    if (!a.redeem) return\n    if (!a.redeem.output) return\n    if (!a.redeem.witness) return\n    return [].concat(a.redeem.witness, a.redeem.output)\n  })\n\n  // extended validation\n  if (opts.validate) {\n    let hash\n    if (a.address) {\n      if (_address().prefix !== network.bech32) throw new TypeError('Invalid prefix or Network mismatch')\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version')\n      if (_address().data.length !== 32) throw new TypeError('Invalid address data')\n      hash = _address().data\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch')\n      else hash = a.hash\n    }\n\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20) throw new TypeError('Output is invalid')\n      const hash2 = a.output.slice(2)\n      if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch')\n      else hash = hash2\n    }\n\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network) throw new TypeError('Network mismatch')\n\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      ) throw new TypeError('Ambiguous witness source')\n\n      // is the redeem output non-empty?\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0) throw new TypeError('Redeem.output is invalid')\n\n        // match hash against other sources\n        const hash2 = bcrypto.sha256(a.redeem.output)\n        if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch')\n        else hash = hash2\n      }\n\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks())) throw new TypeError('Non push-only scriptSig')\n      if (a.witness && a.redeem.witness && !stacksEqual(a.witness, a.redeem.witness)) throw new TypeError('Witness and redeem.witness mismatch')\n    }\n\n    if (a.witness) {\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(a.witness[a.witness.length - 1])) throw new TypeError('Witness and redeem.output mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2wsh\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","stacksEqual","a","b","length","every","x","i","equals","lazy","typef","OPS","bech32","bcrypto","bscript","BITCOIN_NETWORK","bitcoin","EMPTY_BUFFER","Buffer","alloc","p2wsh","opts","address","hash","output","redeem","witness","TypeError","Object","assign","validate","network","maybe","String","BufferN","input","arrayOf","_address","value","result","decode","version","words","shift","data","fromWords","prefix","from","_rchunks","decompile","o","prop","toWords","unshift","encode","slice","sha256","compile","OP_0","stack","toStack","concat","hash2","isPushOnly"]
}
