shadow$provide.module$node_modules$domutils$lib$querying=function(global,process,require,module,exports,shadow$shims){function find(test,elems,recurse,limit){for(var result=[],childs,i=0,j=elems.length;i<j&&!(test(elems[i])&&(result.push(elems[i]),0>=--limit))&&!(childs=elems[i].children,recurse&&childs&&0<childs.length&&(childs=find(test,childs,recurse,limit),result=result.concat(childs),limit-=childs.length,0>=limit));i++);return result}function findOne(test,elems){for(var elem=null,i=0,l=elems.length;i<
l&&!elem;i++)isTag(elems[i])&&(test(elems[i])?elem=elems[i]:0<elems[i].children.length&&(elem=findOne(test,elems[i].children)));return elem}function existsOne(test,elems){for(var i=0,l=elems.length;i<l;i++)if(isTag(elems[i])&&(test(elems[i])||0<elems[i].children.length&&existsOne(test,elems[i].children)))return!0;return!1}function findAll(test,elems){for(var result=[],i=0,j=elems.length;i<j;i++)isTag(elems[i])&&(test(elems[i])&&result.push(elems[i]),0<elems[i].children.length&&(result=result.concat(findAll(test,
elems[i].children))));return result}var isTag=require("module$node_modules$domelementtype$index").isTag;module.exports={filter:function(test,element,recurse,limit){Array.isArray(element)||(element=[element]);"number"===typeof limit&&isFinite(limit)||(limit=Infinity);return find(test,element,!1!==recurse,limit)},find:find,findOneChild:function(test,elems){for(var i=0,l=elems.length;i<l;i++)if(test(elems[i]))return elems[i];return null},findOne:findOne,existsOne:existsOne,findAll:findAll}}
//# sourceMappingURL=module$node_modules$domutils$lib$querying.js.map
