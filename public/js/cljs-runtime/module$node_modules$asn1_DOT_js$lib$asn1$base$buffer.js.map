{
"version":3,
"file":"module$node_modules$asn1_DOT_js$lib$asn1$base$buffer.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/asn1_DOT_js/lib/asn1/base/buffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$asn1_DOT_js$lib$asn1$base$buffer\"] = function(global,process,require,module,exports,shadow$shims) {\nvar inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","DecoderBuffer","base","options","Reporter","call","Buffer","isBuffer","offset","length","error","EncoderBuffer","value","reporter","Array","isArray","map","item","byteLength","inherits","prototype","save","DecoderBuffer.prototype.save","restore","DecoderBuffer.prototype.restore","res","isEmpty","DecoderBuffer.prototype.isEmpty","readUInt8","DecoderBuffer.prototype.readUInt8","fail","skip","DecoderBuffer.prototype.skip","bytes","_reporterState","raw","DecoderBuffer.prototype.raw","slice","join","EncoderBuffer.prototype.join","out","forEach","write","copy"]
}
