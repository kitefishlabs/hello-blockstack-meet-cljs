{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$embed.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAQtIC,QAASA,YAAY,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC1B,MAAID,EAAAE,OAAJ,GAAiBD,CAAAC,OAAjB,CAAkC,CAAA,CAAlC,CAEOF,CAAAG,MAAA,CAAQ,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC7B,MAAOD,EAAAE,OAAA,CAASL,CAAA,CAAEI,CAAF,CAAT,CADsB,CAAxB,CAHmB,CAP5B,IAAME,KAAOZ,OAAA,CAAQ,qDAAR,CAAb,CACMa,MAAQb,OAAA,CAAQ,qCAAR,CADd,CAEMc,IAAMd,OAAA,CAAQ,4CAAR,CAFZ,CAIMe,QAAUf,OAAA,CAAQ,8CAAR,CAJhB,CAKMgB,gBAAkBhB,OAAA,CAAQ,gDAAR,CAAAiB,QAkDxBhB;MAAAC,QAAA,CAvCAgB,QAAgB,CAACb,CAAD,CAAIc,IAAJ,CAAU,CACxB,GACE,CAACd,CAAAe,KADH,EAEE,CAACf,CAAAgB,OAFH,CAGE,KAAM,KAAIC,SAAJ,CAAc,iBAAd,CAAN,CACFH,IAAA,CAAOI,MAAAC,OAAA,CAAc,CAAEC,SAAU,CAAA,CAAZ,CAAd,CAAkCN,IAAlC,EAA0C,EAA1C,CAEPN,MAAA,CAAM,CACJa,QAASb,KAAAc,MAAA,CAAYd,KAAAU,OAAZ,CADL,CAEJF,OAAQR,KAAAc,MAAA,CAAYd,KAAAe,OAAZ,CAFJ,CAGJR,KAAMP,KAAAc,MAAA,CAAYd,KAAAgB,QAAA,CAAchB,KAAAe,OAAd,CAAZ,CAHF,CAAN,CAIGvB,CAJH,CAOA,KAAMyB,EAAI,CAAEJ,QADIrB,CAAAqB,QACJA,EADiBV,eACnB,CAEVJ,KAAAmB,KAAA,CAAUD,CAAV,CAAa,QAAb,CAAuB,QAAS,EAAG,CACjC,GAAKzB,CAAAe,KAAL,CACA,MAAOL,QAAAiB,QAAA,CAAgB,CAAClB,GAAAmB,UAAD,CAAAC,OAAA,CAAuB7B,CAAAe,KAAvB,CAAhB,CAF0B,CAAnC,CAIAR,KAAAmB,KAAA,CAAUD,CAAV,CAAa,MAAb,CAAqB,QAAS,EAAG,CAC/B,GAAKzB,CAAAgB,OAAL,CACA,MAAON,QAAAoB,UAAA,CAAkB9B,CAAAgB,OAAlB,CAAAe,MAAA,CAAkC,CAAlC,CAFwB,CAAjC,CAMA,IAAIjB,IAAAM,SAAJ;AACMpB,CAAAgB,OADN,CACgB,CACNgB,IAAAA,CAAStB,OAAAoB,UAAA,CAAkB9B,CAAAgB,OAAlB,CACf,IAAIgB,IAAA,CAAO,CAAP,CAAJ,GAAkBvB,GAAAmB,UAAlB,CAAiC,KAAM,KAAIX,SAAJ,CAAc,mBAAd,CAAN,CACjC,GAAI,CAACe,IAAAD,MAAA,CAAa,CAAb,CAAA5B,MAAA,CAAsBK,KAAAe,OAAtB,CAAL,CAA0C,KAAM,KAAIN,SAAJ,CAAc,mBAAd,CAAN,CAE1C,GAAIjB,CAAAe,KAAJ,EAAc,CAAChB,WAAA,CAAYC,CAAAe,KAAZ,CAAoBU,CAAAV,KAApB,CAAf,CAA4C,KAAM,KAAIE,SAAJ,CAAc,eAAd,CAAN,CALhC,CAShB,MAAOC,OAAAC,OAAA,CAAcM,CAAd,CAAiBzB,CAAjB,CApCiB,CAjB4G;",
"sources":["node_modules/bitcoinjs-lib/src/payments/embed.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$embed\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\n\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\n\nfunction stacksEqual (a, b) {\n  if (a.length !== b.length) return false\n\n  return a.every(function (x, i) {\n    return x.equals(b[i])\n  })\n}\n\n// output: OP_RETURN ...\nfunction p2data (a, opts) {\n  if (\n    !a.data &&\n    !a.output\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.Buffer),\n    data: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a)\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'output', function () {\n    if (!a.data) return\n    return bscript.compile([OPS.OP_RETURN].concat(a.data))\n  })\n  lazy.prop(o, 'data', function () {\n    if (!a.output) return\n    return bscript.decompile(a.output).slice(1)\n  })\n\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = bscript.decompile(a.output)\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid')\n      if (!chunks.slice(1).every(typef.Buffer)) throw new TypeError('Output is invalid')\n\n      if (a.data && !stacksEqual(a.data, o.data)) throw new TypeError('Data mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2data\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","stacksEqual","a","b","length","every","x","i","equals","lazy","typef","OPS","bscript","BITCOIN_NETWORK","bitcoin","p2data","opts","data","output","TypeError","Object","assign","validate","network","maybe","Buffer","arrayOf","o","prop","compile","OP_RETURN","concat","decompile","slice","chunks"]
}
