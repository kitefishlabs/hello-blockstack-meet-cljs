{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$templates$multisig$input.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,+DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMhJC,QAASA,iBAAiB,CAACC,KAAD,CAAQ,CAChC,MAAOA,MAAP,GAAiBC,GAAAC,KAAjB,EAA6BC,OAAAC,2BAAA,CAAmCJ,KAAnC,CADG,CAIlCK,QAASA,MAAM,CAACC,MAAD,CAASC,eAAT,CAA0B,CACjCC,MAAAA,CAASL,OAAAM,UAAA,CAAkBH,MAAlB,CAEf,OADoB,EACpB,CADIE,MAAAE,OACJ,EAAIF,MAAA,CAAO,CAAP,CAAJ,GAAkBP,GAAAC,KAAlB,CAAmC,CAAA,CAAnC,CAEIK,eAAJ,CACSC,MAAAG,MAAA,CAAa,CAAb,CAAAC,MAAA,CAAsBb,gBAAtB,CADT,CAIOS,MAAAG,MAAA,CAAa,CAAb,CAAAC,MAAA,CAAsBT,OAAAC,2BAAtB,CATgC,CAPzC,IAAMD,QAAUR,OAAA,CAAQ,8CAAR,CAAhB;AACMM,IAAMN,OAAA,CAAQ,4CAAR,CAiBZU,MAAAQ,OAAA,CAAeC,QAAS,EAAG,CAAE,MAAO,gBAAT,CAE3BlB,OAAAC,QAAA,CAAiB,CAAEQ,MAAAA,KAAF,CAvB+H;",
"sources":["node_modules/bitcoinjs-lib/src/templates/multisig/input.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$templates$multisig$input\"] = function(global,process,require,module,exports,shadow$shims) {\n// OP_0 [signatures ...]\n\nconst bscript = require('../../script')\nconst OPS = require('bitcoin-ops')\n\nfunction partialSignature (value) {\n  return value === OPS.OP_0 || bscript.isCanonicalScriptSignature(value)\n}\n\nfunction check (script, allowIncomplete) {\n  const chunks = bscript.decompile(script)\n  if (chunks.length < 2) return false\n  if (chunks[0] !== OPS.OP_0) return false\n\n  if (allowIncomplete) {\n    return chunks.slice(1).every(partialSignature)\n  }\n\n  return chunks.slice(1).every(bscript.isCanonicalScriptSignature)\n}\ncheck.toJSON = function () { return 'multisig input' }\n\nmodule.exports = { check }\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","partialSignature","value","OPS","OP_0","bscript","isCanonicalScriptSignature","check","script","allowIncomplete","chunks","decompile","length","slice","every","toJSON","check.toJSON"]
}
