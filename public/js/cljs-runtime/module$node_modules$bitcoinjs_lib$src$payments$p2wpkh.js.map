{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2wpkh.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2wpkh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2wpkh\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\nconst ecc = require('tiny-secp256k1')\n\nconst bcrypto = require('../crypto')\nconst bech32 = require('bech32')\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\n\nconst EMPTY_BUFFER = Buffer.alloc(0)\n\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh (a, opts) {\n  if (\n    !a.address &&\n    !a.hash &&\n    !a.output &&\n    !a.pubkey &&\n    !a.witness\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    input: typef.maybe(typef.BufferN(0)),\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.BufferN(22)),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a)\n\n  const _address = lazy.value(function () {\n    const result = bech32.decode(a.address)\n    const version = result.words.shift()\n    const data = bech32.fromWords(result.words)\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    }\n  })\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return\n\n    const words = bech32.toWords(o.hash)\n    words.unshift(0x00)\n    return bech32.encode(network.bech32, words)\n  })\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(2, 22)\n    if (a.address) return _address().data\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey)\n  })\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return\n    return bscript.compile([\n      OPS.OP_0,\n      o.hash\n    ])\n  })\n  lazy.prop(o, 'pubkey', function () {\n    if (a.pubkey) return a.pubkey\n    if (!a.witness) return\n    return a.witness[1]\n  })\n  lazy.prop(o, 'signature', function () {\n    if (!a.witness) return\n    return a.witness[0]\n  })\n  lazy.prop(o, 'input', function () {\n    if (!o.witness) return\n    return EMPTY_BUFFER\n  })\n  lazy.prop(o, 'witness', function () {\n    if (!a.pubkey) return\n    if (!a.signature) return\n    return [a.signature, a.pubkey]\n  })\n\n  // extended validation\n  if (opts.validate) {\n    let hash\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix) throw new TypeError('Invalid prefix or Network mismatch')\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version')\n      if (_address().data.length !== 20) throw new TypeError('Invalid address data')\n      hash = _address().data\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch')\n      else hash = a.hash\n    }\n\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14) throw new TypeError('Output is invalid')\n      if (hash && !hash.equals(a.output.slice(2))) throw new TypeError('Hash mismatch')\n      else hash = a.output.slice(2)\n    }\n\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey)\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch')\n      else hash = pkh\n    }\n\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid')\n      if (!bscript.isCanonicalScriptSignature(a.witness[0])) throw new TypeError('Witness has invalid signature')\n      if (!ecc.isPoint(a.witness[1])) throw new TypeError('Witness has invalid pubkey')\n\n      if (a.signature && !a.signature.equals(a.witness[0])) throw new TypeError('Signature mismatch')\n      if (a.pubkey && !a.pubkey.equals(a.witness[1])) throw new TypeError('Pubkey mismatch')\n\n      const pkh = bcrypto.hash160(a.witness[1])\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2wpkh\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","lazy","typef","OPS","ecc","bcrypto","bech32","bscript","BITCOIN_NETWORK","bitcoin","EMPTY_BUFFER","Buffer","alloc","p2wpkh","a","opts","address","hash","output","pubkey","witness","TypeError","Object","assign","validate","maybe","String","BufferN","input","network","isPoint","signature","isCanonicalScriptSignature","arrayOf","_address","value","result","decode","version","words","shift","data","fromWords","prefix","from","o","prop","toWords","unshift","encode","slice","hash160","compile","OP_0","length","equals","pkh"]
}
