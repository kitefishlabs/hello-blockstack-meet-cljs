{
"version":3,
"file":"module$node_modules$blockstack$lib$profiles$services$serviceUtils.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,kEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGnJC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,4BAAA,CAEAA,QAAoC,CAACC,UAAD,CAAa,CAC/C,IAAIC,KAA0B,CAAnB,CAAAC,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,IAE/E,IAAI,CAACD,IAAL,CACE,MAAO,CAAA,CAGTD,WAAA,CAAaA,UAAAK,YAAA,EAEb,IAA6B,CAA7B,CAAIJ,IAAAK,MAAA,CAAW,GAAX,CAAAH,OAAJ,CACE,KAAUI,MAAJ,CAAU,qDAAV,CAAN,CAGF,IAAIC,SAAW,IAGXP,KAAAQ,SAAA,CAAc,KAAd,CAAJ;CACED,QADF,CACaP,IAAAK,MAAA,CAAW,KAAX,CAAA,CAAkB,CAAlB,CADb,CAIII,KAAAA,CAAiC,IAAZ,EAAAF,QAAA,CAAmB,CAAC,4CAAD,CAAgDA,QAAhD,CAA0D,2CAA1D,CAAwGA,QAAxG,CAAkH,mCAAlH,CAAwJA,QAAxJ,CAAkK,kBAAlK,CAAuLA,QAAvL,CAAkM,yBAAlM,CAA6N,iBAA7N,CAAiPA,QAAjP,CAA4P,yBAA5P,CAAuR,iBAAvR,CAA2SA,QAA3S,CAAsT,iBAAtT,CAAyU,kBAAzU,CAA8VA,QAA9V,CAAyW,iBAAzW,CAA4X,kBAA5X,CAAiZA,QAAjZ,CAA4Z,iBAA5Z,CAA+a,kBAA/a,CAAocA,QAApc,CAA+c,sBAA/c,CAAue,kBAAve;AAA4fP,IAA5f,CAAmgB,uBAAngB,CAC5C,iBAD4C,CACxBA,IADwB,CACjB,sBADiB,CACO,0BADP,CACiCA,IADjC,CACwC,+BADxC,CAAnB,CAC2F,CACpH,kBADoH,CAC/FA,IAD+F,CACxF,uBADwF,CAEpH,iBAFoH,CAEhGA,IAFgG,CAEzF,sBAFyF,CAEjE,0BAFiE,CAEvCA,IAFuC,CAEhC,+BAFgC,CAIpH,KAAK,IAAIU,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,IAAAP,OAApB,CAA+CQ,CAAA,EAA/C,CAEE,GAAIX,UAAAY,SAAA,CADoBF,IAAAG,CAAmBF,CAAnBE,CACpB,CAAJ,CACE,MAAO,CAAA,CAIX,OAAgB,KAAhB,EAAIL,QAAJ,EAAwBR,UAAAY,SAAA,CAAoB,iBAApB,CAAxB,EAAkEZ,UAAAY,SAAA,CAAoB,GAApB,CAA0BJ,QAA1B,CAAlE,CACS,CAAA,CADT,CAIO,CAAA,CApCwC,CADjDd,QAAAoB,mCAAA;AAwCAA,QAA2C,CAACC,cAAD,CAAiBC,OAAjB,CAA0B,CACnED,cAAA,CAAiBA,cAAAT,MAAA,CAAqBU,OAArB,CAAA,CAA8B,CAA9B,CAAAX,YAAA,EAAjB,CAAkEW,OAE9DN,QAAAA,CAAqB,CAAC,yDAAD,CAA6DM,OAA7D,CAEzB,KAAK,IAAIL,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,OAAAP,OAApB,CAA+CQ,CAAA,EAA/C,CAEE,GAAII,cAAAH,SAAA,CADoBF,OAAAG,CAAmBF,CAAnBE,CACpB,CAAJ,CACE,MAAO,CAAA,CAIX,OAAO,CAAA,CAZ4D,CA/C8E;",
"sources":["node_modules/blockstack/lib/profiles/services/serviceUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$profiles$services$serviceUtils\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsValidProofStatement = containsValidProofStatement;\nexports.containsValidAddressProofStatement = containsValidAddressProofStatement;\nfunction containsValidProofStatement(searchText) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!name) {\n    return false;\n  }\n\n  searchText = searchText.toLowerCase();\n\n  if (name.split('.').length < 2) {\n    throw new Error('Please provide the fully qualified Blockstack name.');\n  }\n\n  var username = null;\n\n  // support legacy Blockstack ID proofs\n  if (name.endsWith('.id')) {\n    username = name.split('.id')[0];\n  }\n\n  var verificationStyles = username != null ? ['verifying myself: my bitcoin username is +' + username, 'verifying myself: my bitcoin username is ' + username, 'verifying myself: my openname is ' + username, 'verifying that +' + username + ' is my bitcoin username', 'verifying that ' + username + ' is my bitcoin username', 'verifying that ' + username + ' is my openname', 'verifying that +' + username + ' is my openname', 'verifying i am +' + username + ' on my passcard', 'verifying that +' + username + ' is my blockchain id', 'verifying that \"' + name + '\" is my blockstack id', // id\n  'verifying that ' + name + ' is my blockstack id', 'verifying that &quot;' + name + '&quot; is my blockstack id'] : [// only these formats are valid for non-.id tlds\n  'verifying that \"' + name + '\" is my blockstack id', // id\n  'verifying that ' + name + ' is my blockstack id', 'verifying that &quot;' + name + '&quot; is my blockstack id'];\n\n  for (var i = 0; i < verificationStyles.length; i++) {\n    var verificationStyle = verificationStyles[i];\n    if (searchText.includes(verificationStyle)) {\n      return true;\n    }\n  }\n\n  if (username != null && searchText.includes('verifymyonename') && searchText.includes('+' + username)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction containsValidAddressProofStatement(proofStatement, address) {\n  proofStatement = proofStatement.split(address)[0].toLowerCase() + address;\n\n  var verificationStyles = ['verifying my blockstack id is secured with the address ' + address];\n\n  for (var i = 0; i < verificationStyles.length; i++) {\n    var verificationStyle = verificationStyles[i];\n    if (proofStatement.includes(verificationStyle)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","containsValidProofStatement","searchText","name","arguments","length","undefined","toLowerCase","split","Error","username","endsWith","verificationStyles","i","includes","verificationStyle","containsValidAddressProofStatement","proofStatement","address"]
}
