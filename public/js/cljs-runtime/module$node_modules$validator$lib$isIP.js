shadow$provide.module$node_modules$validator$lib$isIP=function(global,process,require,module,exports,shadow$shims){function isIP(str){var version=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"";(0,_assertString2.default)(str);if(version=String(version)){if("4"===version)return ipv4Maybe.test(str)?255>=str.split(".").sort(function(a,b){return a-b})[3]:!1;if("6"===version){version=str.split(":");var foundOmissionBlock=!1,foundIPv4TransitionBlock=isIP(version[version.length-1],4),expectedNumberOfBlocks=
foundIPv4TransitionBlock?7:8;if(version.length>expectedNumberOfBlocks)return!1;if("::"===str)return!0;"::"===str.substr(0,2)?(version.shift(),version.shift(),foundOmissionBlock=!0):"::"===str.substr(str.length-2)&&(version.pop(),version.pop(),foundOmissionBlock=!0);for(var i=0;i<version.length;++i)if(""===version[i]&&0<i&&i<version.length-1){if(foundOmissionBlock)return!1;foundOmissionBlock=!0}else if(!(foundIPv4TransitionBlock&&i===version.length-1||ipv6Block.test(version[i])))return!1;return foundOmissionBlock?
1<=version.length:version.length===expectedNumberOfBlocks}}else return isIP(str,4)||isIP(str,6);return!1}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=isIP;var _assertString2=(global=require("module$node_modules$validator$lib$util$assertString"))&&global.__esModule?global:{default:global},ipv4Maybe=/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/,ipv6Block=/^[0-9A-F]{1,4}$/i;module.exports=exports["default"]}
//# sourceMappingURL=module$node_modules$validator$lib$isIP.js.map
