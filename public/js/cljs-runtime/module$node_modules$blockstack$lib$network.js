shadow$provide.module$node_modules$blockstack$lib$network=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!==typeof call&&"function"!==typeof call?self:call}function _inherits(subClass,superClass){if("function"!==typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+
typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}});superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function");}Object.defineProperty(exports,"__esModule",{value:!0});exports.network=exports.BlockchainInfoApi=
exports.InsightClient=exports.BitcoindAPI=exports.LocalRegtest=exports.BlockstackNetwork=exports.BitcoinNetwork=void 0;var _slicedToArray=function(){return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e;}}return _arr}throw new TypeError("Invalid attempt to destructure non-iterable instance");
}}(),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){protoProps&&defineProperties(Constructor.prototype,protoProps);staticProps&&defineProperties(Constructor,staticProps);return Constructor}}();global=
require("module$node_modules$bitcoinjs_lib$src$index");var _bitcoinjsLib2=_interopRequireDefault(global);global=require("module$node_modules$form_data$lib$browser");var _formData2=_interopRequireDefault(global);global=require("module$node_modules$bigi$lib$index");var _bigi2=_interopRequireDefault(global);global=require("module$node_modules$ripemd160$index");var _ripemd2=_interopRequireDefault(global),_errors=require("module$node_modules$blockstack$lib$errors"),_logger=require("module$node_modules$blockstack$lib$logger"),
BitcoinNetwork=exports.BitcoinNetwork=function(){function BitcoinNetwork(){_classCallCheck(this,BitcoinNetwork)}_createClass(BitcoinNetwork,[{key:"broadcastTransaction",value:function(transaction){return Promise.reject(Error("Not implemented, broadcastTransaction("+transaction+")"))}},{key:"getBlockHeight",value:function(){return Promise.reject(Error("Not implemented, getBlockHeight()"))}},{key:"getTransactionInfo",value:function(txid){return Promise.reject(Error("Not implemented, getTransactionInfo("+
txid+")"))}},{key:"getNetworkedUTXOs",value:function(address){return Promise.reject(Error("Not implemented, getNetworkedUTXOs("+address+")"))}}]);return BitcoinNetwork}();require=exports.BlockstackNetwork=function(){function BlockstackNetwork(apiUrl,broadcastServiceUrl,bitcoinAPI){var network=3<arguments.length&&void 0!==arguments[3]?arguments[3]:_bitcoinjsLib2.default.networks.bitcoin;_classCallCheck(this,BlockstackNetwork);this.blockstackAPIUrl=apiUrl;this.broadcastServiceUrl=broadcastServiceUrl;
this.layer1=network;this.btc=bitcoinAPI;this.DUST_MINIMUM=5500;this.includeUtxoMap={};this.excludeUtxoSet=[];this.MAGIC_BYTES="id"}_createClass(BlockstackNetwork,[{key:"coerceAddress",value:function(address){var _bitcoinjs$address$fr=_bitcoinjsLib2.default.address.fromBase58Check(address),hash=_bitcoinjs$address$fr.hash;_bitcoinjs$address$fr=_bitcoinjs$address$fr.version;var pubKeyHashes=[_bitcoinjsLib2.default.networks.bitcoin.pubKeyHash,_bitcoinjsLib2.default.networks.testnet.pubKeyHash];if(0<=
[_bitcoinjsLib2.default.networks.bitcoin.scriptHash,_bitcoinjsLib2.default.networks.testnet.scriptHash].indexOf(_bitcoinjs$address$fr))address=this.layer1.scriptHash;else if(0<=pubKeyHashes.indexOf(_bitcoinjs$address$fr))address=this.layer1.pubKeyHash;else throw Error("Unrecognized address version number "+_bitcoinjs$address$fr+" in "+address);return _bitcoinjsLib2.default.address.toBase58Check(hash,address)}},{key:"getDefaultBurnAddress",value:function(){return this.coerceAddress("1111111111111111111114oLvT2")}},
{key:"getNamePriceV1",value:function(fullyQualifiedName){var _this=this;return fetch(this.blockstackAPIUrl+"/v1/prices/names/"+fullyQualifiedName).then(function(resp){if(!resp.ok)throw Error("Failed to query name price for "+fullyQualifiedName);return resp}).then(function(resp){return resp.json()}).then(function(resp){return resp.name_price}).then(function(namePrice){if(!namePrice||!namePrice.satoshis)throw Error("Failed to get price for "+fullyQualifiedName+". Does the namespace exist?");namePrice.satoshis<
_this.DUST_MINIMUM&&(namePrice.satoshis=_this.DUST_MINIMUM);return{units:"BTC",amount:_bigi2.default.fromByteArrayUnsigned(String(namePrice.satoshis))}})}},{key:"getNamespacePriceV1",value:function(namespaceID){var _this2=this;return fetch(this.blockstackAPIUrl+"/v1/prices/namespaces/"+namespaceID).then(function(resp){if(!resp.ok)throw Error("Failed to query name price for "+namespaceID);return resp}).then(function(resp){return resp.json()}).then(function(namespacePrice){if(!namespacePrice||!namespacePrice.satoshis)throw Error("Failed to get price for "+
namespaceID);namespacePrice.satoshis<_this2.DUST_MINIMUM&&(namespacePrice.satoshis=_this2.DUST_MINIMUM);return{units:"BTC",amount:_bigi2.default.fromByteArrayUnsigned(String(namespacePrice.satoshis))}})}},{key:"getNamePriceV2",value:function(fullyQualifiedName){var _this3=this;return fetch(this.blockstackAPIUrl+"/v2/prices/names/"+fullyQualifiedName).then(function(resp){if(200!==resp.status)throw Error("The upstream node does not handle the /v2/ price namespace");return resp}).then(function(resp){return resp.json()}).then(function(resp){return resp.name_price}).then(function(namePrice){if(!namePrice)throw Error("Failed to get price for "+
fullyQualifiedName+". Does the namespace exist?");var result={units:namePrice.units,amount:_bigi2.default.fromByteArrayUnsigned(namePrice.amount)};"BTC"===namePrice.units&&(namePrice=_bigi2.default.fromByteArrayUnsigned(String(_this3.DUST_MINIMUM)),0>result.amount.compareTo(namePrice)&&(result.amount=namePrice));return result})}},{key:"getNamespacePriceV2",value:function(namespaceID){var _this4=this;return fetch(this.blockstackAPIUrl+"/v2/prices/namespaces/"+namespaceID).then(function(resp){if(200!==
resp.status)throw Error("The upstream node does not handle the /v2/ price namespace");return resp}).then(function(resp){return resp.json()}).then(function(namespacePrice){if(!namespacePrice)throw Error("Failed to get price for "+namespaceID);var result={units:namespacePrice.units,amount:_bigi2.default.fromByteArrayUnsigned(namespacePrice.amount)};"BTC"===namespacePrice.units&&(namespacePrice=_bigi2.default.fromByteArrayUnsigned(String(_this4.DUST_MINIMUM)),0>result.amount.compareTo(namespacePrice)&&
(result.amount=namespacePrice));return result})}},{key:"getNamePrice",value:function(fullyQualifiedName){var _this5=this;return Promise.resolve().then(function(){return _this5.getNamePriceV2(fullyQualifiedName)}).catch(function(){return _this5.getNamePriceV1(fullyQualifiedName)})}},{key:"getNamespacePrice",value:function(namespaceID){var _this6=this;return Promise.resolve().then(function(){return _this6.getNamespacePriceV2(namespaceID)}).catch(function(){return _this6.getNamespacePriceV1(namespaceID)})}},
{key:"getGracePeriod",value:function(){return new Promise(function(resolve){return resolve(5E3)})}},{key:"getNamesOwned",value:function(address){address=this.coerceAddress(address);return fetch(this.blockstackAPIUrl+"/v1/addresses/bitcoin/"+address).then(function(resp){return resp.json()}).then(function(obj){return obj.names})}},{key:"getNamespaceBurnAddress",value:function(namespace){var _this7=this;return Promise.all([fetch(this.blockstackAPIUrl+"/v1/namespaces/"+namespace),this.getBlockHeight()]).then(function(_ref){var _ref2=
_slicedToArray(_ref,2);_ref=_ref2[0];_ref2=_ref2[1];if(404===_ref.status)throw Error("No such namespace '"+namespace+"'");return Promise.all([_ref.json(),_ref2])}).then(function(_ref3){var _ref4=_slicedToArray(_ref3,2);_ref3=_ref4[0];_ref4=_ref4[1];var address=_this7.getDefaultBurnAddress();2===_ref3.version&&_ref3.reveal_block+52595>=_ref4&&(address=_ref3.address);return address}).then(function(address){return _this7.coerceAddress(address)})}},{key:"getNameInfo",value:function(fullyQualifiedName){var _this8=
this;return fetch(this.blockstackAPIUrl+"/v1/names/"+fullyQualifiedName).then(function(resp){if(404===resp.status)throw Error("Name not found");if(200!==resp.status)throw Error("Bad response status: "+resp.status);return resp.json()}).then(function(nameInfo){return nameInfo.address?Object.assign({},nameInfo,{address:_this8.coerceAddress(nameInfo.address)}):nameInfo})}},{key:"getNamespaceInfo",value:function(namespaceID){var _this9=this;return fetch(this.blockstackAPIUrl+"/v1/namespaces/"+namespaceID).then(function(resp){if(404===
resp.status)throw Error("Namespace not found");if(200!==resp.status)throw Error("Bad response status: "+resp.status);return resp.json()}).then(function(namespaceInfo){return namespaceInfo.address&&namespaceInfo.recipient_address?Object.assign({},namespaceInfo,{address:_this9.coerceAddress(namespaceInfo.address),recipient_address:_this9.coerceAddress(namespaceInfo.recipient_address)}):namespaceInfo})}},{key:"getZonefile",value:function(zonefileHash){return fetch(this.blockstackAPIUrl+"/v1/zonefiles/"+
zonefileHash).then(function(resp){if(200===resp.status)return resp.text().then(function(body){var sha256=_bitcoinjsLib2.default.crypto.sha256(body);sha256=(new _ripemd2.default).update(sha256).digest("hex");if(sha256!==zonefileHash)throw Error("Zone file contents hash to "+sha256+", not "+zonefileHash);return body});throw Error("Bad response status: "+resp.status);})}},{key:"getAccountStatus",value:function(address,tokenType){var _this10=this;return fetch(this.blockstackAPIUrl+"/v1/accounts/"+address+
"/"+tokenType+"/status").then(function(resp){if(404===resp.status)throw Error("Account not found");if(200!==resp.status)throw Error("Bad response status: "+resp.status);return resp.json()}).then(function(accountStatus){return Object.assign({},accountStatus,{address:_this10.coerceAddress(accountStatus.address),debit_value:_bigi2.default.fromByteArrayUnsigned(String(accountStatus.debit_value)),credit_value:_bigi2.default.fromByteArrayUnsigned(String(accountStatus.credit_value))})})}},{key:"getAccountHistoryPage",
value:function(address,page){var _this11=this;return fetch(this.blockstackAPIUrl+"/v1/accounts/"+address+"/history?page\x3d"+page).then(function(resp){if(404===resp.status)throw Error("Account not found");if(200!==resp.status)throw Error("Bad response status: "+resp.status);return resp.json()}).then(function(historyList){if(historyList.error)throw Error("Unable to get account history page: "+historyList.error);return historyList.map(function(histEntry){histEntry.address=_this11.coerceAddress(histEntry.address);
histEntry.debit_value=_bigi2.default.fromByteArrayUnsigned(String(histEntry.debit_value));histEntry.credit_value=_bigi2.default.fromByteArrayUnsigned(String(histEntry.credit_value));return histEntry})})}},{key:"getAccountAt",value:function(address,blockHeight){var _this12=this;return fetch(this.blockstackAPIUrl+"/v1/accounts/"+address+"/history/"+blockHeight).then(function(resp){if(404===resp.status)throw Error("Account not found");if(200!==resp.status)throw Error("Bad response status: "+resp.status);
return resp.json()}).then(function(historyList){if(historyList.error)throw Error("Unable to get historic account state: "+historyList.error);return historyList.map(function(histEntry){histEntry.address=_this12.coerceAddress(histEntry.address);histEntry.debit_value=_bigi2.default.fromByteArrayUnsigned(String(histEntry.debit_value));histEntry.credit_value=_bigi2.default.fromByteArrayUnsigned(String(histEntry.credit_value));return histEntry})})}},{key:"getAccountTokens",value:function(address){return fetch(this.blockstackAPIUrl+
"/v1/accounts/"+address+"/tokens").then(function(resp){if(404===resp.status)throw Error("Account not found");if(200!==resp.status)throw Error("Bad response status: "+resp.status);return resp.json()}).then(function(tokenList){if(tokenList.error)throw Error("Unable to get token list: "+tokenList.error);return tokenList})}},{key:"getAccountBalance",value:function(address,tokenType){return fetch(this.blockstackAPIUrl+"/v1/accounts/"+address+"/"+tokenType+"/balance").then(function(resp){if(404===resp.status)return Promise.resolve().then(function(){return _bigi2.default.fromByteArrayUnsigned("0")});
if(200!==resp.status)throw Error("Bad response status: "+resp.status);return resp.json()}).then(function(tokenBalance){if(tokenBalance.error)throw Error("Unable to get account balance: "+tokenBalance.error);var balance="0";tokenBalance&&tokenBalance.balance&&(balance=tokenBalance.balance);return _bigi2.default.fromByteArrayUnsigned(balance)})}},{key:"broadcastServiceFetchHelper",value:function(endpoint,body){body={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},
body:JSON.stringify(body)};return fetch(this.broadcastServiceUrl+"/v1/broadcast/"+endpoint,body).then(function(response){if(response.ok)return response.json();throw new _errors.RemoteServiceError(response);})}},{key:"broadcastTransaction",value:function(transaction){var transactionToWatch=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,confirmations=2<arguments.length&&void 0!==arguments[2]?arguments[2]:6;return transaction?confirmations||0===confirmations?null===transactionToWatch?this.btc.broadcastTransaction(transaction):
this.broadcastServiceFetchHelper("transaction",{transaction:transaction,transactionToWatch:transactionToWatch,confirmations:confirmations}):(transactionToWatch=new _errors.MissingParameterError("confirmations"),Promise.reject(transactionToWatch)):(transactionToWatch=new _errors.MissingParameterError("transaction"),Promise.reject(transactionToWatch))}},{key:"broadcastZoneFile",value:function(zoneFile){var transactionToWatch=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return zoneFile?
transactionToWatch?this.broadcastServiceFetchHelper("zone-file",{zoneFile:zoneFile,transactionToWatch:transactionToWatch}):fetch(this.blockstackAPIUrl+"/v1/zonefile/",{method:"POST",body:JSON.stringify({zonefile:zoneFile}),headers:{"Content-Type":"application/json"}}).then(function(resp){return resp.json().then(function(respObj){if(respObj.hasOwnProperty("error"))throw new _errors.RemoteServiceError(resp);return respObj.servers})}):Promise.reject(new _errors.MissingParameterError("zoneFile"))}},{key:"broadcastNameRegistration",
value:function(preorderTransaction,registerTransaction,zoneFile){return preorderTransaction?registerTransaction?zoneFile?this.broadcastServiceFetchHelper("registration",{preorderTransaction:preorderTransaction,registerTransaction:registerTransaction,zoneFile:zoneFile}):(preorderTransaction=new _errors.MissingParameterError("zoneFile"),Promise.reject(preorderTransaction)):(preorderTransaction=new _errors.MissingParameterError("registerTransaction"),Promise.reject(preorderTransaction)):(preorderTransaction=
new _errors.MissingParameterError("preorderTransaction"),Promise.reject(preorderTransaction))}},{key:"getFeeRate",value:function(){return fetch("https://bitcoinfees.earn.com/api/v1/fees/recommended").then(function(resp){return resp.json()}).then(function(rates){return Math.floor(rates.fastestFee)})}},{key:"countDustOutputs",value:function(){throw Error("Not implemented.");}},{key:"getUTXOs",value:function(address){var _this13=this;return this.getNetworkedUTXOs(address).then(function(networkedUTXOs){var returnSet=
networkedUTXOs.concat();_this13.includeUtxoMap.hasOwnProperty(address)&&(returnSet=networkedUTXOs.concat(_this13.includeUtxoMap[address]));var excludeSet=_this13.excludeUtxoSet;return returnSet=returnSet.filter(function(utxo){return!excludeSet.reduce(function(inSet,utxoToCheck){return inSet||utxoToCheck.tx_hash===utxo.tx_hash&&utxoToCheck.tx_output_n===utxo.tx_output_n},!1)})})}},{key:"modifyUTXOSetFrom",value:function(txHex){var _this14=this;txHex=_bitcoinjsLib2.default.Transaction.fromHex(txHex);
var excludeSet=this.excludeUtxoSet.concat();txHex.ins.forEach(function(utxoUsed){var reverseHash=shadow$shims.Buffer.from(utxoUsed.hash);reverseHash.reverse();excludeSet.push({tx_hash:reverseHash.toString("hex"),tx_output_n:utxoUsed.index})});this.excludeUtxoSet=excludeSet;var txHash=txHex.getHash().reverse().toString("hex");txHex.outs.forEach(function(utxoCreated,txOutputN){try{_bitcoinjsLib2.default.payments.embed({output:utxoCreated.script},{validate:!0});var JSCompiler_inline_result=!0}catch(_){JSCompiler_inline_result=
!1}if(!JSCompiler_inline_result){JSCompiler_inline_result=_bitcoinjsLib2.default.address.fromOutputScript(utxoCreated.script,_this14.layer1);var includeSet=[];_this14.includeUtxoMap.hasOwnProperty(JSCompiler_inline_result)&&(includeSet=includeSet.concat(_this14.includeUtxoMap[JSCompiler_inline_result]));includeSet.push({tx_hash:txHash,confirmations:0,value:utxoCreated.value,tx_output_n:txOutputN});_this14.includeUtxoMap[JSCompiler_inline_result]=includeSet}})}},{key:"resetUTXOs",value:function(address){delete this.includeUtxoMap[address];
this.excludeUtxoSet=[]}},{key:"getConsensusHash",value:function(){return fetch(this.blockstackAPIUrl+"/v1/blockchains/bitcoin/consensus").then(function(resp){return resp.json()}).then(function(x){return x.consensus_hash})}},{key:"getTransactionInfo",value:function(txHash){return this.btc.getTransactionInfo(txHash)}},{key:"getBlockHeight",value:function(){return this.btc.getBlockHeight()}},{key:"getNetworkedUTXOs",value:function(address){return this.btc.getNetworkedUTXOs(address)}}]);return BlockstackNetwork}();
global=exports.LocalRegtest=function(_BlockstackNetwork){function LocalRegtest(apiUrl,broadcastServiceUrl,bitcoinAPI){_classCallCheck(this,LocalRegtest);return _possibleConstructorReturn(this,(LocalRegtest.__proto__||Object.getPrototypeOf(LocalRegtest)).call(this,apiUrl,broadcastServiceUrl,bitcoinAPI,_bitcoinjsLib2.default.networks.testnet))}_inherits(LocalRegtest,_BlockstackNetwork);_createClass(LocalRegtest,[{key:"getFeeRate",value:function(){return Promise.resolve(Math.floor(1E-5*1E8))}}]);return LocalRegtest}(require);
process=exports.BitcoindAPI=function(_BitcoinNetwork){function BitcoindAPI(bitcoindUrl,bitcoindCredentials){_classCallCheck(this,BitcoindAPI);var _this16=_possibleConstructorReturn(this,(BitcoindAPI.__proto__||Object.getPrototypeOf(BitcoindAPI)).call(this));_this16.bitcoindUrl=bitcoindUrl;_this16.bitcoindCredentials=bitcoindCredentials;_this16.importedBefore={};return _this16}_inherits(BitcoindAPI,_BitcoinNetwork);_createClass(BitcoindAPI,[{key:"broadcastTransaction",value:function(transaction){transaction=
{jsonrpc:"1.0",method:"sendrawtransaction",params:[transaction]};var headers={Authorization:"Basic "+shadow$shims.Buffer.from(this.bitcoindCredentials.username+":"+this.bitcoindCredentials.password).toString("base64")};return fetch(this.bitcoindUrl,{method:"POST",body:JSON.stringify(transaction),headers:headers}).then(function(resp){return resp.json()}).then(function(respObj){return respObj.result})}},{key:"getBlockHeight",value:function(){var headers={Authorization:"Basic "+shadow$shims.Buffer.from(this.bitcoindCredentials.username+
":"+this.bitcoindCredentials.password).toString("base64")};return fetch(this.bitcoindUrl,{method:"POST",body:JSON.stringify({jsonrpc:"1.0",method:"getblockcount"}),headers:headers}).then(function(resp){return resp.json()}).then(function(respObj){return respObj.result})}},{key:"getTransactionInfo",value:function(txHash){var _this17=this;txHash={jsonrpc:"1.0",method:"gettransaction",params:[txHash]};var authString=shadow$shims.Buffer.from(this.bitcoindCredentials.username+":"+this.bitcoindCredentials.password).toString("base64"),
headers={Authorization:"Basic "+authString};return fetch(this.bitcoindUrl,{method:"POST",body:JSON.stringify(txHash),headers:headers}).then(function(resp){return resp.json()}).then(function(respObj){return respObj.result}).then(function(txInfo){return txInfo.blockhash}).then(function(blockhash){blockhash={jsonrpc:"1.0",method:"getblockheader",params:[blockhash]};headers.Authorization="Basic "+authString;return fetch(_this17.bitcoindUrl,{method:"POST",body:JSON.stringify(blockhash),headers:headers})}).then(function(resp){return resp.json()}).then(function(respObj){if(respObj&&
respObj.result)return{block_height:respObj.result.height};throw Error("Unconfirmed transaction");})}},{key:"getNetworkedUTXOs",value:function(address){var _this18=this,jsonRPCImport={jsonrpc:"1.0",method:"importaddress",params:[address]},jsonRPCUnspent={jsonrpc:"1.0",method:"listunspent",params:[0,9999999,[address]]},headers={Authorization:"Basic "+shadow$shims.Buffer.from(this.bitcoindCredentials.username+":"+this.bitcoindCredentials.password).toString("base64")};return(this.importedBefore[address]?
Promise.resolve():fetch(this.bitcoindUrl,{method:"POST",body:JSON.stringify(jsonRPCImport),headers:headers}).then(function(){_this18.importedBefore[address]=!0})).then(function(){return fetch(_this18.bitcoindUrl,{method:"POST",body:JSON.stringify(jsonRPCUnspent),headers:headers})}).then(function(resp){return resp.json()}).then(function(x){return x.result}).then(function(utxos){return utxos.map(function(x){return Object({value:Math.round(1E8*x.amount),confirmations:x.confirmations,tx_hash:x.txid,tx_output_n:x.vout})})})}}]);
return BitcoindAPI}(BitcoinNetwork);module=exports.InsightClient=function(_BitcoinNetwork2){function InsightClient(){var insightUrl=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"https://utxo.technofractal.com/";_classCallCheck(this,InsightClient);var _this19=_possibleConstructorReturn(this,(InsightClient.__proto__||Object.getPrototypeOf(InsightClient)).call(this));_this19.apiUrl=insightUrl;return _this19}_inherits(InsightClient,_BitcoinNetwork2);_createClass(InsightClient,[{key:"broadcastTransaction",
value:function(transaction){return fetch(this.apiUrl+"/tx/send",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tx:transaction})}).then(function(resp){return resp.json()})}},{key:"getBlockHeight",value:function(){return fetch(this.apiUrl+"/status").then(function(resp){return resp.json()}).then(function(status){return status.blocks})}},{key:"getTransactionInfo",value:function(txHash){var _this20=this;return fetch(this.apiUrl+"/tx/"+txHash).then(function(resp){return resp.json()}).then(function(transactionInfo){if(transactionInfo.error)throw Error("Error finding transaction: "+
transactionInfo.error);return fetch(_this20.apiUrl+"/block/"+transactionInfo.blockHash)}).then(function(resp){return resp.json()}).then(function(blockInfo){return{block_height:blockInfo.height}})}},{key:"getNetworkedUTXOs",value:function(address){return fetch(this.apiUrl+"/addr/"+address+"/utxo").then(function(resp){return resp.json()}).then(function(utxos){return utxos.map(function(x){return{value:x.satoshis,confirmations:x.confirmations,tx_hash:x.txid,tx_output_n:x.vout}})})}}]);return InsightClient}(BitcoinNetwork);
BitcoinNetwork=exports.BlockchainInfoApi=function(_BitcoinNetwork3){function BlockchainInfoApi(){var blockchainInfoUrl=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"https://blockchain.info";_classCallCheck(this,BlockchainInfoApi);var _this21=_possibleConstructorReturn(this,(BlockchainInfoApi.__proto__||Object.getPrototypeOf(BlockchainInfoApi)).call(this));_this21.utxoProviderUrl=blockchainInfoUrl;return _this21}_inherits(BlockchainInfoApi,_BitcoinNetwork3);_createClass(BlockchainInfoApi,
[{key:"getBlockHeight",value:function(){return fetch(this.utxoProviderUrl+"/latestblock?cors\x3dtrue").then(function(resp){return resp.json()}).then(function(blockObj){return blockObj.height})}},{key:"getNetworkedUTXOs",value:function(address){return fetch(this.utxoProviderUrl+"/unspent?format\x3djson\x26active\x3d"+address+"\x26cors\x3dtrue").then(function(resp){return 500===resp.status?(_logger.Logger.debug("UTXO provider 500 usually means no UTXOs: returning []"),{unspent_outputs:[]}):resp.json()}).then(function(utxoJSON){return utxoJSON.unspent_outputs}).then(function(utxoList){return utxoList.map(function(utxo){return{value:utxo.value,
tx_output_n:utxo.tx_output_n,confirmations:utxo.confirmations,tx_hash:utxo.tx_hash_big_endian}})})}},{key:"getTransactionInfo",value:function(txHash){return fetch(this.utxoProviderUrl+"/rawtx/"+txHash+"?cors\x3dtrue").then(function(resp){if(200===resp.status)return resp.json();throw Error("Could not lookup transaction info for '"+txHash+"'. Server error.");}).then(function(respObj){return{block_height:respObj.block_height}})}},{key:"broadcastTransaction",value:function(transaction){var form=new _formData2.default;
form.append("tx",transaction);return fetch(this.utxoProviderUrl+"/pushtx?cors\x3dtrue",{method:"POST",body:form}).then(function(resp){return resp.text().then(function(respText){if(0<=respText.toLowerCase().indexOf("transaction submitted"))return _bitcoinjsLib2.default.Transaction.fromHex(transaction).getHash().reverse().toString("hex");throw new _errors.RemoteServiceError(resp,"Broadcast transaction failed with message: "+respText);})})}}]);return BlockchainInfoApi}(BitcoinNetwork);var LOCAL_REGTEST=
new global("http://localhost:16268","http://localhost:16269",new process("http://localhost:18332/",{username:"blockstack",password:"blockstacksystem"})),MAINNET_DEFAULT=new require("https://core.blockstack.org","https://broadcast.blockstack.org",new BitcoinNetwork);exports.network={BlockstackNetwork:require,LocalRegtest:global,BlockchainInfoApi:BitcoinNetwork,BitcoindAPI:process,InsightClient:module,defaults:{LOCAL_REGTEST:LOCAL_REGTEST,MAINNET_DEFAULT:MAINNET_DEFAULT}}}
//# sourceMappingURL=module$node_modules$blockstack$lib$network.js.map
