shadow$provide.module$node_modules$varuint_bitcoin$index=function(global,process,require,module,exports,shadow$shims){function checkUInt53(n){if(0>n||9007199254740991<n||0!==n%1)throw new RangeError("value out of range");}function encode(number,buffer,offset){checkUInt53(number);buffer||(buffer=Buffer.allocUnsafe(encodingLength(number)));if(!Buffer.isBuffer(buffer))throw new TypeError("buffer must be a Buffer instance");offset||(offset=0);253>number?(buffer.writeUInt8(number,offset),encode.bytes=
1):65535>=number?(buffer.writeUInt8(253,offset),buffer.writeUInt16LE(number,offset+1),encode.bytes=3):4294967295>=number?(buffer.writeUInt8(254,offset),buffer.writeUInt32LE(number,offset+1),encode.bytes=5):(buffer.writeUInt8(255,offset),buffer.writeUInt32LE(number>>>0,offset+1),buffer.writeUInt32LE(number/4294967296|0,offset+5),encode.bytes=9);return buffer}function decode(buffer,offset){if(!Buffer.isBuffer(buffer))throw new TypeError("buffer must be a Buffer instance");offset||(offset=0);var first=
buffer.readUInt8(offset);if(253>first)return decode.bytes=1,first;if(253===first)return decode.bytes=3,buffer.readUInt16LE(offset+1);if(254===first)return decode.bytes=5,buffer.readUInt32LE(offset+1);decode.bytes=9;first=buffer.readUInt32LE(offset+1);buffer=4294967296*buffer.readUInt32LE(offset+5)+first;checkUInt53(buffer);return buffer}function encodingLength(number){checkUInt53(number);return 253>number?1:65535>=number?3:4294967295>=number?5:9}var Buffer=require("module$node_modules$safe_buffer$index").Buffer;
module.exports={encode:encode,decode:decode,encodingLength:encodingLength}}
//# sourceMappingURL=module$node_modules$varuint_bitcoin$index.js.map
