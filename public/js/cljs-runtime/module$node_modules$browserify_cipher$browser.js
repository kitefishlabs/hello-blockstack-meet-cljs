shadow$provide.module$node_modules$browserify_cipher$browser=function(global,process,require,module,exports,shadow$shims){function createCipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite])return aes.createCipheriv(suite,key,iv);if(desModes[suite])return new DES({key:key,iv:iv,mode:suite});throw new TypeError("invalid suite type");}function createDecipheriv(suite,key,iv){suite=suite.toLowerCase();if(aesModes[suite])return aes.createDecipheriv(suite,key,iv);if(desModes[suite])return new DES({key:key,
iv:iv,mode:suite,decrypt:!0});throw new TypeError("invalid suite type");}var DES=require("module$node_modules$browserify_des$index"),aes=require("module$node_modules$browserify_aes$browser"),aesModes=require("module$node_modules$browserify_aes$modes$index"),desModes=require("module$node_modules$browserify_des$modes"),ebtk=require("module$node_modules$evp_bytestokey$index");exports.createCipher=exports.Cipher=function(suite,password){suite=suite.toLowerCase();if(aesModes[suite]){var keyLen=aesModes[suite].key;
var ivLen=aesModes[suite].iv}else if(desModes[suite])keyLen=8*desModes[suite].key,ivLen=desModes[suite].iv;else throw new TypeError("invalid suite type");password=ebtk(password,!1,keyLen,ivLen);return createCipheriv(suite,password.key,password.iv)};exports.createCipheriv=exports.Cipheriv=createCipheriv;exports.createDecipher=exports.Decipher=function(suite,password){suite=suite.toLowerCase();if(aesModes[suite]){var keyLen=aesModes[suite].key;var ivLen=aesModes[suite].iv}else if(desModes[suite])keyLen=
8*desModes[suite].key,ivLen=desModes[suite].iv;else throw new TypeError("invalid suite type");password=ebtk(password,!1,keyLen,ivLen);return createDecipheriv(suite,password.key,password.iv)};exports.createDecipheriv=exports.Decipheriv=createDecipheriv;exports.listCiphers=exports.getCiphers=function(){return Object.keys(desModes).concat(aes.getCiphers())}}
//# sourceMappingURL=module$node_modules$browserify_cipher$browser.js.map
