{
"version":3,
"file":"module$node_modules$cross_fetch$dist$browser_polyfill.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/cross-fetch/dist/browser-polyfill.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cross_fetch$dist$browser_polyfill\"] = function(global,process,require,module,exports,shadow$shims) {\n(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","reader.onload","result","onerror","reader.onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","this._initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","DataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","this.blob","rejected","this.arrayBuffer","then","text","this.text","readAsText","this.formData","decode","json","this.json","JSON","parse","Request","input","options","url","credentials","method","mode","upcased","toUpperCase","methods","indexOf","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","fetch","viewClasses","isView","obj","call","Headers.prototype.append","oldValue","Headers.prototype.get","has","Headers.prototype.has","hasOwnProperty","Headers.prototype.set","Headers.prototype.forEach","callback","thisArg","keys","Headers.prototype.keys","push","values","Headers.prototype.values","entries","Headers.prototype.entries","clone","Request.prototype.clone","Response.prototype.clone","Response.error","response","redirectStatuses","redirect","Response.redirect","RangeError","location","self.fetch","init","request","xhr","XMLHttpRequest","xhr.onload","getAllResponseHeaders","responseURL","responseText","xhr.onerror","ontimeout","xhr.ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"]
}
