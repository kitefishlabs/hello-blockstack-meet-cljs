{
"version":3,
"file":"module$node_modules$cheerio$lib$static.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/cheerio/lib/static.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cheerio$lib$static\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Module dependencies\n */\n\nvar serialize = require('dom-serializer'),\n    select = require('css-select'),\n    parse = require('./parse'),\n    _ = {\n      merge: require('lodash.merge'),\n      defaults: require('lodash.defaults')\n    };\n\n/**\n * $.load(str)\n */\n\nexports.load = function(content, options) {\n  var Cheerio = require('./cheerio');\n\n  options = _.defaults(options || {}, Cheerio.prototype.options);\n\n  var root = parse(content, options);\n\n  var initialize = function(selector, context, r, opts) {\n    if (!(this instanceof initialize)) {\n      return new initialize(selector, context, r, opts);\n    }\n    opts = _.defaults(opts || {}, options);\n    return Cheerio.call(this, selector, context, r || root, opts);\n  };\n\n  // Ensure that selections created by the \"loaded\" `initialize` function are\n  // true Cheerio instances.\n  initialize.prototype = Object.create(Cheerio.prototype);\n  initialize.prototype.constructor = initialize;\n\n  // Mimic jQuery's prototype alias for plugin authors.\n  initialize.fn = initialize.prototype;\n\n  // Keep a reference to the top-level scope so we can chain methods that implicitly\n  // resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n  initialize.prototype._originalRoot = root;\n\n  // Add in the static methods\n  _.merge(initialize, exports);\n\n  // Add in the root\n  initialize._root = root;\n  // store options\n  initialize._options = options;\n\n  return initialize;\n};\n\n/*\n* Helper function\n*/\n\nfunction render(that, dom, options) {\n  if (!dom) {\n    if (that._root && that._root.children) {\n      dom = that._root.children;\n    } else {\n      return '';\n    }\n  } else if (typeof dom === 'string') {\n    dom = select(dom, that._root, options);\n  }\n\n  return serialize(dom, options);\n}\n\n/**\n * $.html([selector | dom], [options])\n */\n\nexports.html = function(dom, options) {\n  var Cheerio = require('./cheerio');\n\n  // be flexible about parameters, sometimes we call html(),\n  // with options as only parameter\n  // check dom argument for dom element specific properties\n  // assume there is no 'length' or 'type' properties in the options object\n  if (Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom))\n  {\n    options = dom;\n    dom = undefined;\n  }\n\n  // sometimes $.html() used without preloading html\n  // so fallback non existing options to the default ones\n  options = _.defaults(options || {}, this._options, Cheerio.prototype.options);\n\n  return render(this, dom, options);\n};\n\n/**\n * $.xml([selector | dom])\n */\n\nexports.xml = function(dom) {\n  var options = _.defaults({xmlMode: true}, this._options);\n\n  return render(this, dom, options);\n};\n\n/**\n * $.text(dom)\n */\n\nexports.text = function(elems) {\n  if (!elems) {\n    elems = this.root();\n  }\n\n  var ret = '',\n      len = elems.length,\n      elem;\n\n  for (var i = 0; i < len; i++) {\n    elem = elems[i];\n    if (elem.type === 'text') ret += elem.data;\n    else if (elem.children && elem.type !== 'comment') {\n      ret += exports.text(elem.children);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * $.parseHTML(data [, context ] [, keepScripts ])\n * Parses a string into an array of DOM nodes. The `context` argument has no\n * meaning for Cheerio, but it is maintained for API compatibility with jQuery.\n */\nexports.parseHTML = function(data, context, keepScripts) {\n  var parsed;\n\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n\n  parsed = this.load(data);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n\n  // The `children` array is used by Cheerio internally to group elements that\n  // share the same parents. When nodes created through `parseHTML` are\n  // inserted into previously-existing DOM structures, they will be removed\n  // from the `children` array. The results of `parseHTML` should remain\n  // constant across these operations, so a shallow copy should be returned.\n  return parsed.root()[0].children.slice();\n};\n\n/**\n * $.root()\n */\nexports.root = function() {\n  return this(this._root);\n};\n\n/**\n * $.contains()\n */\nexports.contains = function(container, contained) {\n\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n\n  // Step up the descendants, stopping when the root element is reached\n  // (signaled by `.parent` returning a reference to the same object)\n  while (contained && contained !== contained.parent) {\n    contained = contained.parent;\n    if (contained === container) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","render","that","dom","options","select","_root","children","serialize","parse","_","merge","defaults","load","exports.load","content","Cheerio","prototype","root","initialize","selector","context","r","opts","call","Object","create","constructor","fn","_originalRoot","_options","html","exports.html","toString","undefined","xml","exports.xml","xmlMode","text","exports.text","elems","ret","len","length","elem","i","type","data","parseHTML","exports.parseHTML","keepScripts","parsed","remove","slice","exports.root","contains","exports.contains","container","contained","parent"]
}
