{
"version":3,
"file":"module$node_modules$miller_rabin$lib$mr.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/miller-rabin/lib/mr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$miller_rabin$lib$mr\"] = function(global,process,require,module,exports,shadow$shims) {\nvar bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","MillerRabin","rand","brorand","Rand","bn","create","MillerRabin.create","prototype","_randbelow","MillerRabin.prototype._randbelow","n","len","bitLength","min_bytes","Math","ceil","a","generate","cmp","_randrange","MillerRabin.prototype._randrange","start","stop","size","sub","add","test","MillerRabin.prototype.test","k","cb","red","mont","rone","toRed","max","n1","subn","s","testn","d","shrn","rn1","x","redPow","i","redSqr","prime","getDivisor","MillerRabin.prototype.getDivisor","g","gcd","cmpn","fromRed"]
}
