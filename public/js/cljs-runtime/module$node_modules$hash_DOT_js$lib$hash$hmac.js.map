{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$hmac.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM/HC,QAASA,KAAI,CAACC,IAAD,CAAOC,GAAP,CAAYC,GAAZ,CAAiB,CAC5B,GAAI,EAAE,IAAF,WAAkBH,KAAlB,CAAJ,CACE,MAAO,KAAIA,IAAJ,CAASC,IAAT,CAAeC,GAAf,CAAoBC,GAApB,CACT,KAAAC,KAAA,CAAYH,IACZ,KAAAI,UAAA,CAAiBJ,IAAAI,UAAjB,CAAkC,CAClC,KAAAC,QAAA,CAAeL,IAAAK,QAAf,CAA8B,CAE9B,KAAAC,MAAA,CADA,IAAAC,MACA,CADa,IAGb,KAAAC,MAAA,CAAWC,KAAAC,QAAA,CAAcT,GAAd,CAAmBC,GAAnB,CAAX,CAT4B,CAH9B,IAAIO,MAAQd,OAAA,CAAQ,gDAAR,CAAZ,CACIgB,OAAShB,OAAA,CAAQ,+CAAR,CAabC,OAAAC,QAAA,CAAiBE,IAEjBA,KAAAa,UAAAJ,MAAA;AAAuBK,QAAa,CAACZ,GAAD,CAAM,CAEpCA,GAAAa,OAAJ,CAAiB,IAAAV,UAAjB,GACEH,GADF,CACQc,CAAA,IAAI,IAAAZ,KAAJY,QAAA,CAAuBd,GAAvB,CAAAe,OAAA,EADR,CAEAL,OAAA,CAAOV,GAAAa,OAAP,EAAqB,IAAAV,UAArB,CAGA,KAAK,IAAIa,EAAIhB,GAAAa,OAAb,CAAyBG,CAAzB,CAA6B,IAAAb,UAA7B,CAA6Ca,CAAA,EAA7C,CACEhB,GAAAiB,KAAA,CAAS,CAAT,CAEF,KAAKD,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBhB,GAAAa,OAAhB,CAA4BG,CAAA,EAA5B,CACEhB,GAAA,CAAIgB,CAAJ,CAAA,EAAU,EACZ,KAAAV,MAAA,CAAaQ,CAAA,IAAI,IAAAZ,KAAJY,QAAA,CAAuBd,GAAvB,CAGb,KAAKgB,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBhB,GAAAa,OAAhB,CAA4BG,CAAA,EAA5B,CACEhB,GAAA,CAAIgB,CAAJ,CAAA,EAAU,GACZ,KAAAX,MAAA,CAAaS,CAAA,IAAI,IAAAZ,KAAJY,QAAA,CAAuBd,GAAvB,CAjB2B,CAoB1CF,KAAAa,UAAAG,OAAA,CAAwBI,QAAe,CAACC,GAAD,CAAMlB,GAAN,CAAW,CAChD,IAAAK,MAAAQ,OAAA,CAAkBK,GAAlB,CAAuBlB,GAAvB,CACA,OAAO,KAFyC,CAKlDH,KAAAa,UAAAI,OAAA,CAAwBK,QAAe,CAACnB,GAAD,CAAM,CAC3C,IAAAI,MAAAS,OAAA,CAAkB,IAAAR,MAAAS,OAAA,EAAlB,CACA,OAAO,KAAAV,MAAAU,OAAA,CAAkBd,GAAlB,CAFoC,CA5CkF;",
"sources":["node_modules/hash_DOT_js/lib/hash/hmac.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$hmac\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Hmac","hash","key","enc","Hash","blockSize","outSize","outer","inner","_init","utils","toArray","assert","prototype","Hmac.prototype._init","length","update","digest","i","push","Hmac.prototype.update","msg","Hmac.prototype.digest"]
}
