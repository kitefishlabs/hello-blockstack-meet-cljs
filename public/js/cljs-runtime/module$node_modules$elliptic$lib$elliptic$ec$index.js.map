{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$ec$index.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/ec/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$ec$index\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","EC","options","assert","elliptic","curves","hasOwnProperty","PresetCurve","curve","n","nh","ushrn","g","precompute","bitLength","hash","BN","HmacDRBG","utils","KeyPair","Signature","prototype","keyPair","EC.prototype.keyPair","keyFromPrivate","EC.prototype.keyFromPrivate","priv","enc","fromPrivate","keyFromPublic","EC.prototype.keyFromPublic","pub","fromPublic","genKeyPair","EC.prototype.genKeyPair","drbg","pers","persEnc","entropy","rand","hmacStrength","entropyEnc","nonce","toArray","bytes","byteLength","ns2","sub","generate","cmp","iaddn","_truncateToN","EC.prototype._truncateToN","msg","truncOnly","delta","sign","EC.prototype.sign","key","bkey","getPrivate","ns1","iter","k","cmpn","kp","mul","isInfinity","kpX","getX","r","umod","s","invm","iadd","recoveryParam","getY","isOdd","canonical","verify","EC.prototype.verify","signature","sinv","u1","u2","_maxwellTrick","p","mulAdd","getPublic","jmulAdd","eqXToP","recoverPubKey","EC.prototype.recoverPubKey","j","e","isYOdd","isSecondKey","Error","pointFromX","add","rInv","s1","s2","getKeyRecoveryParam","EC.prototype.getKeyRecoveryParam","Q","i","Qprime","eq"]
}
