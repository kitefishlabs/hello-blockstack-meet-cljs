{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2pk.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrI,IAAMC,KAAOJ,OAAA,CAAQ,qDAAR,CAAb,CACMK,MAAQL,OAAA,CAAQ,qCAAR,CADd,CAEMM,IAAMN,OAAA,CAAQ,4CAAR,CAFZ,CAGMO,IAAMP,OAAA,CAAQ,2CAAR,CAHZ,CAKMQ,QAAUR,OAAA,CAAQ,8CAAR,CALhB,CAMMS,gBAAkBT,OAAA,CAAQ,gDAAR,CAAAU,QAyExBT;MAAAC,QAAA,CArEAS,QAAc,CAACC,CAAD,CAAIC,IAAJ,CAAU,CACtB,GACE,EAACD,CAAAE,MAAD,EACCF,CAAAG,OADD,EAECH,CAAAI,OAFD,EAGCJ,CAAAE,MAHD,EAICF,CAAAK,UAJD,CADF,CAME,KAAM,KAAIC,SAAJ,CAAc,iBAAd,CAAN,CACFL,IAAA,CAAOM,MAAAC,OAAA,CAAc,CAAEC,SAAU,CAAA,CAAZ,CAAd,CAAkCR,IAAlC,EAA0C,EAA1C,CAEPR,MAAA,CAAM,CACJiB,QAASjB,KAAAkB,MAAA,CAAYlB,KAAAc,OAAZ,CADL,CAEJJ,OAAQV,KAAAkB,MAAA,CAAYlB,KAAAmB,OAAZ,CAFJ,CAGJR,OAAQX,KAAAkB,MAAA,CAAYhB,GAAAkB,QAAZ,CAHJ,CAKJR,UAAWZ,KAAAkB,MAAA,CAAYf,OAAAkB,2BAAZ,CALP,CAMJZ,MAAOT,KAAAkB,MAAA,CAAYlB,KAAAmB,OAAZ,CANH,CAAN,CAOGZ,CAPH,CASA,KAAMe,QAAUvB,IAAAwB,MAAA,CAAW,QAAS,EAAG,CAAE,MAAOpB,QAAAqB,UAAA,CAAkBjB,CAAAE,MAAlB,CAAT,CAAvB,CAAhB,CAGMgB,EAAI,CAAER,QADIV,CAAAU,QACJA,EADiBb,eACnB,CAEVL,KAAA2B,KAAA,CAAUD,CAAV,CAAa,QAAb,CAAuB,QAAS,EAAG,CACjC,GAAKlB,CAAAI,OAAL,CACA,MAAOR,QAAAwB,QAAA,CAAgB,CACrBpB,CAAAI,OADqB;AAErBV,GAAA2B,YAFqB,CAAhB,CAF0B,CAAnC,CAOA7B,KAAA2B,KAAA,CAAUD,CAAV,CAAa,QAAb,CAAuB,QAAS,EAAG,CACjC,GAAKlB,CAAAG,OAAL,CACA,MAAOH,EAAAG,OAAAmB,MAAA,CAAe,CAAf,CAAmB,EAAnB,CAF0B,CAAnC,CAIA9B,KAAA2B,KAAA,CAAUD,CAAV,CAAa,WAAb,CAA0B,QAAS,EAAG,CACpC,GAAKlB,CAAAE,MAAL,CACA,MAAOa,QAAA,EAAA,CAAU,CAAV,CAF6B,CAAtC,CAIAvB,KAAA2B,KAAA,CAAUD,CAAV,CAAa,OAAb,CAAsB,QAAS,EAAG,CAChC,GAAKlB,CAAAK,UAAL,CACA,MAAOT,QAAAwB,QAAA,CAAgB,CAACpB,CAAAK,UAAD,CAAhB,CAFyB,CAAlC,CAIAb,KAAA2B,KAAA,CAAUD,CAAV,CAAa,SAAb,CAAwB,QAAS,EAAG,CAClC,GAAKA,CAAAhB,MAAL,CACA,MAAO,EAF2B,CAApC,CAMA,IAAID,IAAAQ,SAAJ,CAAmB,CACjB,GAAIT,CAAAG,OAAJ,CAAc,CACZ,GAAIH,CAAAG,OAAA,CAASH,CAAAG,OAAAoB,OAAT,CAA2B,CAA3B,CAAJ,GAAsC7B,GAAA2B,YAAtC,CAAuD,KAAM,KAAIf,SAAJ,CAAc,mBAAd,CAAN,CACvD,GAAI,CAACX,GAAAkB,QAAA,CAAYK,CAAAd,OAAZ,CAAL,CAA4B,KAAM,KAAIE,SAAJ,CAAc,0BAAd,CAAN,CAC5B,GAAIN,CAAAI,OAAJ;AAAgB,CAACJ,CAAAI,OAAAoB,OAAA,CAAgBN,CAAAd,OAAhB,CAAjB,CAA4C,KAAM,KAAIE,SAAJ,CAAc,iBAAd,CAAN,CAHhC,CAMd,GAAIN,CAAAK,UAAJ,EACML,CAAAE,MADN,EACiB,CAACF,CAAAE,MAAAsB,OAAA,CAAeN,CAAAhB,MAAf,CADlB,CAC2C,KAAM,KAAII,SAAJ,CAAc,oBAAd,CAAN,CAG3C,GAAIN,CAAAE,MAAJ,CAAa,CACX,GAAyB,CAAzB,GAAIa,OAAA,EAAAQ,OAAJ,CAA4B,KAAM,KAAIjB,SAAJ,CAAc,kBAAd,CAAN,CAC5B,GAAI,CAACV,OAAAkB,2BAAA,CAAmCI,CAAAb,UAAnC,CAAL,CAAsD,KAAM,KAAIC,SAAJ,CAAc,6BAAd,CAAN,CAF3C,CAXI,CAiBnB,MAAOC,OAAAC,OAAA,CAAcU,CAAd,CAAiBlB,CAAjB,CAlEe,CAX6G;",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2pk.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2pk\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\nconst ecc = require('tiny-secp256k1')\n\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\n\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\nfunction p2pk (a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !a.pubkey &&\n    !a.input &&\n    !a.signature\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.Buffer),\n    pubkey: typef.maybe(ecc.isPoint),\n\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    input: typef.maybe(typef.Buffer)\n  }, a)\n\n  const _chunks = lazy.value(function () { return bscript.decompile(a.input) })\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'output', function () {\n    if (!a.pubkey) return\n    return bscript.compile([\n      a.pubkey,\n      OPS.OP_CHECKSIG\n    ])\n  })\n  lazy.prop(o, 'pubkey', function () {\n    if (!a.output) return\n    return a.output.slice(1, -1)\n  })\n  lazy.prop(o, 'signature', function () {\n    if (!a.input) return\n    return _chunks()[0]\n  })\n  lazy.prop(o, 'input', function () {\n    if (!a.signature) return\n    return bscript.compile([a.signature])\n  })\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return\n    return []\n  })\n\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG) throw new TypeError('Output is invalid')\n      if (!ecc.isPoint(o.pubkey)) throw new TypeError('Output pubkey is invalid')\n      if (a.pubkey && !a.pubkey.equals(o.pubkey)) throw new TypeError('Pubkey mismatch')\n    }\n\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input)) throw new TypeError('Signature mismatch')\n    }\n\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid')\n      if (!bscript.isCanonicalScriptSignature(o.signature)) throw new TypeError('Input has invalid signature')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2pk\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","lazy","typef","OPS","ecc","bscript","BITCOIN_NETWORK","bitcoin","p2pk","a","opts","input","output","pubkey","signature","TypeError","Object","assign","validate","network","maybe","Buffer","isPoint","isCanonicalScriptSignature","_chunks","value","decompile","o","prop","compile","OP_CHECKSIG","slice","length","equals"]
}
