{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$edwards.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/edwards.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$edwards\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","EdwardsCurve","conf","extended","mOneA","twisted","a","Base","call","umod","BN","red","m","toRed","c","c2","redSqr","d","dd","redAdd","assert","fromRed","cmpn","oneC","Point","curve","x","y","z","t","BasePoint","zero","one","zOne","redMul","redInvm","elliptic","inherits","base","utils","prototype","_mulA","EdwardsCurve.prototype._mulA","num","redNeg","_mulC","EdwardsCurve.prototype._mulC","jpoint","EdwardsCurve.prototype.jpoint","point","pointFromX","EdwardsCurve.prototype.pointFromX","odd","x2","rhs","redSub","lhs","y2","redSqrt","cmp","Error","isOdd","pointFromY","EdwardsCurve.prototype.pointFromY","validate","EdwardsCurve.prototype.validate","isInfinity","normalize","pointFromJSON","EdwardsCurve.prototype.pointFromJSON","obj","fromJSON","EdwardsCurve.prototype.point","Point.fromJSON","inspect","Point.prototype.inspect","toString","Point.prototype.isInfinity","_extDbl","Point.prototype._extDbl","b","redIAdd","e","redISub","g","f","h","nx","ny","nt","nz","_projDbl","Point.prototype._projDbl","two","j","dbl","Point.prototype.dbl","_extAdd","Point.prototype._extAdd","p","_projAdd","Point.prototype._projAdd","tmp","add","Point.prototype.add","mul","Point.prototype.mul","k","_hasDoubles","_fixedNafMul","_wnafMul","mulAdd","Point.prototype.mulAdd","k1","k2","_wnafMulAdd","jmulAdd","Point.prototype.jmulAdd","Point.prototype.normalize","zi","neg","Point.prototype.neg","getX","Point.prototype.getX","getY","Point.prototype.getY","eq","Point.prototype.eq","other","eqXToP","Point.prototype.eqXToP","rx","xc","clone","redN","iadd","n","toP","mixedAdd"]
}
