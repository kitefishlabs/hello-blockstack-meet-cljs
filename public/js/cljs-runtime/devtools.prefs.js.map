{"version":3,"sources":["devtools/prefs.cljs"],"sourcesContent":["(ns devtools.prefs\n  (:require-macros [devtools.prefs :refer [emit-external-config emit-env-config]])\n  (:require [devtools.defaults :as defaults]))\n\n; we use delay for DCE, see https://github.com/binaryage/cljs-devtools/issues/37\n(def default-config (delay @defaults/config))\n(def external-config (delay (emit-external-config)))\n(def env-config (delay (emit-env-config)))\n(def initial-config (delay (merge @default-config @external-config @env-config)))\n\n(def ^:dynamic *current-config* (delay @initial-config))\n\n; -- public api -------------------------------------------------------------------------------------------------------------\n\n(defn set-prefs! [new-prefs]\n  (set! *current-config* new-prefs))\n\n(defn get-prefs []\n  (when (delay? *current-config*)\n    (set-prefs! @*current-config*))\n  *current-config*)\n\n(defn pref [key]\n  (key (get-prefs)))\n\n(defn set-pref! [key val]\n  (set-prefs! (assoc (get-prefs) key val)))\n\n(defn merge-prefs! [m]\n  (set-prefs! (merge (get-prefs) m)))\n\n(defn update-pref! [key f & args]\n  (let [new-val (apply f (pref key) args)]\n    (set-pref! key new-val)))\n"],"mappings":";;;AAKA,AAAKA,AAAe,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAQC;AAAR;AACpB,AAAKC,AAAgB,AAAAH,AAAA;AAAA,AAAO,AAAA;AAAP;AACrB,AAAKI,AAAW,AAAAJ,AAAA;AAAA,AAAO,AAAA;AAAP;AAChB,AAAKK,AAAe,AAAAL,AAAA;AAAA,AAAO,AAAA,AAAAC,AAAA,AAAAA,AAAA,AAAAA,AAACK,AAAOP,AAAgBI,AAAiBC;AAAhD;AAEpB,AAAeG,AAAiB,AAAAP,AAAA;AAAA,AAAA,AAAAC,AAAQI;AAAR;AAIhC,AAAA,AAAMG,AAAY;AAAlB,AACE,AAAMD,AAAiBE;;AAEzB,AAAA,AAAMC;AAAN,AACE,AAAM,AAACC,AAAOJ;AAAd,AACE,AAAA,AAAAN,AAACO,AAAYD;;AADf;;AAEAA;;AAEF,AAAA,AAAMK,AAAM;AAAZ,AACE,AAAA,AAAK,AAACF;AAAN,AAAA,AAAAG,AAAAA,AAACC,AAAAA,AAAAA;;AAEH,AAAA,AAAMC,AAAW,AAAI;AAArB,AACE,AAACP,AAAW,AAACQ,AAAM,AAACN,AAAWI,AAAIG;;AAErC,AAAA,AAAMC,AAAc;AAApB,AACE,AAACV,AAAW,AAACF,AAAM,AAACI,AAAWS;;AAEjC,AAAA,AAAA,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA;;AAAA,AAAA,AAAA,AAAAJ,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAF;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAAD,AAAA,AAAoB,AAAI,AAAI;AAA5B,AACE,AAAM,AAAQ,AAACQ,AAAMC,AAAE,AAACrB,AAAKE,AAAKoB;AAAlC,AACE,AAACnB,AAAUD,AAAIqB;;;AAFnB,AAAA,AAAAX,AAAA;;AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAA,AAAAD,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAE,AAAAC,AAAAC,AAAAJ;;;AAAA","names":["devtools.prefs/default-config","cljs.core/Delay","cljs.core/deref","devtools.defaults/config","devtools.prefs/external-config","devtools.prefs/env-config","devtools.prefs/initial-config","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devtools.prefs/*current-config*","devtools.prefs/set-prefs!","new-prefs","devtools.prefs/get-prefs","cljs.core/delay?","devtools.prefs/pref","G__12813","key","devtools.prefs/set-pref!","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","val","devtools.prefs/merge-prefs!","m","i__4642__auto__","len__4641__auto__","args__4647__auto__","cljs.core/IndexedSeq","devtools.prefs/update-pref!","argseq__4648__auto__","cljs.core/first","seq12818","cljs.core/next","self__4628__auto__","G__12819","G__12820","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","f","args","new-val"]}