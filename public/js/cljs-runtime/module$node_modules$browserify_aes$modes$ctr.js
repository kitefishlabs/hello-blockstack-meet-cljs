shadow$provide.module$node_modules$browserify_aes$modes$ctr=function(global,process,require,module,exports,shadow$shims){var xor=require("module$node_modules$buffer_xor$index"),Buffer=require("module$node_modules$safe_buffer$index").Buffer,incr32=require("module$node_modules$browserify_aes$incr32");exports.encrypt=function(self,chunk){var chunkNum=Math.ceil(chunk.length/16),start=self._cache.length;self._cache=Buffer.concat([self._cache,Buffer.allocUnsafe(16*chunkNum)]);for(var i=0;i<chunkNum;i++){var out=
self;var out$jscomp$0=out._cipher.encryptBlockRaw(out._prev);incr32(out._prev);out=out$jscomp$0;out$jscomp$0=start+16*i;self._cache.writeUInt32BE(out[0],out$jscomp$0+0);self._cache.writeUInt32BE(out[1],out$jscomp$0+4);self._cache.writeUInt32BE(out[2],out$jscomp$0+8);self._cache.writeUInt32BE(out[3],out$jscomp$0+12)}chunkNum=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,chunkNum)}}
//# sourceMappingURL=module$node_modules$browserify_aes$modes$ctr.js.map
