{
"version":3,
"file":"module$node_modules$blockstack$lib$profiles$profileSchemas$personLegacy.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/blockstack/lib/profiles/profileSchemas/personLegacy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$blockstack$lib$profiles$profileSchemas$personLegacy\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPersonFromLegacyFormat = getPersonFromLegacyFormat;\nfunction formatAccount(serviceName, data) {\n  var proofUrl = void 0;\n  if (data.proof && data.proof.url) {\n    proofUrl = data.proof.url;\n  }\n  return {\n    '@type': 'Account',\n    service: serviceName,\n    identifier: data.username,\n    proofType: 'http',\n    proofUrl: proofUrl\n  };\n}\n\nfunction getPersonFromLegacyFormat(profile) {\n  var profileData = {\n    '@type': 'Person'\n  };\n\n  if (profile) {\n    if (profile.name && profile.name.formatted) {\n      profileData.name = profile.name.formatted;\n    }\n\n    if (profile.bio) {\n      profileData.description = profile.bio;\n    }\n\n    if (profile.location && profile.location.formatted) {\n      profileData.address = {\n        '@type': 'PostalAddress',\n        addressLocality: profile.location.formatted\n      };\n    }\n\n    var images = [];\n    if (profile.avatar && profile.avatar.url) {\n      images.push({\n        '@type': 'ImageObject',\n        name: 'avatar',\n        contentUrl: profile.avatar.url\n      });\n    }\n    if (profile.cover && profile.cover.url) {\n      images.push({\n        '@type': 'ImageObject',\n        name: 'cover',\n        contentUrl: profile.cover.url\n      });\n    }\n    if (images.length) {\n      profileData.image = images;\n    }\n\n    if (profile.website) {\n      profileData.website = [{\n        '@type': 'WebSite',\n        url: profile.website\n      }];\n    }\n\n    var accounts = [];\n    if (profile.bitcoin && profile.bitcoin.address) {\n      accounts.push({\n        '@type': 'Account',\n        role: 'payment',\n        service: 'bitcoin',\n        identifier: profile.bitcoin.address\n      });\n    }\n    if (profile.twitter && profile.twitter.username) {\n      accounts.push(formatAccount('twitter', profile.twitter));\n    }\n    if (profile.facebook && profile.facebook.username) {\n      accounts.push(formatAccount('facebook', profile.facebook));\n    }\n    if (profile.github && profile.github.username) {\n      accounts.push(formatAccount('github', profile.github));\n    }\n\n    if (profile.auth) {\n      if (profile.auth.length > 0) {\n        if (profile.auth[0] && profile.auth[0].publicKeychain) {\n          accounts.push({\n            '@type': 'Account',\n            role: 'key',\n            service: 'bip32',\n            identifier: profile.auth[0].publicKeychain\n          });\n        }\n      }\n    }\n    if (profile.pgp && profile.pgp.url) {\n      accounts.push({\n        '@type': 'Account',\n        role: 'key',\n        service: 'pgp',\n        identifier: profile.pgp.fingerprint,\n        contentUrl: profile.pgp.url\n      });\n    }\n\n    profileData.account = accounts;\n  }\n\n  return profileData;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","formatAccount","serviceName","data","proofUrl","proof","url","service","identifier","username","proofType","Object","defineProperty","value","getPersonFromLegacyFormat","profile","profileData","name","formatted","bio","description","location","address","addressLocality","images","avatar","push","contentUrl","cover","length","image","website","accounts","bitcoin","role","twitter","facebook","github","auth","publicKeychain","pgp","fingerprint","account"]
}
