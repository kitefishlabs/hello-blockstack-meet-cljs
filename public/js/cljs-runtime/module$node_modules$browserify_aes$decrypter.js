shadow$provide.module$node_modules$browserify_aes$decrypter=function(global,process,require,module,exports,shadow$shims){function Decipher(mode,key,iv){Transform.call(this);this._cache=new Splitter;this._last=void 0;this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=!0}function Splitter(){this.cache=Buffer.allocUnsafe(0)}function createDecipheriv(suite,password,iv){suite=MODES[suite.toLowerCase()];if(!suite)throw new TypeError("invalid suite type");"string"===
typeof iv&&(iv=Buffer.from(iv));if("GCM"!==suite.mode&&iv.length!==suite.iv)throw new TypeError("invalid iv length "+iv.length);"string"===typeof password&&(password=Buffer.from(password));if(password.length!==suite.key/8)throw new TypeError("invalid key length "+password.length);return"stream"===suite.type?new StreamCipher(suite.module,password,iv,!0):"auth"===suite.type?new AuthCipher(suite.module,password,iv,!0):new Decipher(suite.module,password,iv)}var AuthCipher=require("module$node_modules$browserify_aes$authCipher"),
Buffer=require("module$node_modules$safe_buffer$index").Buffer,MODES=require("module$node_modules$browserify_aes$modes$index"),StreamCipher=require("module$node_modules$browserify_aes$streamCipher"),Transform=require("module$node_modules$cipher_base$index"),aes=require("module$node_modules$browserify_aes$aes"),ebtk=require("module$node_modules$evp_bytestokey$index");require("module$node_modules$inherits$inherits_browser")(Decipher,Transform);Decipher.prototype._update=function(data){this._cache.add(data);
var chunk;for(data=[];chunk=this._cache.get(this._autopadding);)chunk=this._mode.decrypt(this,chunk),data.push(chunk);return Buffer.concat(data)};Decipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){chunk=this._mode.decrypt(this,chunk);var padded=chunk[15];if(1>padded||16<padded)throw Error("unable to decrypt data");for(var i=-1;++i<padded;)if(chunk[i+(16-padded)]!==padded)throw Error("unable to decrypt data");chunk=16===padded?void 0:chunk.slice(0,16-padded);return chunk}if(chunk)throw Error("data not multiple of block length");
};Decipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this};Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data])};Splitter.prototype.get=function(autoPadding){if(autoPadding){if(16<this.cache.length)return autoPadding=this.cache.slice(0,16),this.cache=this.cache.slice(16),autoPadding}else if(16<=this.cache.length)return autoPadding=this.cache.slice(0,16),this.cache=this.cache.slice(16),autoPadding;return null};Splitter.prototype.flush=function(){if(this.cache.length)return this.cache};
exports.createDecipher=function(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError("invalid suite type");password=ebtk(password,!1,config.key,config.iv);return createDecipheriv(suite,password.key,password.iv)};exports.createDecipheriv=createDecipheriv}
//# sourceMappingURL=module$node_modules$browserify_aes$decrypter.js.map
