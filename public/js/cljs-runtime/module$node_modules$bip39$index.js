shadow$provide.module$node_modules$bip39$index=function(global,process,require,module,exports,shadow$shims){function lpad(str,padString,length){for(;str.length<length;)str=padString+str;return str}function binaryToByte(bin){return parseInt(bin,2)}function bytesToBinary(bytes){return bytes.map(function(x){return lpad(x.toString(2),"0",8)}).join("")}function deriveChecksumBits(entropyBuffer){var CS=8*entropyBuffer.length/32;entropyBuffer=createHash("sha256").update(entropyBuffer).digest();return bytesToBinary([].slice.call(entropyBuffer)).slice(0,
CS)}function salt(password){return"mnemonic"+(password||"")}function mnemonicToSeed(mnemonic,password){mnemonic=Buffer.from(unorm.nfkd(mnemonic),"utf8");password=Buffer.from(salt(unorm.nfkd(password)),"utf8");return pbkdf2(mnemonic,password,2048,64,"sha512")}function mnemonicToEntropy(mnemonic,wordlist){wordlist=wordlist||DEFAULT_WORDLIST;mnemonic=unorm.nfkd(mnemonic).split(" ");if(0!==mnemonic.length%3)throw Error("Invalid mnemonic");var bits=mnemonic.map(function(word){word=wordlist.indexOf(word);
if(-1===word)throw Error("Invalid mnemonic");return lpad(word.toString(2),"0",11)}).join(""),dividerIndex=32*Math.floor(bits.length/33);mnemonic=bits.slice(0,dividerIndex);bits=bits.slice(dividerIndex);mnemonic=mnemonic.match(/(.{1,8})/g).map(binaryToByte);if(16>mnemonic.length)throw Error("Invalid entropy");if(32<mnemonic.length)throw Error("Invalid entropy");if(0!==mnemonic.length%4)throw Error("Invalid entropy");mnemonic=Buffer.from(mnemonic);if(deriveChecksumBits(mnemonic)!==bits)throw Error("Invalid mnemonic checksum");
return mnemonic.toString("hex")}function entropyToMnemonic(entropy,wordlist){Buffer.isBuffer(entropy)||(entropy=Buffer.from(entropy,"hex"));wordlist=wordlist||DEFAULT_WORDLIST;if(16>entropy.length)throw new TypeError("Invalid entropy");if(32<entropy.length)throw new TypeError("Invalid entropy");if(0!==entropy.length%4)throw new TypeError("Invalid entropy");var entropyBits=bytesToBinary([].slice.call(entropy));entropy=deriveChecksumBits(entropy);entropyBits=(entropyBits+entropy).match(/(.{1,11})/g).map(function(binary){binary=
binaryToByte(binary);return wordlist[binary]});return wordlist===JAPANESE_WORDLIST?entropyBits.join("ã€€"):entropyBits.join(" ")}var Buffer=require("module$node_modules$safe_buffer$index").Buffer,createHash=require("module$node_modules$create_hash$browser"),pbkdf2=require("module$node_modules$pbkdf2$browser").pbkdf2Sync,randomBytes=require("module$node_modules$randombytes$browser"),unorm=require("module$node_modules$unorm$lib$unorm");global=require("module$node_modules$bip39$wordlists$chinese_simplified_json");
process=require("module$node_modules$bip39$wordlists$chinese_traditional_json");exports=require("module$node_modules$bip39$wordlists$english_json");shadow$shims=require("module$node_modules$bip39$wordlists$french_json");var ITALIAN_WORDLIST=require("module$node_modules$bip39$wordlists$italian_json"),JAPANESE_WORDLIST=require("module$node_modules$bip39$wordlists$japanese_json"),KOREAN_WORDLIST=require("module$node_modules$bip39$wordlists$korean_json");require=require("module$node_modules$bip39$wordlists$spanish_json");
var DEFAULT_WORDLIST=exports;module.exports={mnemonicToSeed:mnemonicToSeed,mnemonicToSeedHex:function(mnemonic,password){return mnemonicToSeed(mnemonic,password).toString("hex")},mnemonicToEntropy:mnemonicToEntropy,entropyToMnemonic:entropyToMnemonic,generateMnemonic:function(strength,rng,wordlist){strength=strength||128;if(0!==strength%32)throw new TypeError("Invalid entropy");rng=rng||randomBytes;return entropyToMnemonic(rng(strength/8),wordlist)},validateMnemonic:function(mnemonic,wordlist){try{mnemonicToEntropy(mnemonic,
wordlist)}catch(e){return!1}return!0},wordlists:{EN:exports,JA:JAPANESE_WORDLIST,chinese_simplified:global,chinese_traditional:process,english:exports,french:shadow$shims,italian:ITALIAN_WORDLIST,japanese:JAPANESE_WORDLIST,korean:KOREAN_WORDLIST,spanish:require}}}
//# sourceMappingURL=module$node_modules$bip39$index.js.map
