{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2ms.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2ms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2ms\"] = function(global,process,require,module,exports,shadow$shims) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\nconst ecc = require('tiny-secp256k1')\n\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\nconst OP_INT_BASE = OPS.OP_RESERVED // OP_1 - 1\n\nfunction stacksEqual (a, b) {\n  if (a.length !== b.length) return false\n\n  return a.every(function (x, i) {\n    return x.equals(b[i])\n  })\n}\n\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms (a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  function isAcceptableSignature (x) {\n    return bscript.isCanonicalScriptSignature(x) || (opts.allowIncomplete && (x === OPS.OP_0))\n  }\n\n  typef({\n    network: typef.maybe(typef.Object),\n    m: typef.maybe(typef.Number),\n    n: typef.maybe(typef.Number),\n    output: typef.maybe(typef.Buffer),\n    pubkeys: typef.maybe(typef.arrayOf(ecc.isPoint)),\n\n    signatures: typef.maybe(typef.arrayOf(isAcceptableSignature)),\n    input: typef.maybe(typef.Buffer)\n  }, a)\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  let chunks\n  let decoded = false\n  function decode (output) {\n    if (decoded) return\n    decoded = true\n    chunks = bscript.decompile(output)\n    o.m = chunks[0] - OP_INT_BASE\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE\n    o.pubkeys = chunks.slice(1, -2)\n  }\n\n  lazy.prop(o, 'output', function () {\n    if (!a.m) return\n    if (!o.n) return\n    if (!a.pubkeys) return\n    return bscript.compile([].concat(\n      OP_INT_BASE + a.m,\n      a.pubkeys,\n      OP_INT_BASE + o.n,\n      OPS.OP_CHECKMULTISIG\n    ))\n  })\n  lazy.prop(o, 'm', function () {\n    if (!o.output) return\n    decode(o.output)\n    return o.m\n  })\n  lazy.prop(o, 'n', function () {\n    if (!o.pubkeys) return\n    return o.pubkeys.length\n  })\n  lazy.prop(o, 'pubkeys', function () {\n    if (!a.output) return\n    decode(a.output)\n    return o.pubkeys\n  })\n  lazy.prop(o, 'signatures', function () {\n    if (!a.input) return\n    return bscript.decompile(a.input).slice(1)\n  })\n  lazy.prop(o, 'input', function () {\n    if (!a.signatures) return\n    return bscript.compile([OPS.OP_0].concat(a.signatures))\n  })\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return\n    return []\n  })\n\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output)\n      if (!typef.Number(chunks[0])) throw new TypeError('Output is invalid')\n      if (!typef.Number(chunks[chunks.length - 2])) throw new TypeError('Output is invalid')\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) throw new TypeError('Output is invalid')\n\n      if (\n        o.m <= 0 ||\n        o.n > 16 ||\n        o.m > o.n ||\n        o.n !== chunks.length - 3) throw new TypeError('Output is invalid')\n      if (!o.pubkeys.every(x => ecc.isPoint(x))) throw new TypeError('Output is invalid')\n\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch')\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch')\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys)) throw new TypeError('Pubkeys mismatch')\n    }\n\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length) throw new TypeError('Pubkey count mismatch')\n      o.n = a.pubkeys.length\n\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m')\n    }\n\n    if (a.signatures) {\n      if (a.signatures.length < o.m) throw new TypeError('Not enough signatures provided')\n      if (a.signatures.length > o.m) throw new TypeError('Too many signatures provided')\n    }\n\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid')\n      if (o.signatures.length === 0 || !o.signatures.every(isAcceptableSignature)) throw new TypeError('Input has invalid signature(s)')\n\n      if (a.signatures && !stacksEqual(a.signatures.equals(o.signatures))) throw new TypeError('Signature mismatch')\n      if (a.m !== undefined && a.m !== a.signatures.length) throw new TypeError('Signature count mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2ms\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","stacksEqual","a","b","length","every","x","i","equals","lazy","typef","OPS","ecc","bscript","BITCOIN_NETWORK","bitcoin","OP_INT_BASE","OP_RESERVED","p2ms","opts","isAcceptableSignature","isCanonicalScriptSignature","allowIncomplete","OP_0","decode","output","decoded","chunks","decompile","o","m","n","pubkeys","slice","input","undefined","signatures","TypeError","Object","assign","validate","network","maybe","Number","Buffer","arrayOf","isPoint","prop","compile","concat","OP_CHECKMULTISIG"]
}
