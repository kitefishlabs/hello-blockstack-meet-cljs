{
"version":3,
"file":"module$node_modules$jsontokens$lib$verifier.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/jsontokens/lib/verifier.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jsontokens$lib$verifier\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TokenVerifier = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base64url = require('base64url');\n\nvar _base64url2 = _interopRequireDefault(_base64url);\n\nvar _cryptoClients = require('./cryptoClients');\n\nvar _decode = require('./decode');\n\nvar _decode2 = _interopRequireDefault(_decode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TokenVerifier = exports.TokenVerifier = function () {\n    function TokenVerifier(signingAlgorithm, rawPublicKey) {\n        _classCallCheck(this, TokenVerifier);\n\n        if (!(signingAlgorithm && rawPublicKey)) {\n            throw new MissingParametersError('a signing algorithm and public key are required');\n        }\n        if (typeof signingAlgorithm !== 'string') {\n            throw 'signing algorithm parameter must be a string';\n        }\n        signingAlgorithm = signingAlgorithm.toUpperCase();\n        if (!_cryptoClients.cryptoClients.hasOwnProperty(signingAlgorithm)) {\n            throw 'invalid signing algorithm';\n        }\n        this.tokenType = 'JWT';\n        this.cryptoClient = _cryptoClients.cryptoClients[signingAlgorithm];\n        this.rawPublicKey = rawPublicKey;\n    }\n\n    _createClass(TokenVerifier, [{\n        key: 'verify',\n        value: function verify(token) {\n            if (typeof token === 'string') {\n                return this.verifyCompact(token);\n            } else if ((typeof token === 'undefined' ? 'undefined' : _typeof(token)) === 'object') {\n                return this.verifyExpanded(token);\n            } else {\n                return false;\n            }\n        }\n    }, {\n        key: 'verifyCompact',\n        value: function verifyCompact(token) {\n            // decompose the token into parts\n            var tokenParts = token.split('.');\n\n            // calculate the signing input hash\n            var signingInput = tokenParts[0] + '.' + tokenParts[1];\n            var signingInputHash = this.cryptoClient.createHash(signingInput);\n\n            // extract the signature as a DER array\n            var derSignatureBuffer = this.cryptoClient.loadSignature(tokenParts[2]);\n\n            // verify the signed hash\n            return this.cryptoClient.verifyHash(signingInputHash, derSignatureBuffer, this.rawPublicKey);\n        }\n    }, {\n        key: 'verifyExpanded',\n        value: function verifyExpanded(token) {\n            var _this = this;\n\n            var signingInput = [token[\"header\"].join('.'), _base64url2.default.encode(token[\"payload\"])].join('.');\n            var signingInputHash = this.cryptoClient.createHash(signingInput);\n\n            var verified = true;\n\n            token[\"signature\"].map(function (signature) {\n                var derSignatureBuffer = _this.cryptoClient.loadSignature(signature);\n                var signatureVerified = _this.cryptoClient.verifyHash(signingInputHash, derSignatureBuffer, _this.rawPublicKey);\n                if (!signatureVerified) {\n                    verified = false;\n                }\n            });\n\n            return verified;\n        }\n    }]);\n\n    return TokenVerifier;\n}();\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","TokenVerifier","undefined","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","_base64url2","_base64url","__esModule","default","_cryptoClients","signingAlgorithm","rawPublicKey","instance","TypeError","MissingParametersError","toUpperCase","cryptoClients","hasOwnProperty","tokenType","cryptoClient","verify","token","verifyCompact","verifyExpanded","tokenParts","split","signingInputHash","createHash","derSignatureBuffer","loadSignature","verifyHash","_this","signingInput","join","encode","verified","map","signature","signatureVerified"]
}
